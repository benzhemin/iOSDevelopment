/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSString;

@interface UIKBGeometry : NSObject <NSCoding, NSCopying> {
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    struct { 
        float amount; 
        int unit; 
    BOOL m_explicitlySpecified;
    } m_h;
    NSString *m_name;
    } m_paddingBottom;
    } m_paddingLeft;
    } m_paddingRight;
    } m_paddingTop;
    } m_w;
    } m_x;
    } m_y;
}

@property BOOL explicitlySpecified;
@property(setter=setH:) struct { float x1; int x2; } h;
@property(retain) NSString * name;
@property(setter=setPaddingBottom:) struct { float x1; int x2; } paddingBottom;
@property(setter=setPaddingLeft:) struct { float x1; int x2; } paddingLeft;
@property(setter=setPaddingRight:) struct { float x1; int x2; } paddingRight;
@property(setter=setPaddingTop:) struct { float x1; int x2; } paddingTop;
@property(setter=setW:) struct { float x1; int x2; } w;
@property(setter=setX:) struct { float x1; int x2; } x;
@property(setter=setY:) struct { float x1; int x2; } y;

+ (id)codeStringForValue:(struct { float x1; int x2; })arg1;
+ (id)geometry;
+ (id)geometryWithOriginValue:(struct { float x1; int x2; })arg1 sizeValue:(struct { float x1; int x2; })arg2;
+ (id)geometryWithRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)explicitlySpecified;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frame;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameWithContainingFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct { float x1; int x2; })h;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 rect:(struct { struct { float x_1_1_1; int x_1_1_2; } x1[4]; })arg2 padding:(struct { struct { float x_1_1_1; int x_1_1_2; } x1[4]; })arg3;
- (BOOL)isEqual:(id)arg1;
- (id)name;
- (id)overrideGeometry:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })paddedFrameWithContainingFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })paddedFrameWithResolvedFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (struct { float x1; int x2; })paddingBottom;
- (struct { float x1; int x2; })paddingLeft;
- (struct { float x1; int x2; })paddingRight;
- (struct { float x1; int x2; })paddingTop;
- (void)setExplicitlySpecified:(BOOL)arg1;
- (void)setH:(struct { float x1; int x2; })arg1;
- (void)setName:(id)arg1;
- (void)setPaddingBottom:(struct { float x1; int x2; })arg1;
- (void)setPaddingLeft:(struct { float x1; int x2; })arg1;
- (void)setPaddingRight:(struct { float x1; int x2; })arg1;
- (void)setPaddingTop:(struct { float x1; int x2; })arg1;
- (void)setW:(struct { float x1; int x2; })arg1;
- (void)setX:(struct { float x1; int x2; })arg1;
- (void)setY:(struct { float x1; int x2; })arg1;
- (id)shortDescription;
- (BOOL)usesAutomaticMetrics;
- (BOOL)usesPercentages;
- (struct { float x1; int x2; })w;
- (struct { float x1; int x2; })x;
- (struct { float x1; int x2; })y;

@end
