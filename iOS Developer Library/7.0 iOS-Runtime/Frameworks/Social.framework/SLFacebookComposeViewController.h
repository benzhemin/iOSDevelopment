/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Social.framework/Social
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class ACAccount, ACAccountStore, ALAssetsLibrary, CLInUseAssertion, NSString, SLComposeSheetConfigurationItem, SLFacebookAlbumChooserViewController, SLFacebookAlbumManager, SLFacebookPlaceManager, SLFacebookPost, SLFacebookPostPrivacyManager, SLFacebookSession, SLFacebookVideoOptionsViewController, SLSheetPlaceViewController, SLVideoQualityOption, UIViewController<SLFacebookAudienceViewController>;

@interface SLFacebookComposeViewController : SLComposeServiceViewController <SLFacebookAudienceViewControllerDelegate, SLFacebookAlbumChooserViewControllerDelegate, SLFacebookVideoOptionsDelegate, SLPlaceDataSourceDelegate, SLSheetPlaceViewControllerDelegate> {
    struct { 
        unsigned int showAlbumAction : 1; 
        unsigned int showPrivacyAction : 1; 
        unsigned int showPlaceAction : 1; 
        unsigned int showVideoDetailAction : 1; 
    ACAccountStore *_accountStore;
    } _actionFlags;
    SLFacebookAlbumChooserViewController *_albumChooserViewController;
    SLComposeSheetConfigurationItem *_albumConfigurationItem;
    SLFacebookAlbumManager *_albumManager;
    ALAssetsLibrary *_assetsLibrary;
    UIViewController<SLFacebookAudienceViewController> *_audienceViewController;
    id _completionHandler;
    BOOL _didFetchPrivilegedAccount;
    BOOL _hasAccessToAccount;
    BOOL _hasCheckedAccess;
    BOOL _hasShowedLocationDeniedAlert;
    CLInUseAssertion *_locationInUseAssertion;
    SLComposeSheetConfigurationItem *_placeConfigurationItem;
    SLFacebookPlaceManager *_placeManager;
    SLSheetPlaceViewController *_placeViewController;
    SLFacebookPost *_post;
    SLFacebookPostPrivacyManager *_postPrivacyManager;
    SLComposeSheetConfigurationItem *_privacyConfigurationItem;
    ACAccount *_privilegedAccount;
    SLVideoQualityOption *_selectedVideoQualityOption;
    SLFacebookSession *_session;
    SLComposeSheetConfigurationItem *_videoOptionsConfigurationItem;
    SLFacebookVideoOptionsViewController *_videoOptionsViewController;
}

@property(retain) ACAccountStore * accountStore;
@property(copy) id completionHandler;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int hash;
@property(readonly) ACAccount * privilegedAccount;
@property(readonly) Class superclass;

+ (id)serviceBundle;

- (void).cxx_destruct;
- (id)_albumConfigurationItem;
- (void)_handlePostPrivacyResultWithSuccess:(BOOL)arg1 error:(id)arg2;
- (void)_hostApplicationDidEnterBackground;
- (void)_hostApplicationWillEnterForeground;
- (BOOL)_isLocationAuthorizationDenied;
- (id)_placeConfigurationItem;
- (id)_postPrivacyManager;
- (void)_presentAlbumViewController;
- (void)_presentAudienceViewController;
- (void)_presentFacebookDisabledAlert;
- (void)_presentNoAccountsAlert;
- (void)_presentPlaceViewController;
- (void)_presentVideoOptionsViewController;
- (id)_privacyConfigurationItem;
- (void)_setPlace:(id)arg1;
- (void)_setVideoSizeOptionIdentifier:(id)arg1;
- (void)_updateAlbumConfigurationItemWithDefaultAlbum;
- (void)_updatePrivacyConfigurationItemWithDefaultPrivacySetting;
- (id)_videoOptionIdentifer;
- (id)_videoOptionsConfigurationItem;
- (id)_videoQualityOption;
- (id)accountStore;
- (void)albumChooserViewController:(id)arg1 didSelectAlbum:(id)arg2;
- (id)albumManager;
- (void)audienceViewController:(id)arg1 didSelectPostPrivacySetting:(id)arg2;
- (void)callCompletionHandlerWithResult:(int)arg1;
- (id)completionHandler;
- (id)configurationItems;
- (void)didReceiveMemoryWarning;
- (void)didSelectPost;
- (void)handleImagePostWithURL;
- (BOOL)hasAccountAccess;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (BOOL)isContentValid;
- (void)placeManager:(id)arg1 failedWithError:(id)arg2;
- (void)placeManager:(id)arg1 updatedPlaces:(id)arg2;
- (void)placeViewController:(id)arg1 didSelectPlace:(id)arg2;
- (void)presentationAnimationDidFinish;
- (id)privilegedAccount;
- (void)setAccountStore:(id)arg1;
- (void)setCompletionHandler:(id)arg1;
- (void)setupCommonUI;
- (void)videoOptionsViewController:(id)arg1 didSelectVideoQualityOption:(id)arg2;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewWillAppear:(BOOL)arg1;
- (void)viewWillDisappear:(BOOL)arg1;

@end
