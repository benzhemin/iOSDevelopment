/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class <TSCHStyleActAlike>, NSArray, NSMutableArray, NSMutableDictionary, NSString, TSCHChartDrawableInfo, TSCHChartLayoutCache, TSCHChartMediator, TSCHChartModel, TSCHChartStylePreset, TSCHChartType, TSCHLegendModel, TSDInfoGeometry, TSPLazyReference;

@interface TSCHChartInfo : NSObject <TSCHStyleOwning, TSCHUnretainedParent, TSDMixing, NSCopying> {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGPoint { 
        float x; 
        float y; 
    NSMutableArray *mCategoryAxisNonStyles;
    NSMutableArray *mCategoryAxisStyles;
    TSCHChartMediator *mChartMediator;
    TSCHChartType *mChartType;
    BOOL mDisplayMessageOnRepCreation;
    TSCHChartDrawableInfo *mDrawableInfo;
    } mInnerChartFrame;
    NSString *mLastAppliedFillSetLookupString;
    unsigned int mLastSeriesIndex;
    TSPLazyReference *mLazyPreset;
    TSCHLegendModel *mLegendModel;
    <TSCHStyleActAlike> *mLegendNonStyle;
    <TSCHStyleActAlike> *mLegendStyle;
    double mMessageDuration;
    NSString *mMessageString;
    TSCHChartModel *mModel;
    BOOL mNeedsCalcEngineDependentImport;
    BOOL mNeedsCalcEngineDependentUpgrade;
    TSDInfoGeometry *mNonInfoGeometry;
    <TSCHStyleActAlike> *mNonStyle;
    NSMutableArray *mParagraphStyles;
    } mPreviewOrigin;
    NSMutableArray *mPrivateSeriesStyles;
    NSMutableArray *mSeriesNonStyles;
    <TSCHStyleActAlike> *mStyle;
    NSMutableDictionary *mStyleViewProxyMap;
    NSArray *mStyleViewProxyParagraphStyleArray;
    NSMutableArray *mThemeSeriesStyles;
    NSMutableArray *mValueAxisNonStyles;
    NSMutableArray *mValueAxisStyles;
}

@property(retain) TSCHChartType * chartType;
@property(copy,readonly) NSString * debugDescription;
@property struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; } defaultLayoutSettings;
@property(copy,readonly) NSString * description;
@property BOOL displayMessageOnRepCreation;
@property(readonly) TSCHChartDrawableInfo * drawableInfo;
@property(copy) TSDInfoGeometry * geometry;
@property(readonly) int gridDirection;
@property(readonly) BOOL hasSetDefaultLayoutSettings;
@property(readonly) unsigned int hash;
@property double informationalMessageDuration;
@property(retain) NSString * informationalMessageString;
@property(readonly) BOOL isPhantom;
@property(copy) NSString * lastAppliedFillSetLookupString;
@property(retain) TSCHLegendModel * legend;
@property(retain) TSCHChartMediator * mediator;
@property(readonly) struct CGSize { float x1; float x2; } minimumChartBodySize;
@property(retain) TSCHChartModel * model;
@property(readonly) TSCHChartStylePreset * preset;
@property struct CGPoint { float x1; float x2; } previewOrigin;
@property(readonly) TSCHChartLayoutCache * sceneAreaLayoutItemCache;
@property(readonly) Class superclass;
@property(readonly) BOOL wantsDeferredUpgradeOrImport;

+ (int)adjustNumberFormatType:(int)arg1 forChartModel:(id)arg2 gridValueType:(int)arg3 hasCustomFormat:(BOOL)arg4;
+ (id)adjustNumberFormatTypeValue:(id)arg1 forChartModel:(id)arg2 gridValueType:(int)arg3 hasCustomFormat:(BOOL)arg4;
+ (double)beginValueForStackedBarSeries:(id)arg1 index:(unsigned int)arg2 unitSpaceIntercept:(double)arg3 relativelyPositive:(BOOL)arg4 valueAxis:(id)arg5;
+ (id)categoryAxisStyleIdentifierForRoleIndex:(unsigned int)arg1 ordinal:(unsigned int)arg2;
+ (id)chartStyleIdentifierForRoleIndex:(unsigned int)arg1;
+ (Class)classForAxisNonstyle;
+ (Class)classForAxisStyle;
+ (Class)classForChartNonstyle;
+ (Class)classForChartStyle;
+ (Class)classForLegendNonstyle;
+ (Class)classForLegendStyle;
+ (Class)classForSeriesNonstyle;
+ (Class)classForSeriesStyle;
+ (id)genericParagraphStyleIndexProperties;
+ (BOOL)groupedShadowsForChartModel:(id)arg1;
+ (id)legendStyleIdentifierForRoleIndex:(unsigned int)arg1;
+ (id)p_chartTypeTo3DScalePropertyPairs;
+ (id)p_currentThreadSceneAreaLayoutCache;
+ (id)p_stylesheetFromOrderedArrayOfSources:(id)arg1;
+ (id)paragraphStyleIdentifierForRoleIndex:(unsigned int)arg1 ordinal:(unsigned int)arg2;
+ (id)paragraphStyleIndexProperties;
+ (id)paragraphStylePropertiesChartsUse;
+ (id)propertiesThatInvalidateModel;
+ (id)scale3DPropertyToConstantDepthInfoChartScaleMappingsWithBarShape:(int)arg1 conversionBlock:(id)arg2;
+ (id)seriesStyleIdentifierForRoleIndex:(unsigned int)arg1 ordinal:(unsigned int)arg2;
+ (void)setCurrentThreadSceneAreaLayoutCache:(id)arg1;
+ (id)specificNumberFormatTypeProperties;
+ (id)specificPropertiesThatCanContainCustomDateFormats;
+ (id)specificPropertiesThatCanContainCustomFormats;
+ (id)specificPropertiesThatCanContainCustomNumberFormats;
+ (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2 forStyleOwner:(id)arg3;
+ (id)valueAxisStyleIdentifierForRoleIndex:(unsigned int)arg1 ordinal:(unsigned int)arg2;

- (unsigned int)addParagraphStyle:(id)arg1;
- (void)addViewStyleProxyForMutationTuples:(id)arg1 layouts:(id)arg2;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)allStyleOwners;
- (void)applyChartStyleState:(id)arg1;
- (id)applyStyleSwapTuples:(id)arg1;
- (id)categoryAxisNonstyleAtIndex:(unsigned int)arg1;
- (id)categoryAxisStyleAtIndex:(unsigned int)arg1;
- (unsigned int)categoryAxisStyleCount;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })chartBodyBoundsForSageImportWithSageChartType:(BOOL)arg1;
- (void)chartDidInvalidateWithProperties:(id)arg1;
- (id)chartInfo;
- (void)chartMoveToPosition:(struct CGPoint { float x1; float x2; })arg1 size:(struct CGSize { float x1; float x2; })arg2;
- (id)chartStyleState;
- (id)chartType;
- (void)chartTypeDidChangeWithDetails:(id)arg1;
- (id)childCommandForApplyThemeCommand:(id)arg1;
- (id)childInfos;
- (void)clearParent;
- (void)clearViewStyleProxyForLayouts:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (id)commandSetCategoryName:(id)arg1 forCategoryIndex:(unsigned int)arg2;
- (id)commandSetSeriesName:(id)arg1 forSeriesIndex:(unsigned int)arg2;
- (id)commandToApplyViewProxiesToModel;
- (id)commandToChangeAllChartFontsToFamilyName:(id)arg1;
- (id)commandToScaleAllChartFontsBy:(float)arg1;
- (id)context;
- (id)copyWithContext:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1 context:(id)arg2;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)create3DSceneWithLayoutSettings:(const struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; }*)arg1;
- (void)dealloc;
- (void)debugLayoutCache;
- (struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; })defaultLayoutSettings;
- (id)defaultProperties;
- (int)defaultPropertyForGeneric:(int)arg1;
- (BOOL)displayMessageOnRepCreation;
- (id)drawableInfo;
- (int)elementKind;
- (id)fillsForSeriesAndTheme;
- (float)floatValueForProperty:(int)arg1 defaultValue:(float)arg2;
- (id)g_genericToDefaultPropertyMap;
- (id)geometry;
- (int)gridDirection;
- (BOOL)hasFloatValueForProperty:(int)arg1 value:(float*)arg2;
- (BOOL)hasIntValueForProperty:(int)arg1 value:(int*)arg2;
- (BOOL)hasObjectValueForProperty:(int)arg1 value:(id*)arg2;
- (BOOL)hasSetDefaultLayoutSettings;
- (id)infoGeometryForDesiredCircumscribingGeometry:(id)arg1;
- (id)infoGeometryForDesiredPureLayoutGeometry:(id)arg1;
- (id)infoGeometryForVisuallyCenteringOnUnscaledCanvasPoint:(struct CGPoint { float x1; float x2; })arg1;
- (double)informationalMessageDuration;
- (id)informationalMessageString;
- (id)init;
- (id)initWithChartType:(id)arg1 legendShowing:(id)arg2 chartBodyFrame:(id)arg3 chartAreaFrame:(id)arg4 circumscribingFrame:(id)arg5 legendFrame:(id)arg6 stylePreset:(id)arg7 privateSeriesStyles:(id)arg8 chartNonStyle:(id)arg9 legendNonStyle:(id)arg10 valueAxisNonStyles:(id)arg11 categoryAxisNonStyles:(id)arg12 seriesNonStyles:(id)arg13;
- (int)intValueForProperty:(int)arg1 defaultValue:(int)arg2;
- (BOOL)isEquivalentForCrossDocumentPasteMasterComparison:(id)arg1;
- (BOOL)isPhantom;
- (BOOL)isSingleCircleSpecialCase;
- (BOOL)isSingleCircleSpecialCaseOutSeries:(id*)arg1;
- (id)lastAppliedFillSetLookupString;
- (Class)layoutClass;
- (id)legend;
- (id)legendNonStyle;
- (id)legendStyle;
- (void)loadFromPreUFFArchive:(const struct ChartInfoArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct DrawableArchive {} *x3; struct ChartModelArchive {} *x4; struct Reference {} *x5; struct LegendModelArchive {} *x6; struct RectArchive {} *x7; struct RepeatedPtrField<TSP::Reference> { void **x_8_1_1; int x_8_1_2; int x_8_1_3; int x_8_1_4; } x8; struct RepeatedPtrField<TSP::Reference> { void **x_9_1_1; int x_9_1_2; int x_9_1_3; int x_9_1_4; } x9; struct RepeatedPtrField<TSP::Reference> { void **x_10_1_1; int x_10_1_2; int x_10_1_3; int x_10_1_4; } x10; struct RepeatedPtrField<TSP::Reference> { void **x_11_1_1; int x_11_1_2; int x_11_1_3; int x_11_1_4; } x11; struct RepeatedPtrField<TSP::Reference> { void **x_12_1_1; int x_12_1_2; int x_12_1_3; int x_12_1_4; } x12; int x13; int x14; struct SparseReferenceArrayArchive {} *x15; struct SparseReferenceArrayArchive {} *x16; struct Reference {} *x17; struct Reference {} *x18; struct Point {} *x19; struct Reference {} *x20; struct RepeatedPtrField<TSP::Reference> { void **x_21_1_1; int x_21_1_2; int x_21_1_3; int x_21_1_4; } x21; int x22; int x23; boolx24; int x25; unsigned int x26[1]; }*)arg1 unarchiver:(id)arg2 persistentChartInfo:(id)arg3;
- (void)loadFromUnityArchive:(const struct ChartArchive { int (**x1)(); struct ExtensionSet { struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_2_1_1; } x2; struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_3_1_1; } x3; int x4; int x5; struct RectArchive {} *x6; struct Reference {} *x7; struct ChartGridArchive {} *x8; struct Reference {} *x9; struct Reference {} *x10; struct Reference {} *x11; int x12; boolx13; boolx14; struct Reference {} *x15; struct Reference {} *x16; struct RepeatedPtrField<TSP::Reference> { void **x_17_1_1; int x_17_1_2; int x_17_1_3; int x_17_1_4; } x17; struct RepeatedPtrField<TSP::Reference> { void **x_18_1_1; int x_18_1_2; int x_18_1_3; int x_18_1_4; } x18; struct RepeatedPtrField<TSP::Reference> { void **x_19_1_1; int x_19_1_2; int x_19_1_3; int x_19_1_4; } x19; struct RepeatedPtrField<TSP::Reference> { void **x_20_1_1; int x_20_1_2; int x_20_1_3; int x_20_1_4; } x20; struct RepeatedPtrField<TSP::Reference> { void **x_21_1_1; int x_21_1_2; int x_21_1_3; int x_21_1_4; } x21; struct SparseReferenceArrayArchive {} *x22; struct SparseReferenceArrayArchive {} *x23; struct RepeatedPtrField<TSP::Reference> { void **x_24_1_1; int x_24_1_2; int x_24_1_3; int x_24_1_4; } x24; unsigned int x25; int x26; unsigned int x27[1]; }*)arg1 unarchiver:(id)arg2 persistentChartInfo:(id)arg3;
- (id)masterFontNameForInspectors;
- (float)maximumExplosion;
- (float)maximumExplosionOfAllSeriesExcept:(id)arg1;
- (id)mediator;
- (float)minFrameDimensionForRadius:(float)arg1 withMaxExplosion:(float)arg2;
- (struct CGSize { float x1; float x2; })minimumChartBodySize;
- (id)mixedObjectWithFraction:(float)arg1 ofObject:(id)arg2;
- (int)mixingTypeWithObject:(id)arg1;
- (id)model;
- (void)modelDidInvalidateWithDetails:(id)arg1;
- (id)modelForDataSetIndex:(unsigned int)arg1;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned int)arg1 forTheme:(id)arg2;
- (id)newChartStylePresetByExampleWithPresetIndex:(unsigned int)arg1 withSeriesCount:(unsigned int)arg2 forTheme:(id)arg3;
- (id)nonStyleForAxis:(id)arg1;
- (id)nonStyleForSeries:(id)arg1;
- (unsigned int)nonStyleIndexForStyleOwnerRef:(id)arg1;
- (id)nonstyle;
- (unsigned int)numberOfThemeSeriesStyles;
- (id)objectValueForProperty:(int)arg1;
- (id)p_allStylesAndNonStylesThatCanHaveCustomNumberFormats;
- (void)p_breakUpFontName:(id)arg1 isBold:(BOOL*)arg2 isItalic:(BOOL*)arg3;
- (id)p_copyNonStyleArray:(id)arg1 inContext:(id)arg2;
- (id)p_copyStyleAndNonStyleArray:(id)arg1 withZone:(struct _NSZone { }*)arg2 context:(id)arg3;
- (id)p_copyStyleArray:(id)arg1 inContext:(id)arg2 withMapper:(id)arg3;
- (float)p_dataSetNameAccomodationWithOptionalLayout:(id)arg1;
- (void)p_duplicatePersistableMembersOfCopiedChartUsingContext:(id)arg1;
- (id)p_genericToDefaultPropertyMap;
- (id)p_infoGeometryForGeometry:(id)arg1 isCircumscribing:(BOOL)arg2;
- (id)p_init;
- (void)p_invalidateCachesInLayouts:(id)arg1;
- (unsigned int)p_paragraphStyleIndexOfFirstCategoryAxisParagraphStyle;
- (void)p_setChartType:(id)arg1 andSetLegendDefaults:(BOOL)arg2 gridRowIds:(id)arg3 gridColumnIds:(id)arg4;
- (void)p_setChartType:(id)arg1 andSetLegendDefaults:(BOOL)arg2;
- (void)p_setDrawableInfo:(id)arg1;
- (id)p_swapTuplesForApplyingPreset:(id)arg1 preservingAppearance:(BOOL)arg2;
- (id)p_swapTuplesForApplyingPresetRemovingOverrides:(id)arg1;
- (id)p_swapTuplesForMutations:(id)arg1 isForImport:(BOOL)arg2;
- (float)p_titleAccommodationWithLegendSize:(struct CGSize { float x1; float x2; })arg1 optionalLayout:(id)arg2;
- (id)paragraphStyleAtIndex:(unsigned int)arg1;
- (id)paragraphStyleForSelectionPath:(id)arg1;
- (int)paragraphStylePropertyForSelectionPath:(id)arg1;
- (id)paragraphStyles;
- (void)performBlockWithStylesheetForAddingStyles:(id)arg1;
- (void)performDeferredUpgradeAndImportOperations;
- (void)performUpgradeForPersistentChartInfo:(id)arg1 archiveVersion:(unsigned long long)arg2 innerChartFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 isFromPasteboard:(BOOL)arg4;
- (id)preset;
- (struct CGPoint { float x1; float x2; })previewOrigin;
- (float)radiusForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 withMaxExplosion:(float)arg2;
- (Class)repClass;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })resizedLegendFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 oldChartSize:(struct CGSize { float x1; float x2; })arg2 newChartSize:(struct CGSize { float x1; float x2; })arg3;
- (float)sageDepthFactorForExport;
- (void)saveToUnityArchive:(struct ChartArchive { int (**x1)(); struct ExtensionSet { struct map<int, google::protobuf::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension> > > { struct __tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, google::protobuf::internal::ExtensionSet::Extension>, std::__1::less<int>, true> > { unsigned long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_2_1_1; } x2; struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_3_1_1; } x3; int x4; int x5; struct RectArchive {} *x6; struct Reference {} *x7; struct ChartGridArchive {} *x8; struct Reference {} *x9; struct Reference {} *x10; struct Reference {} *x11; int x12; boolx13; boolx14; struct Reference {} *x15; struct Reference {} *x16; struct RepeatedPtrField<TSP::Reference> { void **x_17_1_1; int x_17_1_2; int x_17_1_3; int x_17_1_4; } x17; struct RepeatedPtrField<TSP::Reference> { void **x_18_1_1; int x_18_1_2; int x_18_1_3; int x_18_1_4; } x18; struct RepeatedPtrField<TSP::Reference> { void **x_19_1_1; int x_19_1_2; int x_19_1_3; int x_19_1_4; } x19; struct RepeatedPtrField<TSP::Reference> { void **x_20_1_1; int x_20_1_2; int x_20_1_3; int x_20_1_4; } x20; struct RepeatedPtrField<TSP::Reference> { void **x_21_1_1; int x_21_1_2; int x_21_1_3; int x_21_1_4; } x21; struct SparseReferenceArrayArchive {} *x22; struct SparseReferenceArrayArchive {} *x23; struct RepeatedPtrField<TSP::Reference> { void **x_24_1_1; int x_24_1_2; int x_24_1_3; int x_24_1_4; } x24; unsigned int x25; int x26; unsigned int x27[1]; }*)arg1 persistentChartInfo:(id)arg2 archiver:(id)arg3;
- (id)scaleAllStrokesInStyle:(id)arg1 byRatio:(float)arg2;
- (id)sceneAreaLayoutItemCache;
- (id)seriesNonstyleForSeriesIndex:(unsigned int)arg1;
- (id)seriesStyleForSeries:(id)arg1;
- (id)seriesStyleForSeriesIndex:(unsigned int)arg1;
- (BOOL)seriesStyleIsPrivate:(id)arg1;
- (void)setCategoryAxisNonstyle:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setChartNonstyle:(id)arg1;
- (void)setChartType:(id)arg1 gridRowIds:(id)arg2 gridColumnIds:(id)arg3;
- (void)setChartType:(id)arg1;
- (void)setDefaultLayoutSettings:(struct { BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; unsigned int x7; })arg1;
- (void)setDefaultLegendPositionIfNeededWithOptionalLayout:(id)arg1;
- (void)setDisplayMessageOnRepCreation:(BOOL)arg1;
- (void)setGeometry:(id)arg1 clearObjectPlaceholderFlag:(BOOL)arg2;
- (void)setGeometry:(id)arg1 omitLegendResize:(BOOL)arg2 clearObjectPlaceholderFlag:(BOOL)arg3;
- (void)setGeometry:(id)arg1 omitLegendResize:(BOOL)arg2;
- (void)setGeometry:(id)arg1;
- (void)setInfoGeometryByUpdatingLegendGeometryAccommodatedForInitialLayoutGeometry:(id)arg1;
- (void)setInformationalMessageDuration:(double)arg1;
- (void)setInformationalMessageString:(id)arg1;
- (void)setLastAppliedFillSetIdentifier:(id)arg1;
- (void)setLastAppliedFillSetLookupString:(id)arg1;
- (void)setLegend:(id)arg1;
- (void)setMediator:(id)arg1;
- (void)setModel:(id)arg1;
- (void)setPreset:(id)arg1;
- (void)setPreviewOrigin:(struct CGPoint { float x1; float x2; })arg1;
- (void)setSeriesNonstyle:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setValueAxisNonstyle:(id)arg1 atIndex:(unsigned int)arg2;
- (void)setViewStyleProxyParagraphStyleArray:(id)arg1 layouts:(id)arg2;
- (int)specificPropertyForGeneric:(int)arg1;
- (id)stringForSelectionPath:(id)arg1;
- (int)stringPropertyForSelectionPath:(id)arg1;
- (id)style;
- (id)styleForAxis:(id)arg1;
- (id)styleOwnerForRef:(id)arg1;
- (id)styleOwnerForSelectionPath:(id)arg1;
- (id)styleOwnerFromSwapType:(int)arg1 andIndex:(unsigned int)arg2;
- (id)styleOwnerRefForStyleOwner:(id)arg1;
- (id)swapTuplesForApplyingPreset:(id)arg1 withBehavior:(unsigned int)arg2;
- (id)swapTuplesForMutations:(id)arg1;
- (id)swapTuplesForMutationsForImport:(id)arg1;
- (id)swapTuplesForParagraphStyleMutations:(id)arg1 forReferencingProperty:(int)arg2;
- (id)tuplesToApplyState:(id)arg1;
- (void)updateTitlesForExportingModel:(id)arg1;
- (id)valueAxisNonstyleAtIndex:(unsigned int)arg1;
- (id)valueAxisStyleAtIndex:(unsigned int)arg1;
- (unsigned int)valueAxisStyleCount;
- (id)valueForProperty:(int)arg1;
- (id)viewOverrideMapForStyleOwner:(id)arg1;
- (BOOL)wantsDeferredUpgradeOrImport;
- (void)willModify;

@end
