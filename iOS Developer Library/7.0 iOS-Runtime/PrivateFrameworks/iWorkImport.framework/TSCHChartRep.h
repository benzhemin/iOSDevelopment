/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class CALayer, CAShapeLayer, NSArray, NSString, TSCHChartDrawableInfo, TSCHChartLayout, TSCHMessageView, TSCHRendererLayer, TSCHSearchSelection, TSCHSelectionPath;

@interface TSCHChartRep : TSWPTextHostRep <TSCHChartRepPlatformProtocols, TSCHSupportsRendering> {
    struct CGPoint { 
        float x; 
        float y; 
    TSCHSelectionPath *mActiveTextEditingPath;
    BOOL mAwaitingLegendSubselection;
    BOOL mBuildingChunks;
    BOOL mBuildingFinalBackground;
    BOOL mBuildingFinalElements;
    BOOL mCDECausedSetNeedsDisplay;
    BOOL mCDEIsEditingInfo;
    TSCHChartLayout *mChartLayout;
    BOOL mChartRepGoingAway;
    int mChunkPhase;
    BOOL mChunkTexturesValid;
    int mCurrentChunk;
    id mDrawingOpEndBlock;
    id mDrawingOpStartBlock;
    BOOL mDrawingSearchReference;
    BOOL mEditorIsEditingInfo;
    BOOL mFinishedBecomingSelected;
    BOOL mForceSeparateLegendLayer;
    unsigned int mInDynamicStandinLayoutOperation;
    unsigned int mInDynamicStandinOperation;
    BOOL mInZoom;
    BOOL mInvalidateLegendLayerForLayerBasedRep;
    BOOL mIsKPFExportForMultiData;
    BOOL mIsLayerBasedRep;
    } mLastSubselectionLayerRelativeReferencePosition;
    CAShapeLayer *mLegendBorderHaloLayer;
    BOOL mLegendBorderHaloLayerPathValid;
    TSCHRendererLayer *mLegendLayer;
    CAShapeLayer *mMediatorEditingHaloLayer;
    BOOL mMediatorEditingHaloLayerPathValid;
    TSCHMessageView *mMessageView;
    BOOL mMessageViewValid;
    int mRenderPassChunkPhase;
    NSArray *mRenderers;
    CALayer *mSubselectionKnobLayer;
    BOOL mWantsPreviewLayout;
}

@property(retain,readonly) TSCHSelectionPath * activeTextEditingPath;
@property(readonly) NSString * animationFilter;
@property(readonly) unsigned int chartDeliveryStyle;
@property(readonly) TSCHChartDrawableInfo * chartInfo;
@property(readonly) TSCHChartLayout * chartLayout;
@property(readonly) BOOL chartRepGoingAway;
@property BOOL chunkTexturesValid;
@property(readonly) float contentsScale;
@property(readonly) int currentChunk;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(copy) id drawingOpEndBlock;
@property(copy) id drawingOpStartBlock;
@property(readonly) BOOL drawingSearchReference;
@property(readonly) BOOL forceRenderBlankBackground;
@property BOOL forceSeparateLegendLayer;
@property(readonly) unsigned int hash;
@property(readonly) TSCHSearchSelection * selection;
@property(readonly) Class superclass;
@property(readonly) float viewScale;

+ (float)magicMoveAttributeMatchPercentBetweenOutgoingObject:(id)arg1 incomingObject:(id)arg2;

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (id)activeTextEditingPath;
- (void)addAdditionalChildLayersToArray:(id)arg1;
- (void)addChartKnobsToArray:(id)arg1;
- (void)addKnobsToArray:(id)arg1;
- (id)additionalRectsForSnappingWithOffset:(struct CGPoint { float x1; float x2; })arg1;
- (unsigned int)adjustedKnobForComputingResizeGeometry:(unsigned int)arg1;
- (id)animationFilter;
- (void)becameNotSelected;
- (void)becameSelected;
- (void)beginCanvasTextEditingForSearchSelection:(id)arg1;
- (BOOL)beginCanvasTextEditingForSelectionPath:(id)arg1;
- (void)beginChartDataEditing;
- (void)beginDrawingOperation;
- (id)beginEditing;
- (BOOL)buildShouldUseRenderer:(id)arg1;
- (BOOL)canDrawInParallel;
- (BOOL)canEditWithEditor:(id)arg1;
- (unsigned int)chartDeliveryStyle;
- (id)chartInfo;
- (id)chartLayout;
- (BOOL)chartRepGoingAway;
- (BOOL)chunkTexturesValid;
- (void)clearRenderers;
- (id)commandController;
- (BOOL)containsPoint:(struct CGPoint { float x1; float x2; })arg1;
- (float)contentsScale;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })convertUnscaledToBoundsRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (int)currentChunk;
- (id)currentTextEditingSupporter;
- (void)dealloc;
- (void)didAnimateFromCDE;
- (void)didDrawInLayer:(id)arg1 context:(struct CGContext { }*)arg2;
- (void)didEndZooming;
- (void)didUpdateLayer:(id)arg1;
- (BOOL)directlyManagesLayerContent;
- (void)dismissMessageOverlayNowWithAnimation:(BOOL)arg1;
- (void)displayMessage:(id)arg1 zPosition:(float)arg2 style:(int)arg3;
- (int)dragTypeAtCanvasPoint:(struct CGPoint { float x1; float x2; })arg1;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (id)drawableLayout;
- (id)drawingOpEndBlock;
- (id)drawingOpStartBlock;
- (BOOL)drawingSearchReference;
- (void)dynamicDragDidBegin;
- (id)dynamicResizeDidBegin;
- (void)dynamicResizeDidEndWithTracker:(id)arg1;
- (void)dynamicallyResizingWithTracker:(id)arg1;
- (void)dynamicallyUpdatingLegendFrameWithTracker:(id)arg1;
- (void)editor:(id)arg1 isDeselectingInfos:(id)arg2;
- (void)editor:(id)arg1 isSelectingInfos:(id)arg2;
- (void)endCanvasTextEditing;
- (void)endChartDataEditing;
- (void)endDrawingOperation;
- (BOOL)forceRenderBlankBackground;
- (BOOL)forceSeparateLegendLayer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })frameInUnscaledCanvas;
- (BOOL)frameInUnscaledCanvasNeedsPaddingForShadows;
- (id)geometry;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })geometryFrame;
- (BOOL)hasSubselection;
- (id)hitChartElements:(struct CGPoint { float x1; float x2; })arg1 passingTest:(id)arg2;
- (id)hitChartElements:(struct CGPoint { float x1; float x2; })arg1;
- (id)imageForSearchReference:(id)arg1 forPath:(struct CGPath { }*)arg2 shouldPulsate:(BOOL)arg3;
- (BOOL)inPrintPreviewMode;
- (id)initWithLayout:(id)arg1 canvas:(id)arg2;
- (BOOL)intersectsUnscaledRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)invalidateKnobPositions;
- (void)invalidateKnobs;
- (void)invalidateLegendLayerForLayerBasedRep;
- (void)invalidateSubselectionKnobs;
- (BOOL)isCanvasTextEditing;
- (BOOL)isDraggable;
- (BOOL)isDrawingIntoPDF;
- (BOOL)isEditing;
- (BOOL)isLayerBasedRep;
- (BOOL)isLegendOn;
- (id)itemsToAddToEditMenu;
- (id)knobForDynamicStyleChangeKey:(id)arg1;
- (void)knobTrackingDidBegin:(id)arg1;
- (void)knobTrackingDidEnd:(id)arg1;
- (BOOL)legendHitByUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1 distanceFromCenter:(struct CGPoint { float x1; float x2; }*)arg2;
- (id)legendLayer;
- (id)legendLayerForLayerBasedRep;
- (BOOL)messageIsVisible;
- (struct CGPath { }*)newPathForSearchReference:(id)arg1;
- (id)newTrackerForKnob:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })outerShadowFrame;
- (id)overlayLayers;
- (int)p_backgroundLikePlaneStateForEffectiveStage:(int)arg1;
- (BOOL)p_chartShouldDisplayMessage;
- (void)p_createLegendLayer;
- (void)p_deleteMessageView;
- (id)p_findRendererForSelectionPath:(id)arg1;
- (id)p_findRendererForTextEditingSelectionPath:(id)arg1;
- (void)p_findUIStateChanged:(id)arg1;
- (void)p_forceDismissTransientMessage;
- (BOOL)p_hasAnySubselection;
- (BOOL)p_hasBackgroundFill;
- (BOOL)p_hasBackgroundLayerForPieChart;
- (void)p_invalidateLegendSelectionHalo;
- (void)p_invalidateMediatorEditingHaloLayer;
- (void)p_invalidateMessageOverlay;
- (BOOL)p_legendHitByLayoutPoint:(struct CGPoint { float x1; float x2; })arg1;
- (BOOL)p_legendIsBeingMoved;
- (BOOL)p_legendIsBeingResized;
- (BOOL)p_legendIsSelected;
- (id)p_legendRenderer;
- (void)p_messageAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void*)arg3;
- (struct CGPath { }*)p_newPathForSearchSelection:(id)arg1;
- (void)p_positionMessageView;
- (void)p_removeOrShowAndPositionMessageOverlay;
- (BOOL)p_textEditingInLegend;
- (id)p_textImageForPath:(struct CGPath { }*)arg1 renderer:(id)arg2 selection:(id)arg3 shouldPulsate:(BOOL)arg4;
- (void)p_topBarsShowedUp:(id)arg1;
- (void)p_updatePositionOfLegendKnob:(id)arg1;
- (void)p_updatePositionsOfLegendKnobs:(id)arg1;
- (BOOL)p_usingSeparateLegendLayerForLayerBasedRep;
- (void)p_validateChartTitleSelection;
- (void)p_validateLegendSelectionHalo;
- (void)p_validateMediatorEditingHaloLayer;
- (BOOL)planeIsVisible:(int)arg1;
- (int)planeState:(int)arg1 finalElements:(BOOL)arg2 chunkStage:(int)arg3;
- (int)planeState:(int)arg1 finalElements:(BOOL)arg2;
- (void)processChanges:(id)arg1;
- (void)protected_dynamicStyleChangeDidEnd:(id)arg1;
- (void)protected_dynamicStyleChangeWillBegin:(id)arg1;
- (void)protected_dynamicStyleLayoutChangeDidEnd:(id)arg1;
- (void)protected_dynamicStyleLayoutChangeWillBegin:(id)arg1;
- (id)protected_haloLayersForHaloPositions:(id)arg1;
- (id)protected_knobLayersForKnobPositions:(id)arg1;
- (void)protected_renderChunkInBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 textureSet:(id)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })rectForSelection:(id)arg1;
- (void)releaseLegendLayer;
- (BOOL)renderElements;
- (BOOL)renderElementsShadowOnly;
- (BOOL)renderElementsWithoutShadows;
- (void)renderIntoContext:(struct CGContext { }*)arg1 visible:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (BOOL)renderLabels;
- (BOOL)renderLegendIntoSeparateLayer;
- (id)renderSeriesIndexSet;
- (id)renderSeriesIndexSetForFinalElements:(BOOL)arg1 currentChunk:(int)arg2;
- (id)renderSeriesIndexSetForFinalElements:(BOOL)arg1;
- (BOOL)renderTrendLinesForSeriesIndex:(unsigned int)arg1;
- (id)renderValueIndexSetForSeries:(unsigned int)arg1 finalElements:(BOOL)arg2 currentChunk:(int)arg3;
- (id)renderValueIndexSetForSeries:(unsigned int)arg1 finalElements:(BOOL)arg2;
- (id)renderValueIndexSetForSeries:(unsigned int)arg1;
- (id)renderers;
- (BOOL)requireSeparateLabelLayer;
- (BOOL)rotationKnobHitByNaturalPoint:(struct CGPoint { float x1; float x2; })arg1;
- (struct CGPoint { float x1; float x2; })scaledSubpixelOffsetFromLayerFrameInScaledCanvas;
- (void)selectAllEditedText;
- (id)selectedSeriesIndices;
- (id)selection;
- (void)setChunkTexturesValid:(BOOL)arg1;
- (void)setCurrentKnobTracker:(id)arg1;
- (void)setDrawingOpEndBlock:(id)arg1;
- (void)setDrawingOpStartBlock:(id)arg1;
- (void)setForceSeparateLegendLayer:(BOOL)arg1;
- (void)setNeedsDisplay;
- (void)setTextureStage:(unsigned int)arg1;
- (void)setupForDrawingInLayer:(id)arg1 context:(struct CGContext { }*)arg2;
- (BOOL)shadowsEnabled;
- (BOOL)shouldApplyFractionalTranslationInRootForLegendLayer;
- (BOOL)shouldLayoutTilingLayer:(id)arg1;
- (BOOL)shouldShowKnobs;
- (BOOL)shouldShowLegendHighlight;
- (BOOL)shouldShowSelectionHighlight;
- (BOOL)shouldUseChartAreaRectForEditMenuTargetRectMinY;
- (BOOL)shouldUseLegendLayerForLayerBasedRep;
- (BOOL)shouldUseRenderer:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })snapRectForDynamicDragWithOffset:(struct CGPoint { float x1; float x2; })arg1;
- (id)subselectionHaloPositionsForSelections:(id)arg1;
- (id)subselectionKnobPositionsForSelection:(id)arg1;
- (id)subselectionLayer;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })targetRectForEditMenu;
- (id)textureForContext:(id)arg1;
- (int)tilingMode;
- (void)tswpTextEditingDidEndEditing:(id)arg1;
- (void)updateFromLayout;
- (void)updateKnobs;
- (void)updateMessageOverlayNow;
- (void)updatePositionsOfKnobs:(id)arg1;
- (float)viewScale;
- (void)viewScaleDidChange;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleBoundsForTilingLayer:(id)arg1;
- (void)willAnimateIntoCDE;
- (void)willBeRemoved;
- (void)willBeginZooming;
- (void)willUpdateLayer:(id)arg1;

@end
