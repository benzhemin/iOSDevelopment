/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class KNOffscreenController, KNPdfHyperlinkController, KNSlideNode, NSArray, NSMutableArray, NSSet, NSString;

@interface KNRenderingExporter : TSARenderingExporter <TSDCanvasDelegate> {
    unsigned int mCurrentBuildIndex;
    unsigned int mCurrentPage;
    KNSlideNode *mCurrentSlideNode;
    NSMutableArray *mCurrentSlidesOnPage;
    KNPdfHyperlinkController *mHyperlinkController;
    KNOffscreenController *mOffscreenController;
    float mPageMargin;
    int mPrintLayout;
    NSString *mPrintTitle;
    id mPrintView;
    BOOL mPrintingBackgrounds;
    BOOL mPrintingBorders;
    BOOL mPrintingBuilds;
    BOOL mPrintingDate;
    BOOL mPrintingDraftQuality;
    BOOL mPrintingPageMargins;
    BOOL mPrintingSelectedSlides;
    BOOL mPrintingSkippedSlides;
    BOOL mPrintingSlideNumbers;
    NSSet *mSelectedSlideNodes;
    unsigned int mSlidesPerPage;
}

@property(retain) KNSlideNode * currentSlideNode;
@property(readonly) unsigned int currentSlideNumber;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int hash;
@property(readonly) float heightOfPrintedText;
@property(retain) KNOffscreenController * offscreenController;
@property float pageMargin;
@property int printLayout;
@property(copy) NSString * printTitle;
@property id printView;
@property(getter=isPrintingBackgrounds) BOOL printingBackgrounds;
@property(getter=isPrintingBorders) BOOL printingBorders;
@property(getter=isPrintingBuilds) BOOL printingBuilds;
@property(getter=isPrintingDate) BOOL printingDate;
@property(getter=isPrintingDraftQuality) BOOL printingDraftQuality;
@property(getter=isPrintingPageMargins) BOOL printingPageMargins;
@property(getter=isPrintingSelectedSlides) BOOL printingSelectedSlides;
@property(getter=isPrintingSkippedSlides) BOOL printingSkippedSlides;
@property(getter=isPrintingSlideNumbers) BOOL printingSlideNumbers;
@property(copy) NSSet * selectedSlideNodes;
@property(readonly) NSArray * slidesForPrinting;
@property unsigned int slidesPerPage;
@property(readonly) float spaceForSlideNumbers;
@property(readonly) Class superclass;
@property(readonly) BOOL usesViewForDrawing;

- (void)addAnchorPointForSlide:(id)arg1 context:(struct CGContext { }*)arg2;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })boundsRect;
- (id)currentInfos;
- (id)currentSlideNode;
- (unsigned int)currentSlideNumber;
- (void)dealloc;
- (id)documentRoot;
- (void)drawBorderForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(struct CGContext { }*)arg2;
- (void)drawDateForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(struct CGContext { }*)arg2;
- (BOOL)drawImageForSlideNode:(id)arg1 andEvent:(unsigned int)arg2 slideSize:(struct CGSize { float x1; float x2; })arg3 intoRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4 context:(struct CGContext { }*)arg5 createPage:(BOOL)arg6;
- (void)drawInView:(id)arg1 rect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (void)drawNSStringDateForRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1 context:(struct CGContext { }*)arg2;
- (void)drawSlideNumberForNode:(id)arg1 index:(unsigned int)arg2 forRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 context:(struct CGContext { }*)arg4 position:(int)arg5;
- (void)enableRenderAllContent;
- (BOOL)exportToURL:(id)arg1 delegate:(id)arg2 error:(id*)arg3;
- (BOOL)exportToURL:(id)arg1 pageNumber:(unsigned int)arg2 delegate:(id)arg3 error:(id*)arg4;
- (float)heightOfPrintedText;
- (BOOL)incrementPage;
- (id)initWithDocumentRoot:(id)arg1;
- (BOOL)isCanvasDrawingIntoPDF:(id)arg1;
- (BOOL)isPrintingBackgrounds;
- (BOOL)isPrintingBorders;
- (BOOL)isPrintingBuilds;
- (BOOL)isPrintingCanvas;
- (BOOL)isPrintingDate;
- (BOOL)isPrintingDraftQuality;
- (BOOL)isPrintingPageMargins;
- (BOOL)isPrintingSelectedSlides;
- (BOOL)isPrintingSkippedSlides;
- (BOOL)isPrintingSlideNumbers;
- (id)offscreenController;
- (unsigned int)p_slideNumberForSlideNode:(id)arg1;
- (id)p_slideNumberStringForSlideNode:(id)arg1 buildIndex:(unsigned int)arg2;
- (unsigned int)pageCount;
- (float)pageMargin;
- (BOOL)preparePage:(unsigned int)arg1;
- (int)printLayout;
- (id)printTitle;
- (id)printView;
- (double)progressForCurrentPage;
- (id)selectedSlideNodes;
- (void)setCurrentSlideNode:(id)arg1;
- (void)setOffscreenController:(id)arg1;
- (void)setOptions:(id)arg1;
- (void)setPageMargin:(float)arg1;
- (void)setPrintLayout:(int)arg1;
- (void)setPrintTitle:(id)arg1;
- (void)setPrintView:(id)arg1;
- (void)setPrintingBackgrounds:(BOOL)arg1;
- (void)setPrintingBorders:(BOOL)arg1;
- (void)setPrintingBuilds:(BOOL)arg1;
- (void)setPrintingDate:(BOOL)arg1;
- (void)setPrintingDraftQuality:(BOOL)arg1;
- (void)setPrintingPageMargins:(BOOL)arg1;
- (void)setPrintingSelectedSlides:(BOOL)arg1;
- (void)setPrintingSkippedSlides:(BOOL)arg1;
- (void)setPrintingSlideNumbers:(BOOL)arg1;
- (void)setSelectedSlideNodes:(id)arg1;
- (void)setSlidesPerPage:(unsigned int)arg1;
- (void)setup;
- (BOOL)shouldSuppressBackgrounds;
- (id)slidesForPrinting;
- (unsigned int)slidesPerPage;
- (float)spaceForSlideNumbers;
- (void)teardown;
- (BOOL)usesViewForDrawing;

@end
