/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@class NSBundle, NSDictionary, NSString;

@interface IMDService : NSObject <IMSystemMonitorListener> {
    NSDictionary *_accountDefaults;
    BOOL _blockPrefWriting;
    NSBundle *_bundle;
    NSDictionary *_cachedServiceDefaults;
    NSDictionary *_cachedSetupServiceDefaults;
    NSString *_internalName;
    NSDictionary *_serviceDefaults;
    NSDictionary *_serviceProperties;
    Class _sessionClass;
}

@property(readonly) Class accountClass;
@property(retain,readonly) NSBundle * bundle;
@property(retain,readonly) NSDictionary * defaultAccountSettings;
@property(readonly) BOOL disallowDeactivation;
@property(retain,readonly) NSString * internalName;
@property(readonly) BOOL isIDSBased;
@property(readonly) BOOL serviceChatsIgnoreLoginStatus;
@property(retain,readonly) NSDictionary * serviceDefaults;
@property(retain,readonly) NSDictionary * serviceDefaultsForSetup;
@property(retain,readonly) NSString * serviceDomain;
@property(readonly) BOOL serviceIgnoresNetworkConnectivity;
@property(readonly) BOOL serviceNeedsLogin;
@property(readonly) BOOL serviceNeedsPassword;
@property(retain,readonly) NSDictionary * serviceProperties;
@property(readonly) int serviceProtocolVersion;
@property(readonly) BOOL serviceRequiresHost;
@property(readonly) BOOL serviceRequiresSingleAccount;
@property(readonly) BOOL serviceShouldBeAlwaysLoggedIn;
@property(readonly) BOOL serviceSupportsPresence;
@property(readonly) BOOL serviceSupportsRegistration;
@property(readonly) BOOL serviceWantsNullHostReachability;
@property(readonly) Class sessionClass;
@property(readonly) BOOL shouldCreateActiveAccounts;
@property(readonly) BOOL shouldForceAccountsActive;
@property(readonly) BOOL shouldForceAccountsConnected;
@property(readonly) BOOL supportsDatabase;

- (id)_copyServicePropertiesFromIMServiceBundle:(id)arg1;
- (id)_defaultDefaults;
- (id)_oldServiceDomain;
- (void)_reallyUnloadServiceBundle;
- (id)_serviceDefaultsForDomain:(id)arg1;
- (id)_serviceDomain;
- (void)accountAdded:(id)arg1;
- (Class)accountClass;
- (void)accountRemoved:(id)arg1;
- (id)bundle;
- (BOOL)clearOneTimeImportAccounts;
- (void)dealloc;
- (id)defaultAccountSettings;
- (void)delayedSaveSettings;
- (id)description;
- (void)disableAccount:(id)arg1;
- (BOOL)disallowDeactivation;
- (void)enableAccount:(id)arg1;
- (id)initWithBundle:(id)arg1;
- (id)internalName;
- (BOOL)isIDSBased;
- (void)loadServiceBundle;
- (id)newAccountWithAccountDefaults:(id)arg1 accountID:(id)arg2;
- (id)oldInternalName;
- (void)purgeMemoryCaches;
- (void)saveSettings;
- (BOOL)serviceChatsIgnoreLoginStatus;
- (id)serviceDefaults;
- (id)serviceDefaultsForSetup;
- (id)serviceDomain;
- (BOOL)serviceIgnoresNetworkConnectivity;
- (BOOL)serviceNeedsLogin;
- (BOOL)serviceNeedsPassword;
- (id)serviceProperties;
- (int)serviceProtocolVersion;
- (BOOL)serviceRequiresHost;
- (BOOL)serviceRequiresSingleAccount;
- (BOOL)serviceShouldBeAlwaysLoggedIn;
- (BOOL)serviceSupportsPresence;
- (BOOL)serviceSupportsRegistration;
- (BOOL)serviceWantsNullHostReachability;
- (Class)sessionClass;
- (BOOL)shouldCreateActiveAccounts;
- (BOOL)shouldForceAccountsActive;
- (BOOL)shouldForceAccountsConnected;
- (BOOL)supportsDatabase;
- (void)synchronizeServiceDefaults;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidStartBackup;
- (void)unloadServiceBundle;

@end
