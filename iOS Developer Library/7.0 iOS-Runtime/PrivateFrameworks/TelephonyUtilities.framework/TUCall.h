/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities
 */

@class IMAVChatParticipant, NSData, NSString;

@interface TUCall : NSObject <NSSecureCoding> {
    struct { 
        unsigned int imageType : 2; 
        unsigned int abUidIsValid : 1; 
        unsigned int dialAssisted : 1; 
        unsigned int dialedFromEmergencyUI : 1; 
        unsigned int isEmergencyCall : 1; 
        unsigned int isEmergencyCallIsValid : 1; 
        unsigned int joiningConference : 1; 
        unsigned int leavingConference : 1; 
    NSString *_abLabel;
    int _abUid;
    BOOL _allowsTTYSettingChanges;
    NSString *_companyName;
    BOOL _connected;
    BOOL _connectingToRelay;
    int _disconnectedReason;
    NSString *_displayName;
    int _displayNameBreakPoint;
    BOOL _endpointOnCurrentDevice;
    int _faceTimeIDStatus;
    BOOL _hasUpdatedAudio;
    NSString *_isoCountryCode;
    NSString *_overrideName;
    } _phoneCallFlags;
    int _provisionalHoldStatus;
    BOOL _requestingHandoff;
    BOOL _requiresAudioReinterruption;
    NSString *_sourceIdentifier;
    NSString *_suggestedDisplayName;
    int _transitionStatus;
    NSString *_uniqueProxyIdentifier;
    BOOL _wantsHoldMusic;
}

@property BOOL allowsTTYSettingChanges;
@property(getter=isBlocked,readonly) BOOL blocked;
@property(copy,readonly) NSString * callHistoryIdentifier;
@property(readonly) int callIdentifier;
@property(copy,readonly) NSString * callUUID;
@property(copy,readonly) NSString * callerNameFromNetwork;
@property(retain,readonly) NSString * conferenceIdentifier;
@property(getter=isConnected) BOOL connected;
@property(getter=isConnectingToRelay) BOOL connectingToRelay;
@property(copy,readonly) NSString * destinationID;
@property int disconnectedReason;
@property(copy) NSString * displayName;
@property(readonly) int endedError;
@property(readonly) unsigned int endedReason;
@property(getter=isEndpointOnCurrentDevice) BOOL endpointOnCurrentDevice;
@property(copy,readonly) NSString * errorAlertMessage;
@property(copy,readonly) NSString * errorAlertTitle;
@property int faceTimeIDStatus;
@property(readonly) BOOL hasReceivedFirstFrame;
@property BOOL hasUpdatedAudio;
@property(getter=isHostedOnCurrentDevice,readonly) BOOL hostedOnCurrentDevice;
@property(readonly) BOOL isActive;
@property BOOL isOnHold;
@property BOOL isSendingVideo;
@property(readonly) BOOL isVideo;
@property(copy) NSString * isoCountryCode;
@property(retain,readonly) NSData * localFrequency;
@property(readonly) float localVolume;
@property(getter=isOutgoing,readonly) BOOL outgoing;
@property(readonly) BOOL playsConnectedSound;
@property int provisionalHoldStatus;
@property(retain,readonly) NSData * remoteFrequency;
@property(retain,readonly) IMAVChatParticipant * remoteParticipant;
@property(getter=isRequestingHandoff) BOOL requestingHandoff;
@property BOOL requiresAudioReinterruption;
@property(readonly) int service;
@property(readonly) BOOL shouldIgnoreStatusChange;
@property(copy) NSString * sourceIdentifier;
@property(readonly) double startTime;
@property(readonly) int status;
@property(getter=isStatusFinal,readonly) BOOL statusFinal;
@property(readonly) BOOL statusIsProvisional;
@property(copy) NSString * suggestedDisplayName;
@property(readonly) int supportedModelType;
@property int transitionStatus;
@property(copy) NSString * uniqueProxyIdentifier;
@property(getter=isVoicemail,readonly) BOOL voicemail;
@property BOOL wantsHoldMusic;
@property(readonly) BOOL wasDeclined;

+ (BOOL)supportsSecureCoding;

- (id)_displayNameWithSeparator:(id)arg1;
- (void)_handleCallerIDChange;
- (void)_handleIdentityChange;
- (void)_handleManagesAudioInterruptionsChange;
- (void)_handleStatusChange;
- (id)_image;
- (void)_loadCallDetails;
- (void)_setPrimitiveDisconnectedReason:(int)arg1;
- (void)_setPrimitiveEndpointOnCurrentDevice:(BOOL)arg1;
- (void)_setPrimitiveWantsHoldMusic:(BOOL)arg1;
- (int)abUID;
- (BOOL)allowsTTYSettingChanges;
- (void)answer;
- (void)answerWithSourceIdentifier:(id)arg1;
- (id)audioCategory;
- (id)audioMode;
- (double)callDuration;
- (id)callDurationString;
- (id)callHistoryIdentifier;
- (int)callIdentifier;
- (int)callStatus;
- (id)callUUID;
- (id)callerNameFromNetwork;
- (long)causeCode;
- (id)companyName;
- (id)conferenceIdentifier;
- (id)contactImageDataWithFormat:(int)arg1;
- (void)dealloc;
- (id)description;
- (id)desktopImage;
- (id)destinationID;
- (void)disconnect;
- (void)disconnectWithReason:(int)arg1;
- (int)disconnectedReason;
- (id)displayFirstName;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (int)endedError;
- (unsigned int)endedReason;
- (id)errorAlertMessage;
- (id)errorAlertTitle;
- (int)faceTimeIDStatus;
- (BOOL)hasReceivedFirstFrame;
- (BOOL)hasSupport:(int)arg1;
- (BOOL)hasUpdatedAudio;
- (void)hold;
- (id)image;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)inviteWithCallIdentifier:(int)arg1;
- (BOOL)isActive;
- (BOOL)isAlerting;
- (BOOL)isBlocked;
- (BOOL)isConferenced;
- (BOOL)isConnected;
- (BOOL)isConnectingToRelay;
- (BOOL)isDownlinkMuted;
- (BOOL)isEmergencyCall;
- (BOOL)isEndpointOnCurrentDevice;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isHostedOnCurrentDevice;
- (BOOL)isMuted;
- (BOOL)isOnHold;
- (BOOL)isOutgoing;
- (BOOL)isRequestingHandoff;
- (BOOL)isSendingVideo;
- (BOOL)isStatusFinal;
- (BOOL)isTTY;
- (BOOL)isUplinkMuted;
- (BOOL)isVideo;
- (BOOL)isVoicemail;
- (id)isoCountryCode;
- (void)joinConference;
- (void)leaveConference;
- (id)localFrequency;
- (float)localVolume;
- (id)localizedLabel;
- (BOOL)managesAudioInterruptions;
- (id)multiLineDisplayName;
- (BOOL)needsManualInCallSounds;
- (void)playDTMFToneForKey:(unsigned char)arg1;
- (BOOL)playsConnectedSound;
- (int)provisionalHoldStatus;
- (id)remoteFrequency;
- (id)remoteParticipant;
- (BOOL)requiresAudioReinterruption;
- (void)resetProvisionalHoldStatus;
- (void)resetProvisionalStatuses;
- (void)resetWantsHoldMusic;
- (int)service;
- (void)setAllowsTTYSettingChanges:(BOOL)arg1;
- (void)setConnected:(BOOL)arg1;
- (void)setConnectingToRelay:(BOOL)arg1;
- (void)setDisconnectedReason:(int)arg1;
- (void)setDisplayName:(id)arg1;
- (BOOL)setDownlinkMuted:(BOOL)arg1;
- (void)setEndpointOnCurrentDevice:(BOOL)arg1;
- (void)setFaceTimeIDStatus:(int)arg1;
- (void)setHasUpdatedAudio:(BOOL)arg1;
- (void)setIsOnHold:(BOOL)arg1;
- (void)setIsSendingVideo:(BOOL)arg1;
- (void)setIsoCountryCode:(id)arg1;
- (BOOL)setMuted:(BOOL)arg1;
- (void)setOverrideName:(id)arg1;
- (void)setProvisionalHoldStatus:(int)arg1;
- (void)setRequestingHandoff:(BOOL)arg1;
- (void)setRequiresAudioReinterruption:(BOOL)arg1;
- (void)setSourceIdentifier:(id)arg1;
- (void)setSuggestedDisplayName:(id)arg1;
- (void)setTransitionStatus:(int)arg1;
- (void)setUniqueProxyIdentifier:(id)arg1;
- (BOOL)setUplinkMuted:(BOOL)arg1;
- (void)setWantsHoldMusic:(BOOL)arg1;
- (void)setWasDialAssisted:(BOOL)arg1;
- (void)setWasDialedFromEmergencyUI:(BOOL)arg1;
- (BOOL)shouldIgnoreStatusChange;
- (BOOL)shouldPlayDTMFTone;
- (id)smallImage;
- (id)sourceIdentifier;
- (double)startTime;
- (int)status;
- (BOOL)statusIsProvisional;
- (id)suggestedDisplayName;
- (int)supportedModelType;
- (id)totalDataUsed;
- (int)transitionStatus;
- (void)unhold;
- (id)uniqueProxyIdentifier;
- (void)updateWithCall:(id)arg1;
- (BOOL)wantsHoldMusic;
- (BOOL)wasDeclined;
- (BOOL)wasDialAssisted;
- (BOOL)wasDialedFromEmergencyUI;

@end
