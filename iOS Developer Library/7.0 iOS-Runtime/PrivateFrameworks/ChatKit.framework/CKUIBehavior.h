/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@class NSAttributedString, NSDateFormatter, NSDictionary, UIColor, UIFont, UIImage;

@interface CKUIBehavior : NSObject {
    int _HUDStyle;
    float _waveformMaxWidth;
}

@property int HUDStyle;
@property(readonly) UIColor * activeRecordingDotColor;
@property(readonly) UIColor * appTintColor;
@property(readonly) UIColor * attachmentBalloonActionColor;
@property(readonly) struct CGSize { float x1; float x2; } attachmentBalloonSize;
@property(readonly) UIColor * attachmentBalloonTextColor;
@property(readonly) struct CGSize { float x1; float x2; } attachmentBrowserDefaultSizeForSquare;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } attachmentBrowserFeedLayoutSectionInset;
@property(readonly) float attachmentBrowserGridInterItemSpacing;
@property(readonly) float attachmentBrowserGridMinimumLineSpacing;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } attachmentBrowserGridSectionInset;
@property(readonly) float attachmentBrowserHeaderLabelPadding;
@property(readonly) UIFont * audioBalloonTimeFont;
@property(readonly) float audioBalloonTimeInset;
@property(readonly) float audioBalloonWaveformTimeSpace;
@property(readonly) UIFont * audioHintFont;
@property(readonly) float balloonLineFragmentPadding;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonMaskAlignmentRectInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonMaskCapInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonMaskFrameCapInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonMaskFrameInsets;
@property(readonly) struct CGSize { float x1; float x2; } balloonMaskSize;
@property(readonly) float balloonMaskTailWidth;
@property(readonly) UIFont * balloonSubjectFont;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonTextContainerInset;
@property(readonly) UIFont * balloonTextFont;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } balloonTranscriptInsets;
@property(readonly) float bottomConversationListSpace;
@property(readonly) float bottomTranscriptSpace;
@property(readonly) BOOL cameraIsWhitelisted;
@property(readonly) BOOL canAccessContacts;
@property(readonly) BOOL canAccessPhotos;
@property(readonly) UIFont * characterCountFont;
@property(readonly) UIImage * chevronImage;
@property(readonly) float contactBalloonMinWidth;
@property(readonly) float contactPhotoBalloonMargin;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contactPhotoTranscriptInsets;
@property(readonly) unsigned int conversationCacheSize;
@property(readonly) float conversationListContactImageDiameter;
@property(readonly) UIFont * conversationListDateFont;
@property(readonly) UIFont * conversationListGroupSenderFont;
@property(readonly) float conversationListMultipleContactsImageDiameter;
@property(readonly) UIFont * conversationListSenderFont;
@property(readonly) UIFont * conversationListSummaryFont;
@property(readonly) unsigned int defaultConversationSummaryMessageCount;
@property(readonly) unsigned int defaultConversationViewingMessageCount;
@property(readonly) UIColor * detailsBackgroundColor;
@property(readonly) UIColor * dimmingViewBackgroundColor;
@property(readonly) float dividerHeight;
@property(readonly) struct CGSize { float x1; float x2; } documentIconSize;
@property(readonly) NSDictionary * drawerTranscriptTextAttributes;
@property(readonly) float editingTransitionAnimationDuration;
@property(readonly) float entryContentViewPortraitWidth;
@property(readonly) float entryCoverViewPortraitWidth;
@property(readonly) UIColor * entryFieldAudioRecordingBaloonColor;
@property(readonly) UIColor * entryFieldBackgroundColor;
@property(readonly) UIColor * entryFieldButtonColor;
@property(readonly) UIColor * entryFieldCoverBorderColor;
@property(readonly) UIColor * entryFieldCoverFillColor;
@property(readonly) float entryFieldCoverLineWidth;
@property(readonly) UIColor * entryFieldDividerColor;
@property(readonly) float entryFieldDividerHeight;
@property(readonly) UIColor * entryFieldGrayColor;
@property(readonly) BOOL entryFieldShouldUseBackdropView;
@property(readonly) UIColor * entryFieldTextColor;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } entryViewCoverInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } entryViewMarginInsets;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } entryViewVerticalAlignmentInsets;
@property(readonly) UIImage * errorDocumentIcon;
@property(readonly) BOOL faceTimeAudioIsWhitelisted;
@property(readonly) BOOL faceTimeVideoIsWhitelisted;
@property(readonly) float fadeInBubbleAnimationDuration;
@property(readonly) UIImage * forwardImage;
@property(readonly) UIImage * genericDocumentIcon;
@property(readonly) UIFont * headerFont;
@property(readonly) BOOL isAccessibilityPreferredContentSizeCategory;
@property(readonly) BOOL joystickUsesWindow;
@property(readonly) int keyboardAppearance;
@property(readonly) float largeTranscriptSpace;
@property(readonly) UIColor * lightGrayColor;
@property(readonly) UIImage * locationShareActionIcon;
@property(readonly) float locationShareBalloonAdditionalVertPadding;
@property(readonly) float locationShareBalloonButtonHeight;
@property(readonly) float locationShareBalloonContactImageDiameter;
@property(readonly) int locationShareEODHour;
@property(readonly) double locationShareOneHourTimeInterval;
@property(readonly) UIFont * locationSubtitleFont;
@property(readonly) double locationValidInterval;
@property(readonly) BOOL lowClearanceInLandscape;
@property(readonly) BOOL mailIsWhitelisted;
@property(readonly) double maxAudioRecordingDuration;
@property(readonly) float mediumTranscriptSpace;
@property(readonly) double minAudioRecordingDuration;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } minimumPlayButtonInsets;
@property(readonly) double muteEightHourTimeInterval;
@property(readonly) double muteOneHourTimeInterval;
@property(readonly) UIFont * nameFieldFont;
@property(readonly) unsigned int numberOfButtonsInPhotoPicker;
@property(readonly) BOOL phoneIsWhitelisted;
@property(readonly) float photoPickerInterItemSpacing;
@property(readonly) float photoPickerMaxPhotoHeight;
@property(readonly) float photoPickerMaxPhotoWidth;
@property(readonly) float photoPickerMaxZoomedPhotoHeight;
@property(readonly) float photoPickerPopoverWidth;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } photoPickerSectionInsets;
@property(readonly) BOOL photoPickerShouldZoomOnSelection;
@property(readonly) BOOL photosIsWhitelisted;
@property(readonly) BOOL presentForwardingUIModally;
@property(readonly) BOOL presentsFullscreenInViewService;
@property(readonly) BOOL presentsQuickLookController;
@property(readonly) BOOL presentsReaderController;
@property(readonly) float previewMaxWidth;
@property(readonly) float previewTitleBarHeight;
@property(readonly) UIFont * previewTitleFont;
@property(readonly) double raiseToTalkAutoSendMaxDuration;
@property(readonly) double raiseToTalkErrorMaxDuration;
@property(readonly) UIImage * readDNDImage;
@property(readonly) UIFont * readerFont;
@property(readonly) UIFont * recipientNameFont;
@property(readonly) UIColor * recipientsDividerColor;
@property(readonly) float resizeMessageEntryViewAnimationDuration;
@property(readonly) float scrollInNewMessageAnimationDuration;
@property(readonly) BOOL selectNewConversationOnDeletion;
@property(readonly) BOOL selectNewConversationOnStateRestore;
@property(readonly) float senderSummaryConversationListSpace;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } senderTranscriptInsets;
@property(readonly) NSDictionary * senderTranscriptTextAttributes;
@property(readonly) BOOL shouldAutomaticallyCheckAvailabilityOfAlternateAddresses;
@property(readonly) BOOL shouldBackfillTranscript;
@property(readonly) BOOL shouldDimTranscript;
@property(readonly) BOOL shouldHomogenizeAtomsForPreferredService;
@property(readonly) BOOL shouldNotShowSendButton;
@property(readonly) BOOL shouldReconfigureNewComposeOnRotation;
@property(readonly) BOOL shouldRefreshAlternateAddressesSheet;
@property(readonly) BOOL shouldShowContactPhotosInConversationList;
@property(readonly) BOOL shouldShowContactPhotosInTranscript;
@property(readonly) BOOL shouldShowDisclosureChevronInRecipientAtoms;
@property(readonly) BOOL shouldSuppressRotationInNewCompose;
@property(readonly) BOOL shouldUseDynamicGradient;
@property(readonly) BOOL shouldUseDynamicScrolling;
@property(readonly) BOOL shouldUseSendAnimation;
@property(readonly) BOOL shouldUseTranslucentBars;
@property(readonly) BOOL showMMSSetup;
@property(readonly) BOOL showPendingInConversationList;
@property(readonly) BOOL showsChevronImage;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } skinnyBalloonMaskCapInsets;
@property(readonly) struct CGSize { float x1; float x2; } skinnyBalloonMaskSize;
@property(readonly) float skinnyBalloonWidthDifference;
@property(readonly) float smallTranscriptSpace;
@property(readonly) NSDictionary * stampTranscriptBoldTextAttributes;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } stampTranscriptInsets;
@property(readonly) NSDictionary * stampTranscriptTextAttributes;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } statusButtonContentEdgeInsets;
@property(readonly) NSAttributedString * statusSaveButtonTranscriptText;
@property(readonly) struct CGSize { float x1; float x2; } statusSaveButtonTranscriptTextSize;
@property(readonly) unsigned int supportedInterfaceOrientations;
@property(readonly) BOOL supportsPassbookAttachments;
@property(readonly) BOOL supportsTypingIndicatorAnimation;
@property(readonly) UIImage * textDocumentIcon;
@property(readonly) float throwMessageAnimationDuration;
@property(readonly) NSDateFormatter * timestampDateFormatter;
@property(readonly) float topConversationListSpace;
@property(readonly) float topTranscriptSpace;
@property(readonly) UIColor * transcriptBackgroundColor;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } transcriptBoldTextAlignmentInsets;
@property(readonly) UIFont * transcriptBoldTextFont;
@property(readonly) float transcriptBoldTextHeight;
@property(readonly) float transcriptContactImageDiameter;
@property(readonly) float transcriptDrawerContactImageDiameter;
@property(readonly) float transcriptDrawerContactImagePadding;
@property(readonly) UIFont * transcriptHeaderTextFont;
@property(readonly) float transcriptHeaderViewMaxRows;
@property(readonly) struct UIEdgeInsets { float x1; float x2; float x3; float x4; } transcriptMarginInsets;
@property(readonly) float transcriptPortraitWidth;
@property(readonly) UIColor * transcriptSeparatorColor;
@property(readonly) UIColor * transcriptTextColor;
@property(readonly) UIFont * transcriptTextFont;
@property(readonly) UIImage * unreadDNDImage;
@property(readonly) UIImage * unreadImage;
@property(readonly) float updateTranscriptInsetsAnimationDuration;
@property(readonly) BOOL usesCustomSplitViewMasterColumnWidth;
@property(readonly) BOOL usesJoystick;
@property(readonly) BOOL usesPersistentConversationSelection;
@property(readonly) BOOL usesPopovers;
@property(readonly) BOOL usesUncollapsedSplitview;
@property(readonly) UIColor * waveformDisabledColor;
@property(readonly) unsigned int waveformGapWidth;
@property(readonly) float waveformHeight;
@property(readonly) unsigned int waveformMaxPowerLevelsCount;
@property(readonly) float waveformMaxWidth;
@property(readonly) double waveformMaxWidthDuration;
@property(readonly) float waveformMinDbPowerLevel;
@property(readonly) float waveformMinLinearPowerLevel;
@property(readonly) unsigned int waveformMinPowerLevelsCount;
@property(readonly) unsigned int waveformPowerLevelWidth;
@property(readonly) unsigned int waveformPowerLevelWidthIncrement;
@property(readonly) UIColor * waveformUnplayedColor;

+ (id)sharedBehaviors;

- (int)HUDStyle;
- (id)_leftStatusTranscriptBoldTextAttributes;
- (id)_leftStatusTranscriptTextAttributes;
- (id)_rightStatusTranscriptBoldTextAttributes;
- (id)_rightStatusTranscriptTextAttributes;
- (float)_transcriptAnimationScaleFactor;
- (id)activeRecordingDotColor;
- (id)appTintColor;
- (id)attachmentBalloonActionColor;
- (struct CGSize { float x1; float x2; })attachmentBalloonSize;
- (id)attachmentBalloonTextColor;
- (struct CGSize { float x1; float x2; })attachmentBrowserDefaultSizeForSquare;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })attachmentBrowserFeedLayoutSectionInset;
- (float)attachmentBrowserGridInterItemSpacing;
- (float)attachmentBrowserGridMinimumLineSpacing;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })attachmentBrowserGridSectionInset;
- (float)attachmentBrowserHeaderLabelPadding;
- (id)audioBalloonTimeFont;
- (float)audioBalloonTimeInset;
- (float)audioBalloonTimeWidthForDuration:(double)arg1;
- (float)audioBalloonWaveformTimeSpace;
- (id)audioHintFont;
- (float)balloonBalloonTranscriptSpace:(unsigned char)arg1;
- (id)balloonColorsForColorType:(BOOL)arg1;
- (float)balloonLineFragmentPadding;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonMaskAlignmentRectInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonMaskCapInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonMaskFrameCapInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonMaskFrameInsets;
- (struct CGSize { float x1; float x2; })balloonMaskSize;
- (float)balloonMaskTailWidth;
- (id)balloonOverlayColorForColorType:(BOOL)arg1;
- (id)balloonSubjectFont;
- (id)balloonTextColorForColorType:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonTextContainerInset;
- (id)balloonTextFont;
- (id)balloonTextLinkColorForColorType:(BOOL)arg1;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })balloonTranscriptInsets;
- (id)blue_balloonColors;
- (id)blue_balloonOverlayColor;
- (id)blue_balloonTextColor;
- (id)blue_balloonTextLinkColor;
- (id)blue_chevronImage;
- (id)blue_progressViewColor;
- (id)blue_recipientTextColor;
- (id)blue_sendButtonColor;
- (id)blue_unfilledBalloonColor;
- (id)blue_waveformColor;
- (float)bottomConversationListSpace;
- (float)bottomTranscriptSpace;
- (BOOL)cameraIsWhitelisted;
- (BOOL)canAccessContacts;
- (BOOL)canAccessPhotos;
- (id)characterCountFont;
- (id)chevronImage;
- (id)chevronImageForColorType:(BOOL)arg1;
- (float)composeBalloonMaxWidthForEntryContentViewWidth:(float)arg1;
- (float)contactBalloonMinWidth;
- (float)contactPhotoBalloonMargin;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contactPhotoTranscriptInsets;
- (unsigned int)conversationCacheSize;
- (float)conversationListContactImageDiameter;
- (id)conversationListDateFont;
- (id)conversationListGroupSenderFont;
- (float)conversationListMultipleContactsImageDiameter;
- (float)conversationListSenderBodyLeading;
- (id)conversationListSenderFont;
- (float)conversationListSummaryBodyLeading;
- (id)conversationListSummaryFont;
- (unsigned int)defaultConversationSummaryMessageCount;
- (unsigned int)defaultConversationViewingMessageCount;
- (id)detailsBackgroundColor;
- (id)dimmingViewBackgroundColor;
- (float)dividerHeight;
- (struct CGSize { float x1; float x2; })documentIconSize;
- (id)drawerTranscriptTextAttributes;
- (float)editingTransitionAnimationDuration;
- (float)entryContentViewPortraitWidth;
- (float)entryCoverViewPortraitWidth;
- (id)entryFieldAudioRecordingBaloonColor;
- (id)entryFieldBackgroundColor;
- (id)entryFieldButtonColor;
- (id)entryFieldCoverBorderColor;
- (id)entryFieldCoverFillColor;
- (float)entryFieldCoverLineWidth;
- (id)entryFieldDividerColor;
- (float)entryFieldDividerHeight;
- (id)entryFieldGrayColor;
- (BOOL)entryFieldShouldUseBackdropView;
- (id)entryFieldTextColor;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })entryViewCoverInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })entryViewMarginInsets;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })entryViewVerticalAlignmentInsets;
- (id)errorDocumentIcon;
- (BOOL)faceTimeAudioIsWhitelisted;
- (BOOL)faceTimeVideoIsWhitelisted;
- (float)fadeInBubbleAnimationDuration;
- (id)forwardImage;
- (id)genericDocumentIcon;
- (id)gray_balloonColors;
- (id)gray_balloonOverlayColor;
- (id)gray_balloonTextColor;
- (id)gray_balloonTextLinkColor;
- (id)gray_chevronImage;
- (id)gray_progressViewColor;
- (id)gray_recipientTextColor;
- (id)gray_sendButtonColor;
- (id)gray_unfilledBalloonColor;
- (id)gray_waveformColor;
- (id)green_balloonColors;
- (id)green_balloonOverlayColor;
- (id)green_balloonTextColor;
- (id)green_balloonTextLinkColor;
- (id)green_chevronImage;
- (id)green_progressViewColor;
- (id)green_recipientTextColor;
- (id)green_sendButtonColor;
- (id)green_unfilledBalloonColor;
- (id)green_waveformColor;
- (id)headerFont;
- (void)invalidateTranscriptDrawerWidth;
- (BOOL)isAccessibilityPreferredContentSizeCategory;
- (BOOL)joystickUsesWindow;
- (int)keyboardAppearance;
- (float)largeTranscriptSpace;
- (float)leftBalloonMaxWidthForTranscriptWidth:(float)arg1 marginInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg2;
- (float)leftSplitPaneMaximumWidth;
- (float)leftSplitPaneMinimumWidth;
- (float)leftSplitPaneWidthForUIInterfaceOrientation:(int)arg1;
- (float)leftSplitPaneWidthFraction;
- (id)lightGrayColor;
- (struct CGSize { float x1; float x2; })locationOfferMapThumbnailFillSizeForWidth:(float)arg1;
- (id)locationShareActionIcon;
- (float)locationShareBalloonAdditionalVertPadding;
- (float)locationShareBalloonButtonHeight;
- (float)locationShareBalloonContactImageDiameter;
- (float)locationShareBalloonLabelMaxHeightForOfferState:(int)arg1;
- (struct CGSize { float x1; float x2; })locationShareBalloonSizeForWidth:(float)arg1 offerState:(int)arg2;
- (int)locationShareEODHour;
- (double)locationShareOneHourTimeInterval;
- (id)locationSubtitleFont;
- (double)locationValidInterval;
- (BOOL)lowClearanceInLandscape;
- (BOOL)mailIsWhitelisted;
- (struct CGSize { float x1; float x2; })mapThumbnailFillSizeForWidth:(float)arg1;
- (double)maxAudioRecordingDuration;
- (float)mediumTranscriptSpace;
- (double)minAudioRecordingDuration;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })minimumPlayButtonInsets;
- (double)muteEightHourTimeInterval;
- (double)muteOneHourTimeInterval;
- (id)nameFieldFont;
- (unsigned int)numberOfButtonsInPhotoPicker;
- (BOOL)phoneIsWhitelisted;
- (float)photoPickerInterItemSpacing;
- (float)photoPickerMaxPhotoHeight;
- (float)photoPickerMaxPhotoWidth;
- (float)photoPickerMaxZoomedPhotoHeight;
- (float)photoPickerPopoverWidth;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })photoPickerSectionInsets;
- (BOOL)photoPickerShouldZoomOnSelection;
- (BOOL)photosIsWhitelisted;
- (BOOL)presentForwardingUIModally;
- (BOOL)presentsFullscreenInViewService;
- (BOOL)presentsQuickLookController;
- (BOOL)presentsReaderController;
- (float)previewMaxWidth;
- (float)previewTitleBarHeight;
- (id)previewTitleFont;
- (id)progressViewColorForColorType:(BOOL)arg1;
- (double)raiseToTalkAutoSendMaxDuration;
- (double)raiseToTalkErrorMaxDuration;
- (id)readDNDImage;
- (id)readerFont;
- (id)recipientNameFont;
- (id)recipientTextColorForColorType:(BOOL)arg1;
- (id)recipientsDividerColor;
- (id)red_balloonColors;
- (id)red_balloonOverlayColor;
- (id)red_balloonTextColor;
- (id)red_balloonTextLinkColor;
- (id)red_chevronImage;
- (id)red_progressViewColor;
- (id)red_recipientTextColor;
- (id)red_sendButtonColor;
- (id)red_unfilledBalloonColor;
- (id)red_waveformColor;
- (float)resizeMessageEntryViewAnimationDuration;
- (float)rightBalloonMaxWidthForEntryContentViewWidth:(float)arg1;
- (float)scrollInNewMessageAnimationDuration;
- (BOOL)selectNewConversationOnDeletion;
- (BOOL)selectNewConversationOnStateRestore;
- (id)sendButtonColorForColorType:(BOOL)arg1;
- (float)senderSummaryConversationListSpace;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })senderTranscriptInsets;
- (id)senderTranscriptTextAttributes;
- (void)setHUDStyle:(int)arg1;
- (BOOL)shouldAutomaticallyCheckAvailabilityOfAlternateAddresses;
- (BOOL)shouldBackfillTranscript;
- (BOOL)shouldDimTranscript;
- (BOOL)shouldHomogenizeAtomsForPreferredService;
- (BOOL)shouldNotShowSendButton;
- (BOOL)shouldReconfigureNewComposeOnRotation;
- (BOOL)shouldRefreshAlternateAddressesSheet;
- (BOOL)shouldShowContactPhotosInConversationList;
- (BOOL)shouldShowContactPhotosInTranscript;
- (BOOL)shouldShowDisclosureChevronInRecipientAtoms;
- (BOOL)shouldSuppressRotationInNewCompose;
- (BOOL)shouldUseDynamicGradient;
- (BOOL)shouldUseDynamicScrolling;
- (BOOL)shouldUseSendAnimation;
- (BOOL)shouldUseTranslucentBars;
- (BOOL)showMMSSetup;
- (BOOL)showPendingInConversationList;
- (BOOL)showsChevronImage;
- (id)siri_balloonColors;
- (id)siri_balloonOverlayColor;
- (id)siri_balloonTextColor;
- (id)siri_balloonTextLinkColor;
- (id)siri_chevronImage;
- (id)siri_progressViewColor;
- (id)siri_recipientTextColor;
- (id)siri_sendButtonColor;
- (id)siri_unfilledBalloonColor;
- (id)siri_waveformColor;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })skinnyBalloonMaskCapInsets;
- (struct CGSize { float x1; float x2; })skinnyBalloonMaskSize;
- (float)skinnyBalloonWidthDifference;
- (float)smallTranscriptSpace;
- (id)stampTranscriptBoldTextAttributes;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })stampTranscriptInsets;
- (id)stampTranscriptTextAttributes;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })statusButtonContentEdgeInsets;
- (id)statusSaveButtonTranscriptText;
- (struct CGSize { float x1; float x2; })statusSaveButtonTranscriptTextSize;
- (id)statusTranscriptBoldTextAttributesForOrientation:(BOOL)arg1;
- (id)statusTranscriptTextAttributesForOrientation:(BOOL)arg1;
- (unsigned int)supportedInterfaceOrientations;
- (BOOL)supportsPassbookAttachments;
- (BOOL)supportsTypingIndicatorAnimation;
- (id)systemGrayChevronImage;
- (id)textDocumentIcon;
- (float)throwMessageAnimationDuration;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })thumbnailContentAlignmentInsetsForOrientation:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })thumbnailFillSizeForWidth:(float)arg1 imageSize:(struct CGSize { float x1; float x2; })arg2;
- (float)timestampBodyLeading;
- (float)timestampBodyLeadingFraction:(float)arg1;
- (id)timestampDateFormatter;
- (float)toFieldPreferredHeight;
- (float)topConversationListSpace;
- (float)topTranscriptSpace;
- (id)transcriptBackgroundColor;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })transcriptBoldTextAlignmentInsets;
- (id)transcriptBoldTextFont;
- (float)transcriptBoldTextHeight;
- (float)transcriptContactImageDiameter;
- (float)transcriptDrawerContactImageDiameter;
- (float)transcriptDrawerContactImagePadding;
- (float)transcriptDrawerOverlapForMarginInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (float)transcriptDrawerWidthForMarginInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (id)transcriptHeaderTextFont;
- (float)transcriptHeaderViewMaxRows;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })transcriptMarginInsets;
- (float)transcriptPortraitWidth;
- (id)transcriptSeparatorColor;
- (id)transcriptTextColor;
- (id)transcriptTextFont;
- (float)transcriptWaveformWidthForDuration:(double)arg1;
- (id)unfilledBalloonColorForColorType:(BOOL)arg1;
- (id)unreadDNDImage;
- (id)unreadImage;
- (float)updateTranscriptInsetsAnimationDuration;
- (BOOL)usesCustomSplitViewMasterColumnWidth;
- (BOOL)usesJoystick;
- (BOOL)usesPersistentConversationSelection;
- (BOOL)usesPopovers;
- (BOOL)usesUncollapsedSplitview;
- (id)waveformColorForColorType:(BOOL)arg1;
- (id)waveformDisabledColor;
- (unsigned int)waveformGapWidth;
- (float)waveformHeight;
- (unsigned int)waveformMaxPowerLevelsCount;
- (float)waveformMaxWidth;
- (double)waveformMaxWidthDuration;
- (float)waveformMinDbPowerLevel;
- (float)waveformMinLinearPowerLevel;
- (unsigned int)waveformMinPowerLevelsCount;
- (unsigned int)waveformPowerLevelWidth;
- (unsigned int)waveformPowerLevelWidthIncrement;
- (id)waveformUnplayedColor;
- (id)whiteChevronImage;

@end
