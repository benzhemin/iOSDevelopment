/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@class NSArray, NSDictionary, NSString, SCNGeometry, SCNOrderedDictionary, SCNParticleSystem, UIColor;

@interface SCNParticleSystem : NSObject <NSCopying, NSSecureCoding, SCNAnimatable> {
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    struct SCNVector3 { 
        float x; 
        float y; 
        float z; 
    struct SCNVector4 { 
        float x; 
        float y; 
        float z; 
        float w; 
    unsigned int _isPresentationInstance : 1;
    } _acceleration;
    BOOL _affectedByGravity;
    BOOL _affectedByPhysicsFields;
    SCNOrderedDictionary *_animations;
    int _birthDirection;
    int _birthLocation;
    float _birthRate;
    float _birthRateVariation;
    BOOL _blackPassEnabled;
    int _blendMode;
    NSArray *_colliderNodes;
    float _dampingFactor;
    float _emissionDuration;
    float _emissionDurationVariation;
    SCNGeometry *_emitterShape;
    } _emittingDirection;
    float _fixedTimeStep;
    float _fresnelExponent;
    float _idleDuration;
    float _idleDurationVariation;
    int _imageSequenceAnimationMode;
    unsigned int _imageSequenceColumnCount;
    float _imageSequenceFrameRate;
    float _imageSequenceFrameRateVariation;
    float _imageSequenceInitialFrame;
    float _imageSequenceInitialFrameVariation;
    unsigned int _imageSequenceRowCount;
    BOOL _isLocal;
    BOOL _lightingEnabled;
    BOOL _loops;
    NSString *_name;
    int _orientationMode;
    float _particleAngle;
    float _particleAngleVariation;
    float _particleAngularVelocity;
    float _particleAngularVelocityVariation;
    float _particleBounce;
    float _particleBounceVariation;
    float _particleCharge;
    float _particleChargeVariation;
    UIColor *_particleColor;
    } _particleColorVariation;
    BOOL _particleDiesOnCollision;
    float _particleFriction;
    float _particleFrictionVariation;
    NSArray *_particleGeometries;
    id _particleImage;
    float _particleLifeSpan;
    float _particleLifeSpanVariation;
    float _particleMass;
    float _particleMassVariation;
    float _particleSize;
    float _particleSizeVariation;
    struct __C3DParticleSystem { } *_particleSystem;
    float _particleVelocity;
    float _particleVelocityVariation;
    BOOL _physicsCollisionsEnabled;
    NSDictionary *_propertyControllers;
    int _renderingMode;
    id _reserved;
    int _seed;
    BOOL _softParticlesEnabled;
    int _sortingMode;
    float _speedFactor;
    float _spreadingAngle;
    float _stretchFactor;
    SCNParticleSystem *_systemSpawnedOnCollision;
    SCNParticleSystem *_systemSpawnedOnDying;
    SCNParticleSystem *_systemSpawnedOnLiving;
    float _warmupDuration;
}

@property struct SCNVector3 { float x1; float x2; float x3; } acceleration;
@property BOOL affectedByGravity;
@property BOOL affectedByPhysicsFields;
@property int birthDirection;
@property int birthLocation;
@property float birthRate;
@property float birthRateVariation;
@property(getter=isBlackPassEnabled) BOOL blackPassEnabled;
@property int blendMode;
@property(copy) NSArray * colliderNodes;
@property float dampingFactor;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property float emissionDuration;
@property float emissionDurationVariation;
@property(retain) SCNGeometry * emitterShape;
@property struct SCNVector3 { float x1; float x2; float x3; } emittingDirection;
@property float fresnelExponent;
@property(readonly) unsigned int hash;
@property float idleDuration;
@property float idleDurationVariation;
@property int imageSequenceAnimationMode;
@property unsigned int imageSequenceColumnCount;
@property float imageSequenceFrameRate;
@property float imageSequenceFrameRateVariation;
@property float imageSequenceInitialFrame;
@property float imageSequenceInitialFrameVariation;
@property unsigned int imageSequenceRowCount;
@property(getter=isLightingEnabled) BOOL lightingEnabled;
@property(getter=isLocal) BOOL local;
@property BOOL loops;
@property int orientationMode;
@property float particleAngle;
@property float particleAngleVariation;
@property float particleAngularVelocity;
@property float particleAngularVelocityVariation;
@property float particleBounce;
@property float particleBounceVariation;
@property float particleCharge;
@property float particleChargeVariation;
@property(retain) UIColor * particleColor;
@property struct SCNVector4 { float x1; float x2; float x3; float x4; } particleColorVariation;
@property BOOL particleDiesOnCollision;
@property float particleFriction;
@property float particleFrictionVariation;
@property(retain) id particleImage;
@property float particleLifeSpan;
@property float particleLifeSpanVariation;
@property float particleMass;
@property float particleMassVariation;
@property float particleSize;
@property float particleSizeVariation;
@property float particleVelocity;
@property float particleVelocityVariation;
@property(copy) NSDictionary * propertyControllers;
@property int sortingMode;
@property float speedFactor;
@property float spreadingAngle;
@property float stretchFactor;
@property(readonly) Class superclass;
@property(retain) SCNParticleSystem * systemSpawnedOnCollision;
@property(retain) SCNParticleSystem * systemSpawnedOnDying;
@property(retain) SCNParticleSystem * systemSpawnedOnLiving;
@property float warmupDuration;

+ (id)SCNJSExportProtocol;
+ (id)particleSystem;
+ (id)particleSystemNamed:(id)arg1 inDirectory:(id)arg2;
+ (id)particleSystemWithParticleSystemRef:(struct __C3DParticleSystem { }*)arg1;
+ (BOOL)supportsSecureCoding;

- (void*)__CFObject;
- (void)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (void)_customDecodingOfSCNParticleSystem:(id)arg1;
- (void)_customEncodingOfSCNParticleSystem:(id)arg1;
- (void)_pauseAnimation:(BOOL)arg1 forKey:(id)arg2;
- (void)_syncEntityObjCModel;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (struct SCNVector3 { float x1; float x2; float x3; })acceleration;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)addAnimation:(id)arg1;
- (void)addModifierForProperties:(id)arg1 atStage:(int)arg2 withBlock:(id)arg3;
- (BOOL)affectedByGravity;
- (BOOL)affectedByPhysicsFields;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned int x_1_1_1; unsigned char x_1_1_2[4]; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; boolx7; boolx8; boolx9; struct _C3DAnimationPendingEvent {} *x10; struct __C3DAllocator {} *x11; struct __CFDictionary {} *x12; struct __CFArray {} *x13; double x14; double x15; struct _opaque_pthread_mutex_t { long x_16_1_1; BOOL x_16_1_2[40]; } x16; int x17; int x18; int x19; int x20; }*)animationManager;
- (BOOL)areSoftParticlesEnabled;
- (int)birthDirection;
- (int)birthLocation;
- (float)birthRate;
- (float)birthRateVariation;
- (BOOL)blackPassEnabled;
- (int)blendMode;
- (id)colliderNodes;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (float)dampingFactor;
- (void)dealloc;
- (float)emissionDuration;
- (float)emissionDurationVariation;
- (id)emitterShape;
- (struct SCNVector3 { float x1; float x2; float x3; })emittingDirection;
- (void)encodeWithCoder:(id)arg1;
- (float)fixedTimeStep;
- (float)fresnelExponent;
- (void)handleEvent:(int)arg1 forProperties:(id)arg2 withBlock:(id)arg3;
- (id)identifier;
- (float)idleDuration;
- (float)idleDurationVariation;
- (int)imageSequenceAnimationMode;
- (unsigned int)imageSequenceColumnCount;
- (float)imageSequenceFrameRate;
- (float)imageSequenceFrameRateVariation;
- (float)imageSequenceInitialFrame;
- (float)imageSequenceInitialFrameVariation;
- (unsigned int)imageSequenceRowCount;
- (id)init;
- (id)initPresentationSystemWithSystemRef:(struct __C3DParticleSystem { }*)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithParticleSystemRef:(struct __C3DParticleSystem { }*)arg1;
- (BOOL)isAnimationForKeyPaused:(id)arg1;
- (BOOL)isBlackPassEnabled;
- (BOOL)isLightingEnabled;
- (BOOL)isLocal;
- (BOOL)isPausedOrPausedByInheritance;
- (BOOL)lightingEnabled;
- (BOOL)loops;
- (id)name;
- (int)orientationMode;
- (float)particleAngle;
- (float)particleAngleVariation;
- (float)particleAngularVelocity;
- (float)particleAngularVelocityVariation;
- (float)particleBounce;
- (float)particleBounceVariation;
- (float)particleCharge;
- (float)particleChargeVariation;
- (id)particleColor;
- (struct SCNVector4 { float x1; float x2; float x3; float x4; })particleColorVariation;
- (BOOL)particleDiesOnCollision;
- (float)particleFriction;
- (float)particleFrictionVariation;
- (id)particleGeometries;
- (id)particleImage;
- (float)particleLifeSpan;
- (float)particleLifeSpanVariation;
- (float)particleMass;
- (float)particleMassVariation;
- (float)particleSize;
- (float)particleSizeVariation;
- (struct __C3DParticleSystem { }*)particleSystemRef;
- (float)particleVelocity;
- (float)particleVelocityVariation;
- (void)pauseAnimationForKey:(id)arg1;
- (BOOL)physicsCollisionsEnabled;
- (id)presentationInstance;
- (id)propertyControllers;
- (void)removeAllAnimations;
- (void)removeAllModifiers;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(float)arg2;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeModifiersOfStage:(int)arg1;
- (int)renderingMode;
- (void)reset;
- (void)resumeAnimationForKey:(id)arg1;
- (id)scene;
- (struct __C3DScene { }*)sceneRef;
- (int)seed;
- (void)setAcceleration:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setAffectedByGravity:(BOOL)arg1;
- (void)setAffectedByPhysicsFields:(BOOL)arg1;
- (void)setBirthDirection:(int)arg1;
- (void)setBirthLocation:(int)arg1;
- (void)setBirthRate:(float)arg1;
- (void)setBirthRateVariation:(float)arg1;
- (void)setBlackPassEnabled:(BOOL)arg1;
- (void)setBlendMode:(int)arg1;
- (void)setColliderNodes:(id)arg1;
- (void)setConstraintRef:(struct __C3DParticleSystem { }*)arg1;
- (void)setDampingFactor:(float)arg1;
- (void)setEmissionDuration:(float)arg1;
- (void)setEmissionDurationVariation:(float)arg1;
- (void)setEmitterShape:(id)arg1;
- (void)setEmittingDirection:(struct SCNVector3 { float x1; float x2; float x3; })arg1;
- (void)setFixedTimeStep:(float)arg1;
- (void)setFresnelExponent:(float)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIdleDuration:(float)arg1;
- (void)setIdleDurationVariation:(float)arg1;
- (void)setImageSequenceAnimationMode:(int)arg1;
- (void)setImageSequenceColumnCount:(unsigned int)arg1;
- (void)setImageSequenceFrameRate:(float)arg1;
- (void)setImageSequenceFrameRateVariation:(float)arg1;
- (void)setImageSequenceInitialFrame:(float)arg1;
- (void)setImageSequenceInitialFrameVariation:(float)arg1;
- (void)setImageSequenceRowCount:(unsigned int)arg1;
- (void)setIsLocal:(BOOL)arg1;
- (void)setLightingEnabled:(BOOL)arg1;
- (void)setLocal:(BOOL)arg1;
- (void)setLoops:(BOOL)arg1;
- (void)setName:(id)arg1;
- (void)setOrientationMode:(int)arg1;
- (void)setParticleAngle:(float)arg1;
- (void)setParticleAngleVariation:(float)arg1;
- (void)setParticleAngularVelocity:(float)arg1;
- (void)setParticleAngularVelocityVariation:(float)arg1;
- (void)setParticleBounce:(float)arg1;
- (void)setParticleBounceVariation:(float)arg1;
- (void)setParticleCharge:(float)arg1;
- (void)setParticleChargeVariation:(float)arg1;
- (void)setParticleColor:(id)arg1;
- (void)setParticleColorVariation:(struct SCNVector4 { float x1; float x2; float x3; float x4; })arg1;
- (void)setParticleDiesOnCollision:(BOOL)arg1;
- (void)setParticleFriction:(float)arg1;
- (void)setParticleFrictionVariation:(float)arg1;
- (void)setParticleGeometries:(id)arg1;
- (void)setParticleImage:(id)arg1;
- (void)setParticleLifeSpan:(float)arg1;
- (void)setParticleLifeSpanVariation:(float)arg1;
- (void)setParticleMass:(float)arg1;
- (void)setParticleMassVariation:(float)arg1;
- (void)setParticleSize:(float)arg1;
- (void)setParticleSizeVariation:(float)arg1;
- (void)setParticleVelocity:(float)arg1;
- (void)setParticleVelocityVariation:(float)arg1;
- (void)setPhysicsCollisionsEnabled:(BOOL)arg1;
- (void)setPropertyControllers:(id)arg1;
- (void)setRenderingMode:(int)arg1;
- (void)setSeed:(int)arg1;
- (void)setSoftParticlesEnabled:(BOOL)arg1;
- (void)setSortingMode:(int)arg1;
- (void)setSpeedFactor:(float)arg1;
- (void)setSpreadingAngle:(float)arg1;
- (void)setStretchFactor:(float)arg1;
- (void)setSystemSpawnedOnCollision:(id)arg1;
- (void)setSystemSpawnedOnDying:(id)arg1;
- (void)setSystemSpawnedOnLiving:(id)arg1;
- (void)setWarmupDuration:(float)arg1;
- (BOOL)softParticlesEnabled;
- (int)sortingMode;
- (float)speedFactor;
- (float)spreadingAngle;
- (float)stretchFactor;
- (id)systemSpawnedOnCollision;
- (id)systemSpawnedOnDying;
- (id)systemSpawnedOnLiving;
- (short)typeOfProperty:(id)arg1;
- (float)warmupDuration;

@end
