/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Foundation.framework/Foundation
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSArray, NSDictionary, NSString, NSURL;

@interface NSError : NSObject <NSCopying, NSSecureCoding> {
    int _code;
    NSString *_domain;
    void *_reserved;
    NSDictionary *_userInfo;
}

@property(getter=_mapkit_isCLDenied,readonly) BOOL _mapkit_CLDenied;
@property(getter=_mapkit_isCLErrorNetwork,readonly) BOOL _mapkit_CLErrorNetwork;
@property(getter=_mapkit_isCLHeadingFailure,readonly) BOOL _mapkit_CLHeadingFailure;
@property(getter=_mapkit_isCLLocationUnknown,readonly) BOOL _mapkit_CLLocationUnknown;
@property(retain,readonly) NSURL * _mapkit_locationErrorSettingsURL;
@property(readonly) int code;
@property(copy,readonly) NSString * domain;
@property(copy,readonly) NSString * helpAnchor;
@property(copy,readonly) NSString * localizedDescription;
@property(copy,readonly) NSString * localizedFailureReason;
@property(copy,readonly) NSArray * localizedRecoveryOptions;
@property(copy,readonly) NSString * localizedRecoverySuggestion;
@property(retain,readonly) id recoveryAttempter;
@property(copy,readonly) NSDictionary * userInfo;

+ (id)APIAuthorizationErrorFromErrorCode:(int)arg1;
+ (id)APIFakeUserErrorFromErrorCode:(int)arg1;
+ (id)APIGenericErrorFromErrorCode:(int)arg1;
+ (id)APIInternalServerErrorFromErrorCode:(int)arg1;
+ (id)APILimitErrorFromErrorCode:(int)arg1;
+ (id)APIParameterErrorFromErrorCode:(int)arg1;
+ (id)APIUserErrorFromErrorCode:(int)arg1;
+ (id)AVConferenceServiceError:(int)arg1 detailCode:(int)arg2 description:(id)arg3;
+ (id)AVConferenceServiceError:(int)arg1 detailCode:(int)arg2 description:(id)arg3;
+ (id)AVConferenceServiceError:(int)arg1 detailedCode:(int)arg2 filePath:(id)arg3 description:(id)arg4 reason:(id)arg5;
+ (id)AVConferenceServiceError:(int)arg1 detailedCode:(int)arg2 filePath:(id)arg3 description:(id)arg4 reason:(id)arg5;
+ (id)AVConferenceServiceError:(int)arg1 detailedCode:(int)arg2 returnCode:(int)arg3 filePath:(id)arg4 description:(id)arg5 reason:(id)arg6;
+ (id)AVConferenceServiceError:(int)arg1 detailedCode:(int)arg2 returnCode:(int)arg3 filePath:(id)arg4 description:(id)arg5 reason:(id)arg6;
+ (id)MCErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 errorType:(id)arg4;
+ (id)MCErrorWithDomain:(id)arg1 code:(int)arg2 descriptionArray:(id)arg3 errorType:(id)arg4;
+ (id)MCErrorWithDomain:(id)arg1 code:(int)arg2 descriptionArray:(id)arg3 suggestion:(id)arg4 USEnglishSuggestion:(id)arg5 underlyingError:(id)arg6 errorType:(id)arg7;
+ (id)MCErrorWithDomain:(id)arg1 code:(int)arg2 descriptionArray:(id)arg3 underlyingError:(id)arg4 errorType:(id)arg5;
+ (id)MMCSErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3;
+ (id)MSErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 suggestion:(id)arg4;
+ (id)MSErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 underlyingError:(id)arg4 additionalUserInfo:(id)arg5;
+ (id)MSErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 underlyingError:(id)arg4;
+ (id)MSErrorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3;
+ (id)_ax_errorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 arguments:(void*)arg4;
+ (id)_defaultDescriptionForCode:(int)arg1;
+ (id)_geo_errorFromXPCData:(id)arg1;
+ (id)_gkUnauthenticatedError;
+ (void)_registerBuiltInFormatters;
+ (void)_registerFormatter:(int (*)())arg1 forErrorKey:(id)arg2 parameters:(const char *)arg3;
+ (void)_registerWebKitErrors;
+ (id)_webKitErrorWithCode:(int)arg1 failingURL:(id)arg2;
+ (id)_webKitErrorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_webUI_WebUIErrorWithCode:(unsigned int)arg1 URL:(id)arg2;
+ (void)_web_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_web_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)_web_errorWithDomain:(id)arg1 code:(int)arg2 failingURL:(id)arg3;
+ (void)_webkit_addErrorsWithCodesAndDescriptions:(id)arg1 inDomain:(id)arg2;
+ (id)_webkit_errorWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
+ (id)ax_errorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3;
+ (id)ax_errorWithDomain:(id)arg1 description:(id)arg2;
+ (id)brc_daemonAccessDisabledError;
+ (id)brc_errorAccountMismatch;
+ (id)brc_errorContainerNotFound:(id)arg1;
+ (id)brc_errorDaemonShouldBeLoggedOut;
+ (id)brc_errorDocumentAtURL:(id)arg1 isNotExternalToContainer:(id)arg2;
+ (id)brc_errorInvalidParameter:(id)arg1 value:(id)arg2;
+ (id)brc_errorItemNotFound:(id)arg1;
+ (id)brc_errorMethodNotImplemented:(const char *)arg1;
+ (id)brc_errorNoContainerForBundle:(id)arg1;
+ (id)brc_errorNoDocumentAtURL:(id)arg1 underlyingPOSIXError:(int)arg2;
+ (id)brc_errorNotInCloud:(id)arg1;
+ (id)brc_errorPathOutsideAnyCloudDocsContainerAtURL:(id)arg1;
+ (id)brc_errorPermissionErrorAtURL:(id)arg1;
+ (id)bs_timeoutError;
+ (id)cecAcknowledgementErrorWithUnderlyingError:(id)arg1;
+ (id)cecFeatureAbortErrorWithOpCode:(unsigned char)arg1 reason:(unsigned char)arg2 method:(id)arg3;
+ (id)cecIOErrorWithUnderlyingError:(id)arg1;
+ (id)errorForDB:(struct sqlite3 { }*)arg1 SQL:(id)arg2;
+ (id)errorForDB:(struct sqlite3 { }*)arg1 stmt:(struct sqlite3_stmt { }*)arg2;
+ (id)errorForDB:(struct sqlite3 { }*)arg1;
+ (id)errorFromErrno;
+ (id)errorFromErrno;
+ (id)errorFromTencentWeiboAPIResponseErrorWithType:(int)arg1 code:(int)arg2;
+ (id)errorWithBTResult:(id)arg1;
+ (id)errorWithCADResult:(int)arg1 action:(id)arg2;
+ (id)errorWithCADResult:(int)arg1;
+ (id)errorWithCode:(int)arg1 description:(id)arg2 reason:(id)arg3;
+ (id)errorWithCode:(int)arg1 description:(id)arg2;
+ (id)errorWithCode:(int)arg1;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4 userInfo:(id)arg5;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4 userInfo:(id)arg5;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 recoverySuggestion:(id)arg4;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3 recoverySuggestion:(id)arg4;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 description:(id)arg3;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 localizedDescription:(id)arg3;
+ (id)errorWithDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
+ (id)errorWithPOSIXCode:(int)arg1 description:(id)arg2;
+ (id)errorWithPOSIXCode:(int)arg1;
+ (id)errorWithPOSIXCode:(int)arg1;
+ (id)errorWithSqliteCode:(int)arg1 andMessage:(id)arg2;
+ (id)errorWithStreamDomain:(long)arg1 code:(long)arg2 localizedDescription:(id)arg3;
+ (id)errorWithTSKWarning:(id)arg1;
+ (id)genericErrorWithFile:(const char *)arg1 function:(const char *)arg2 lineNumber:(int)arg3;
+ (id)hk_error:(int)arg1 description:(id)arg2;
+ (id)hk_error:(int)arg1 format:(id)arg2;
+ (id)hs_cloudErrorWithCode:(int)arg1 userInfo:(id)arg2;
+ (id)hs_homeSharingErrorWithCode:(int)arg1 userInfo:(id)arg2;
+ (id)mf_timeoutError;
+ (id)ph_errorWithDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
+ (id)serverErrorForCode:(int)arg1 withReason:(id)arg2;
+ (id)serverErrorForCode:(int)arg1 withUserInfo:(id)arg2;
+ (BOOL)supportsSecureCoding;
+ (id)tl_errorWithDomain:(id)arg1 description:(id)arg2;
+ (id)tsa_errorWithCode:(int)arg1;
+ (id)tsp_errorWithCode:(int)arg1 userInfo:(id)arg2;
+ (id)tsp_errorWithCode:(int)arg1;
+ (id)tsp_recoverableErrorWithCode:(int)arg1;
+ (id)tsp_recoverableErrorWithError:(id)arg1;
+ (id)tsuErrorWithCode:(int)arg1 userInfo:(id)arg2;
+ (id)tsuErrorWithCode:(int)arg1;
+ (id)tsu_IOErrorWithCode:(int)arg1 userInfo:(id)arg2;
+ (id)tsu_IOErrorWithCode:(int)arg1;
+ (id)tsu_IOReadErrorWithErrno:(int)arg1;
+ (id)tsu_IOWriteErrorWithErrno:(int)arg1;
+ (id)userErrorForCode:(int)arg1 underlyingError:(id)arg2;
+ (id)userErrorForCode:(int)arg1 userInfo:(id)arg2;
+ (id)userErrorForServerCode:(int)arg1 reason:(id)arg2;
+ (id)userErrorForServerError:(id)arg1;
+ (id)zilchDecoderErrorForNoSolution;

- (id)ATPError;
- (id)CKClientSuitableError;
- (BOOL)CKIsNotFoundError;
- (id)DAExtendedDescription;
- (BOOL)MCContainsErrorDomain:(id)arg1 code:(int)arg2;
- (id)MCCopyAsPrimaryError;
- (id)MCErrorType;
- (id)MCFindPrimaryError;
- (id)MCUSEnglishDescription;
- (id)MCUSEnglishSuggestion;
- (id)MCVerboseDescription;
- (int)MMCSErrorType;
- (BOOL)MMCSIsAuthorizationError;
- (BOOL)MMCSIsCancelError;
- (BOOL)MMCSIsFatalError;
- (BOOL)MMCSIsNetworkConditionsError;
- (id)MMCSRetryAfterDate;
- (BOOL)MSASStateMachineIsCanceledError;
- (BOOL)MSCanBeIgnored;
- (BOOL)MSContainsErrorWithDomain:(id)arg1 code:(int)arg2;
- (id)MSFindPrimaryError;
- (BOOL)MSIsAuthError;
- (BOOL)MSIsBadTokenError;
- (BOOL)MSIsCounted;
- (BOOL)MSIsFatal;
- (BOOL)MSIsQuotaError;
- (BOOL)MSIsRegistrationError;
- (BOOL)MSIsTemporaryNetworkError;
- (id)MSMMCSRetryAfterDate;
- (id)MSMakePrimaryError;
- (BOOL)MSNeedsBackoff;
- (id)MSVerboseDescription;
- (void)_MMCSApplyBlock:(id)arg1;
- (void)_MSApplyBlock:(id)arg1;
- (id)_MSVerboseDescriptionRecursionCount:(int)arg1;
- (unsigned long)_cfTypeID;
- (id)_cocoaErrorString:(id)arg1 fromBundle:(id)arg2 tableName:(id)arg3;
- (id)_cocoaErrorString:(id)arg1;
- (id)_cocoaErrorStringWithKind:(id)arg1 variant:(id)arg2;
- (id)_cocoaErrorStringWithKind:(id)arg1;
- (int)_collectApplicableUserInfoFormatters:(struct { /* ? */ }**)arg1 max:(int)arg2;
- (id)_cplSafeUserInfoForXPCDidChange:(BOOL*)arg1;
- (id)_formatCocoaErrorString:(id)arg1 parameters:(const char *)arg2 applicableFormatters:(struct { /* ? */ }**)arg3 count:(int)arg4;
- (id)_geo_newXPCData;
- (BOOL)_gkIsUnauthenticatedError;
- (id)_initWithPluginErrorCode:(int)arg1 contentURL:(id)arg2 pluginPageURL:(id)arg3 pluginName:(id)arg4 MIMEType:(id)arg5;
- (int)_mapkit_directionsErrorCode;
- (id)_mapkit_directionsErrorWithDetail:(struct { int x1; int x2; struct { unsigned int x_3_1_1 : 1; unsigned int x_3_1_2 : 1; } x3; }*)arg1;
- (id)_mapkit_error;
- (BOOL)_mapkit_isCLDenied;
- (BOOL)_mapkit_isCLErrorNetwork;
- (BOOL)_mapkit_isCLHeadingFailure;
- (BOOL)_mapkit_isCLLocationUnknown;
- (BOOL)_mapkit_isDirectionsError;
- (id)_mapkit_locationErrorSettingsURL;
- (int)_mapkit_underlyingGEOError;
- (struct __CFString { }*)_retainedUserInfoCallBackForKey:(id)arg1;
- (BOOL)_web_errorIsInDomain:(id)arg1;
- (id)_web_failingURL;
- (id)_web_initWithDomain:(id)arg1 code:(int)arg2 failingURL:(id)arg3;
- (id)_web_initWithDomain_nowarn:(id)arg1 code:(int)arg2 URL:(id)arg3;
- (id)_web_localizedDescription;
- (id)_webkit_initWithDomain:(id)arg1 code:(int)arg2 URL:(id)arg3;
- (id)ac_secureCodingError;
- (id)ax_nonRedundantDescription;
- (BOOL)br_checkErrorsFromCloudKit:(id)arg1;
- (id)br_cloudKitErrorForIdentifier:(id)arg1;
- (id)br_cloudKitErrorForRecordID:(id)arg1;
- (id)br_cloudKitErrorForSubscriptionID:(id)arg1;
- (unsigned int)br_containerResetError;
- (BOOL)br_isBlacklistError;
- (BOOL)br_isCloudDocsErrorCode:(int)arg1;
- (BOOL)br_isCloudKitCancellationError;
- (BOOL)br_isCloudKitErrorCode:(int)arg1;
- (BOOL)br_isCloudKitErrorRequiringAssetReupload;
- (BOOL)br_isCloudKitErrorRequiringSyncDownFirst;
- (BOOL)br_isCloudKitInternalErrorCode:(int)arg1;
- (BOOL)br_isCloudKitOutOfQuota;
- (BOOL)br_isCloudKitUnknownItemError;
- (BOOL)br_isResetError;
- (double)br_suggestedRetryTimeInterval;
- (id)br_wrappedError;
- (BOOL)bs_isCancelledError;
- (BOOL)bs_isTimeoutError;
- (int)code;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyXPCEncoding;
- (id)cplSafeErrorForXPC;
- (id)cplShortDomainDescription;
- (id)cplUnderlyingPOSIXError;
- (void)dealloc;
- (id)description;
- (id)domain;
- (void)encodeWithCoder:(id)arg1;
- (id)encodeableError;
- (id)encodeableError;
- (id)encodeableError;
- (id)encodeableError;
- (id)errorBySettingFatalError:(BOOL)arg1;
- (int)extendedSqliteCode;
- (id)failingURL;
- (void)finalize;
- (unsigned int)hash;
- (id)helpAnchor;
- (BOOL)hk_isAuthorizationDeniedError;
- (BOOL)hk_isAuthorizationNotDeterminedError;
- (BOOL)hk_isDatabaseAccessibilityError;
- (BOOL)hk_isInternalFailureError;
- (BOOL)hk_isInvalidArgumentError;
- (id)initWithATPError:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithDomain:(id)arg1 code:(int)arg2 userInfo:(id)arg3;
- (id)initWithXPCEncoding:(id)arg1;
- (BOOL)isCECAcknowledgementError;
- (BOOL)isCPLError;
- (BOOL)isCPLErrorWithCode:(int)arg1;
- (BOOL)isCPLOperationCancelledError;
- (BOOL)isCancelError;
- (BOOL)isCancelError;
- (BOOL)isCocoaErrorCode:(int)arg1;
- (BOOL)isConnectivityError;
- (BOOL)isEqual:(id)arg1 compareUserInfo:(BOOL)arg2;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualToError:(id)arg1;
- (BOOL)isExpiredPasswordError;
- (BOOL)isFatalError;
- (BOOL)isInvalidSubscriberError;
- (BOOL)isNewPasswordError;
- (BOOL)isOutOfSpaceError;
- (BOOL)isOutOfSpaceError;
- (BOOL)isPOSIXErrorCode:(int)arg1;
- (BOOL)isPOSIXErrorCode:(int)arg1;
- (BOOL)isPasswordMismatchError;
- (BOOL)isSecurityError;
- (BOOL)isServerError;
- (BOOL)isSiriUISnippetPluginError;
- (BOOL)isSqliteErrorCode:(int)arg1;
- (BOOL)isStreamDomain:(long)arg1 error:(long)arg2;
- (id)localizedAlertMessage;
- (id)localizedAlertMessage;
- (id)localizedAlertTitle;
- (id)localizedAlertTitle;
- (id)localizedDescription;
- (id)localizedFailureReason;
- (id)localizedRecoveryOptions;
- (id)localizedRecoverySuggestion;
- (BOOL)mf_isCancelledError;
- (BOOL)mf_isInaccessibleAccountCredentialError;
- (BOOL)mf_isMissingAccountCredentialError;
- (BOOL)mf_isTimeoutError;
- (BOOL)mf_isUserCancelledError;
- (id)mf_moreInfo;
- (id)mf_shortDescription;
- (BOOL)mf_shouldBeReportedToUser;
- (id)recoveryAttempter;
- (id)replacementObjectForPortCoder:(id)arg1;
- (BOOL)safari_errorOrAnyPartialErrorHasCloudKitErrorCode:(int)arg1;
- (BOOL)shouldPresentErrorForTaskType:(int)arg1;
- (id)sqliteStatement;
- (id)tl_nonRedundantDescription;
- (BOOL)tsp_isRecoverable;
- (int)tsu_IOErrorNumber;
- (id)userInfo;
- (id)userReadableError;
- (id)zilchDecoderTileLoadingError;

@end
