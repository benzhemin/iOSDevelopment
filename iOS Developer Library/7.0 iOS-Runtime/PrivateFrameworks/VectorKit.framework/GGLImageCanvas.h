/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSString;

@interface GGLImageCanvas : NSObject <MDRenderTarget> {
    struct CGSize { 
        float width; 
        float height; 
    struct unique_ptr<ggl::Texture2D, std::__1::default_delete<ggl::Texture2D> > { 
        struct __compressed_pair<ggl::Texture2D *, std::__1::default_delete<ggl::Texture2D> > { 
            struct Texture2D {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::TextureBuffer, std::__1::default_delete<ggl::TextureBuffer> > { 
        struct __compressed_pair<ggl::TextureBuffer *, std::__1::default_delete<ggl::TextureBuffer> > { 
            struct TextureBuffer {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::IOSurfaceTexture, std::__1::default_delete<ggl::IOSurfaceTexture> > { 
        struct __compressed_pair<ggl::IOSurfaceTexture *, std::__1::default_delete<ggl::IOSurfaceTexture> > { 
            struct IOSurfaceTexture {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::TextureBuffer, std::__1::default_delete<ggl::TextureBuffer> > { 
        struct __compressed_pair<ggl::TextureBuffer *, std::__1::default_delete<ggl::TextureBuffer> > { 
            struct TextureBuffer {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderBuffer, std::__1::default_delete<ggl::RenderBuffer> > { 
        struct __compressed_pair<ggl::RenderBuffer *, std::__1::default_delete<ggl::RenderBuffer> > { 
            struct RenderBuffer {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderTargetOperation, std::__1::default_delete<ggl::RenderTargetOperation> > { 
        struct __compressed_pair<ggl::RenderTargetOperation *, std::__1::default_delete<ggl::RenderTargetOperation> > { 
            struct RenderTargetOperation {} *__first_; 
        } __ptr_; 
    struct unique_ptr<ggl::RenderTarget, std::__1::default_delete<ggl::RenderTarget> > { 
        struct __compressed_pair<ggl::RenderTarget *, std::__1::default_delete<ggl::RenderTarget> > { 
            struct RenderTarget {} *__first_; 
        } __ptr_; 
    BOOL _canMakeImage;
    } _colorBuffer;
    } _colorTexture;
    float _contentScale;
    } _depthStencilBuffer;
    } _flippedColorBuffer;
    } _flippedRenderTarget;
    } _flippedSurfaceTexture;
    } _msaaBlitOperation;
    } _msaaColorBuffer;
    } _msaaDepthStencilBuffer;
    } _msaaRenderTarget;
    BOOL _recreateRenderTarget;
    } _renderTarget;
    } _size;
    BOOL _useMultisampling;
}

@property(readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); /* Warning: unhandled struct encoding: '{basic_string<char' */ struct x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; unsigned int x29; oneway int x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; unsigned long long x43; void*x44; char *x45; void*x46; unsigned long long x47; void*x48; char *x49; void*x50; struct x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; }* renderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property(readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); struct x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; long x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; long x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; long x59; void*x60; void*x61; void*x62; long x63; void*x64; void*x65; void*x66; long x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; in void*x75; void*x76; oneway void*x77; void*x78; id x79; unsigned int x80/* : ? */; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; long x113; void*x114; void*x115; void*x116; void*x117; void*x118; long x119; void*x120; in void*x121; void*x122; void*x123; long x124; void*x125; void*x126; unsigned int x127/* : ? */; void*x128; void*x129; void*x130; double x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; long x198; void*x199; BOOL x200; void*x201; const int x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; double x218; void*x219; void*x220; void*x221; double x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; double x241; int x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; short x251; int x252; BOOL x253; short x254; void*x255; int x256; void*x257; long x258; double x259; void*x260; long x261; void*x262; BOOL x263; void*x264; const int x265; BOOL x266; void*x267; void*x268; void*x269; void*x270; void*x271; oneway void*x272; void*x273; void*x274; void*x275; void*x276; unsigned short x277; void*x278; short x279; void*x280; void*x281; void*x282; void*x283; unsigned long x284; int x285; unsigned int x286/* : ? */; const void*x287; const void*x288; void*x289; void*x290; const int x291; void x292; void*x293; void*x294; void*x295; void*x296; const void*x297; void*x298; void*x299; void*x300; out const void*x301; short x302; void*x303; void*x304; void*x305; void*x306; short x307; int x308; BOOL x309; short x310; void*x311; int x312; void*x313; void*x314; float x315; const void*x316; void*x317; void*x318; void*x319; out const void*x320; void*x321; void*x322; void*x323; void*x324; short x325; int x326; BOOL x327; short x328; void*x329; int x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; void*x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; void*x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; void*x409; void*x410; unsigned short x411; unsigned short x412; void*x413; void*x414; void*x415; const int x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; unsigned long x427; void*x428; void*x429; void*x430; unsigned long x431; void*x432; void*x433; void*x434; void*x435; void*x436; void* x437[ /* ? */ ]; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; double x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; unsigned short x471; void*x472; void*x473; void*x474; const int x475; BOOL x476; short x477; unsigned short x478; void*x479; void*x480; const BOOL x481; void*x482; void*x483; void x484; void*x485; in void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; void*x511; void*x512; void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; void*x532; void*x533; void*x534; void*x535; void*x536; void*x537; void*x538; void*x539; void*x540; void*x541; void*x542; void*x543; void*x544; void*x545; void*x546; void*x547; void*x548; void*x549; void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; void*x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void*x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; void*x623; void*x624; void*x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; unsigned long long x641; void*x642; void*x643; unsigned short x644; unsigned short x645; unsigned long long x646; unsigned long x647; int x648; void*x649; void*x650; unsigned int x651; in void*x652; long x653; void*x654; BOOL x655; void*x656; void*x657; int x658; void*x659; const void*x660; void*x661; int x662; out in void*x663; void*x664; in void*x665; void*x666; void*x667; const void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; unsigned short x686; void*x687; short x688; void*x689; void*x690; void*x691; void*x692; unsigned long x693; int x694; unsigned int x695/* : ? */; const void*x696; const void*x697; void*x698; void*x699; const void*x700; void*x701; void*x702; void*x703; out const void*x704; short x705; void*x706; unsigned char x707; out const void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; float x714; const void*x715; void*x716; void*x717; void*x718; out const void*x719; void*x720; unsigned char x721; out const void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; void*x729; void*x730; void*x731; void*x732; void*x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; void*x743; void*x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; void*x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; unsigned long x761; void*x762; out void*x763; void*x764; in void*x765; void*x766; short x767; short x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; void*x775; void*x776; const int x777; void x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; union x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; void*x823; void*x824; void*x825; void*x826; void*x827; void*x828; void*x829; void*x830; void*x831; void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; long long x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; float x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; unsigned int x876; unsigned int x877; in void*x878; void*x879; void*x880; oneway int x881; void*x882; void*x883; unsigned short x884; void*x885; void*x886; void*x887; long x888; void*x889; BOOL x890; void*x891; void*x892; void*x893; in void*x894; bycopy float x895; float x896; unsigned short x897; BOOL x898; const void*x899; void*x900; in unsigned long x901; void*x902; float x903; void*x904; void*x905; void*x906; void*x907; void*x908; void*x909; void*x910; void*x911; void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; void*x928; void*x929; void*x930; void*x931; void*x932; void*x933; void*x934; void*x935; void*x936; void*x937; void*x938; void*x939; void*x940; out void*x941; void*x942; void*x943; void*x944; void*x945; void*x946; void*x947; void*x948; void*x949; void*x950; void*x951; void*x952; void*x953; void*x954; void*x955; void*x956; void*x957; void*x958; void*x959; void*x960; void*x961; void*x962; void*x963; long x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void*x994; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; unsigned long long x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; unsigned long long x1058; void*x1059; void*x1060; void*x1061; inout void*x1062; void*x1063; void*x1064; out const void*x1065; bycopy unsigned int x1066/* : ? */; short x1067; void*x1068; const void x1069; void*x1070; const void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; unsigned short x1087; void*x1088; short x1089; void*x1090; void*x1091; void*x1092; void*x1093; unsigned long x1094; int x1095; unsigned int x1096/* : ? */; const void*x1097; const void*x1098; void*x1099; void*x1100; const int x1101; void x1102; void*x1103; void*x1104; void*x1105; void*x1106; const void*x1107; void*x1108; void*x1109; void*x1110; out const void*x1111; short x1112; void*x1113; void*x1114; void*x1115; void*x1116; unsigned short x1117; void*x1118; void*x1119; void*x1120; out const void*x1121; void*x1122; float x1123; const void*x1124; void*x1125; void*x1126; void*x1127; out const void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; unsigned short x1133; void*x1134; void*x1135; void*x1136; out const void*x1137; void*x1138; void*x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; unsigned long x1177; void*x1178; short x1179; void*x1180; const void*x1181; double x1182; int x1183; void*x1184; void*x1185; unsigned int x1186/* : ? */; long x1187; void*x1188; void*x1189; long x1190; unsigned int x1191/* : ? */; void*x1192; void*x1193; void*x1194; const out void*x1195; out BOOL x1196; out long x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void**x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; unsigned long x1213; unsigned char x1214; out void*x1215; void*x1216; void*x1217; void*x1218; void**x1219; void*x1220; void*x1221; void*x1222; void*x1223; in short x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; long long x1238; void*x1239; void*x1240; void*x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; void*x1247; void*x1248; void*x1249; void*x1250; void*x1251; void*x1252; void*x1253; void*x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; void*x1265; void*x1266; long x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; unsigned long x1274; unsigned char x1275; out void*x1276; void*x1277; int x1278; long x1279; void*x1280; bycopy void*x1281; void*x1282; int x1283; out in short x1284; void*x1285; void*x1286; void*x1287; void*x1288; void*x1289; void*x1290; void*x1291; void*x1292; void*x1293; void*x1294; void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; unsigned short x1301; void*x1302; short x1303; void*x1304; void*x1305; void*x1306; void*x1307; unsigned long x1308; int x1309; unsigned int x1310/* : ? */; const void*x1311; const void*x1312; void*x1313; void*x1314; const void*x1315; void*x1316; void*x1317; void*x1318; out const void*x1319; short x1320; void*x1321; void*x1322; void*x1323; void*x1324; void*x1325; long x1326; void*x1327; float x1328; const void*x1329; void*x1330; void*x1331; void*x1332; out const void*x1333; void*x1334; void*x1335; void*x1336; void*x1337; void*x1338; long x1339; void*x1340; void*x1341; void*x1342; void*x1343; void*x1344; void*x1345; void*x1346; void*x1347; void*x1348; void*x1349; void*x1350; void*x1351; void*x1352; void*x1353; void*x1354; void*x1355; void*x1356; void*x1357; void*x1358; void*x1359; void*x1360; void*x1361; void*x1362; void*x1363; void*x1364; void*x1365; void*x1366; void*x1367; void*x1368; void*x1369; void*x1370; void*x1371; void*x1372; void*x1373; void*x1374; void*x1375; void*x1376; void*x1377; void*x1378; void*x1379; void*x1380; void*x1381; void*x1382; void*x1383; void*x1384; void*x1385; void*x1386; void*x1387; void*x1388; void*x1389; void*x1390; boolx1391; void*x1392; void*x1393; void*x1394; BOOL x1395; void*x1396; void*x1397; void*x1398; void*x1399; void*x1400; void*x1401; void*x1402; void*x1403; void*x1404; void*x1405; void*x1406; void*x1407; void*x1408; void*x1409; void*x1410; long x1411; void*x1412; void*x1413; void*x1414; void*x1415; void*x1416; void*x1417; void*x1418; void*x1419; void*x1420; void*x1421; void*x1422; void*x1423; void*x1424; void*x1425; void*x1426; }* msaaRenderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property(readonly) struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); struct x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; unsigned int x29; void*x30; void*x31; double x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; unsigned short x51; void*x52; void*x53; void*x54; unsigned short x55; void*x56; const void*x57; BOOL x58; void*x59; void*x60; const void*x61; double x62; void*x63; in short x64; void*x65; void*x66; const void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; SEL x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; unsigned short x120; void*x121; short x122; void*x123; void*x124; void*x125; void*x126; unsigned long x127; int x128; unsigned int x129/* : ? */; const void*x130; const void*x131; void*x132; void*x133; const void*x134; void*x135; void*x136; void*x137; out const void*x138; short x139; void*x140; void*x141; oneway void*x142; out void*x143; in double x144; void*x145; void*x146; int x147; out in void*x148; float x149; const void*x150; void*x151; void*x152; void*x153; out const void*x154; void*x155; void*x156; oneway void*x157; out void*x158; in double x159; void*x160; void*x161; int x162; out in void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; oneway void*x182; void*x183; void*x184; void*x185; const in void*x186; long x187; void*x188; void*x189; void x190; int x191; BOOL x192; void*x193; unsigned int x194; in void*x195; void*x196; const in void*x197; long x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; void*x252; void*x253; void*x254; out void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; void*x269; void*x270; void*x271; void*x272; void*x273; void*x274; void*x275; void*x276; void*x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; void*x285; void*x286; void*x287; void*x288; void*x289; void*x290; void*x291; void*x292; void*x293; unsigned short x294; void*x295; short x296; void*x297; void*x298; void*x299; void*x300; unsigned long x301; int x302; unsigned int x303/* : ? */; const void*x304; const void*x305; void*x306; void*x307; const int x308; void x309; void*x310; void*x311; void*x312; void*x313; const void*x314; void*x315; void*x316; void*x317; out const void*x318; short x319; void*x320; void*x321; out unsigned int x322/* : ? */; int x323; long x324; void*x325; unsigned int x326; in short x327; void*x328; void*x329; long x330; long x331; void*x332; void*x333; int x334; out in void*x335; float x336; const void*x337; void*x338; void*x339; void*x340; out const void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; float x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; void*x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; void*x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; unsigned short x385; void*x386; short x387; void*x388; void*x389; void*x390; void*x391; unsigned long x392; int x393; unsigned int x394/* : ? */; const void*x395; const void*x396; void*x397; void*x398; const void*x399; void*x400; void*x401; void*x402; out const void*x403; short x404; void*x405; void*x406; out void*x407; in double x408; void*x409; void*x410; int x411; out in void*x412; float x413; const void*x414; void*x415; void*x416; void*x417; out const void*x418; void*x419; void*x420; out void*x421; in double x422; void*x423; void*x424; int x425; out in void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; inout unsigned short x448; void*x449; void*x450; void*x451; void*x452; unsigned char x453; void*x454; void*x455; BOOL x456; void*x457; int x458; in void*x459; void*x460; void*x461; short x462; void*x463; long x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; void*x475; void*x476; void*x477; void*x478; void*x479; void*x480; void*x481; void*x482; void*x483; void*x484; void*x485; void*x486; void*x487; void*x488; void*x489; void*x490; void*x491; void*x492; void*x493; void*x494; void*x495; void*x496; void*x497; void*x498; void*x499; void*x500; void*x501; void*x502; void*x503; void*x504; void*x505; void*x506; void*x507; void*x508; void*x509; void*x510; unsigned short x511; void*x512; void*x513; void*x514; void*x515; unsigned char x516; void*x517; void*x518; const void*x519; void*x520; void*x521; void*x522; void*x523; void*x524; void*x525; void*x526; void*x527; void*x528; void*x529; void*x530; void*x531; unsigned short x532; void*x533; void*x534; in short x535; void*x536; void*x537; const unsigned short x538; void*x539; const void*x540; BOOL x541; void*x542; void*x543; const void*x544; double x545; void*x546; in short x547; void*x548; void*x549; const void*x550; void*x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; void*x559; void*x560; void*x561; void*x562; void*x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; unsigned short x600; void*x601; short x602; void*x603; void*x604; void*x605; void*x606; unsigned long x607; int x608; unsigned int x609/* : ? */; const void*x610; const void*x611; void*x612; void*x613; const void*x614; void*x615; void*x616; void*x617; out const void*x618; short x619; void*x620; unsigned char x621; out const void*x622; unsigned int x623; void*x624; void*x625; void*x626; void*x627; void*x628; float x629; const void*x630; void*x631; void*x632; void*x633; out const void*x634; void*x635; unsigned char x636; out const void*x637; unsigned int x638; void*x639; void*x640; void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; void*x648; void*x649; void*x650; void*x651; void*x652; void*x653; void*x654; void*x655; void*x656; void*x657; void*x658; void*x659; void*x660; void*x661; void*x662; void*x663; void*x664; void*x665; void*x666; unsigned char x667; unsigned int x668; unsigned short x669; out float x670; void*x671; unsigned long x672; int x673; void*x674; void*x675; void*x676; boolx677; long x678; void*x679; in double x680; void*x681; out double x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; void*x711; void*x712; void*x713; void*x714; void*x715; void*x716; void*x717; void*x718; void*x719; void*x720; void*x721; void*x722; void*x723; void*x724; void*x725; void*x726; void*x727; void*x728; unsigned int x729; unsigned short x730; out float x731; void*x732; unsigned long x733; void*x734; void*x735; void*x736; void*x737; void*x738; void*x739; void*x740; void*x741; double x742; void*x743; out double x744; void*x745; void*x746; void*x747; void*x748; void*x749; void*x750; char *x751; void*x752; void*x753; void*x754; void*x755; void*x756; void*x757; void*x758; void*x759; void*x760; void*x761; void*x762; void*x763; void*x764; void*x765; void*x766; void*x767; void*x768; void*x769; void*x770; void*x771; void*x772; void*x773; void*x774; char *x775; void*x776; void*x777; void*x778; void*x779; void*x780; void*x781; void*x782; void*x783; void*x784; void*x785; void*x786; void*x787; void*x788; void*x789; void*x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; void*x815; void*x816; void*x817; void*x818; void*x819; void*x820; void*x821; void*x822; in void*x823; void*x824; void*x825; double x826; void*x827; void*x828; void*x829; int x830; void*x831; in void*x832; void*x833; void*x834; void*x835; void*x836; void*x837; void*x838; void*x839; void*x840; void*x841; void*x842; void*x843; void*x844; void*x845; void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; unsigned int x855/* : ? */; void*x856; out void*x857; out void*x858; long x859; void*x860; void*x861; void*x862; void*x863; void*x864; void*x865; void*x866; void*x867; void*x868; void*x869; void*x870; void*x871; void*x872; void*x873; void*x874; void*x875; void*x876; void*x877; void*x878; void*x879; void*x880; void*x881; void*x882; void*x883; void*x884; void*x885; void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; in void*x893; short x894; void*x895; int x896; void*x897; void*x898; void*x899; in void*x900; void*x901; void*x902; double x903; void*x904; void*x905; void*x906; short x907; void*x908; void*x909; void*x910; out void*x911; const void*x912; void*x913; void*x914; void*x915; void*x916; void*x917; void*x918; void*x919; void*x920; void*x921; void*x922; void*x923; void*x924; void*x925; void*x926; void*x927; char *x928; void*x929; void*x930; void*x931; char *x932; void*x933; void*x934; void*x935; char *x936; void*x937; void*x938; void*x939; char *x940; void*x941; void*x942; void*x943; char *x944; void*x945; void*x946; void*x947; char *x948; void*x949; void*x950; void*x951; char *x952; void*x953; void*x954; void*x955; char *x956; void*x957; void*x958; void*x959; char *x960; void*x961; SEL x962; void*x963; char *x964; void*x965; void*x966; void*x967; void*x968; void*x969; void*x970; void*x971; void*x972; void*x973; void*x974; void*x975; void*x976; void*x977; void*x978; void*x979; void*x980; void*x981; void*x982; void*x983; void*x984; void*x985; void*x986; void*x987; void*x988; void*x989; void*x990; void*x991; void*x992; void*x993; void* x994[ /* ? */ ]; void*x995; void*x996; void*x997; void*x998; void*x999; void*x1000; void*x1001; void*x1002; void*x1003; void*x1004; void*x1005; void*x1006; void*x1007; void*x1008; void*x1009; void*x1010; void*x1011; void*x1012; void*x1013; void*x1014; void*x1015; void*x1016; void*x1017; void*x1018; void*x1019; void*x1020; void*x1021; void*x1022; void*x1023; void*x1024; void*x1025; void*x1026; void*x1027; void*x1028; void*x1029; void*x1030; void*x1031; void*x1032; void*x1033; void*x1034; void*x1035; void*x1036; void*x1037; void*x1038; void*x1039; void*x1040; void*x1041; void*x1042; void*x1043; void*x1044; void*x1045; void*x1046; void*x1047; void*x1048; void*x1049; void*x1050; void*x1051; void*x1052; void*x1053; void*x1054; void*x1055; void*x1056; void*x1057; void*x1058; void*x1059; void*x1060; void*x1061; void*x1062; void*x1063; void*x1064; void*x1065; void*x1066; void*x1067; void*x1068; void*x1069; void*x1070; void*x1071; void*x1072; void*x1073; void*x1074; void*x1075; void*x1076; void*x1077; void*x1078; void*x1079; void*x1080; void*x1081; void*x1082; void*x1083; void*x1084; void*x1085; void*x1086; void*x1087; void*x1088; void*x1089; void*x1090; void*x1091; void*x1092; void*x1093; void*x1094; void*x1095; out void*x1096; void*x1097; void*x1098; void*x1099; void*x1100; void*x1101; void*x1102; void*x1103; void*x1104; void*x1105; void*x1106; void*x1107; void*x1108; void*x1109; void*x1110; void*x1111; void*x1112; void*x1113; void*x1114; void*x1115; void*x1116; void*x1117; void*x1118; void*x1119; void*x1120; void*x1121; void*x1122; void*x1123; void*x1124; void*x1125; void*x1126; void*x1127; void*x1128; void*x1129; void*x1130; void*x1131; void*x1132; void*x1133; void*x1134; void*x1135; void*x1136; void*x1137; void*x1138; unsigned int x1139; void*x1140; void*x1141; void*x1142; void*x1143; void*x1144; void*x1145; void*x1146; void*x1147; void*x1148; void*x1149; void*x1150; void*x1151; void*x1152; void*x1153; void*x1154; void*x1155; void*x1156; void*x1157; void*x1158; void*x1159; void*x1160; void*x1161; void*x1162; void*x1163; void*x1164; void*x1165; void*x1166; void*x1167; void*x1168; void*x1169; void*x1170; void*x1171; void*x1172; void*x1173; void*x1174; void*x1175; void*x1176; void*x1177; void*x1178; void*x1179; void*x1180; void*x1181; void*x1182; void*x1183; void*x1184; void*x1185; void*x1186; void*x1187; void*x1188; void*x1189; void*x1190; void*x1191; void*x1192; void*x1193; void*x1194; void*x1195; void*x1196; void*x1197; void*x1198; void*x1199; void*x1200; void*x1201; void*x1202; void*x1203; void*x1204; void*x1205; void*x1206; void*x1207; void*x1208; void*x1209; void*x1210; void*x1211; void*x1212; void*x1213; void*x1214; void*x1215; void*x1216; void*x1217; void*x1218; void*x1219; void*x1220; void*x1221; void*x1222; void*x1223; void*x1224; void*x1225; void*x1226; void*x1227; void*x1228; void*x1229; void*x1230; void*x1231; void*x1232; void*x1233; void*x1234; void*x1235; void*x1236; void*x1237; void*x1238; void*x1239; void*x1240; unsigned short x1241; void*x1242; void*x1243; void*x1244; void*x1245; void*x1246; short x1247; void*x1248; char *x1249; void*x1250; short x1251; void*x1252; char *x1253; id x1254; void*x1255; void*x1256; void*x1257; void*x1258; void*x1259; void*x1260; void*x1261; void*x1262; void*x1263; void*x1264; long long x1265; void*x1266; unsigned char x1267; void*x1268; void*x1269; void*x1270; void*x1271; void*x1272; void*x1273; in short x1274; int x1275; void*x1276; in void*x1277; double x1278; void*x1279; int x1280; in void*x1281; void*x1282; void*x1283; void*x1284; void*x1285; void*x1286; void*x1287; in short x1288; int x1289; void*x1290; in void*x1291; double x1292; void*x1293; int x1294; in void*x1295; void*x1296; void*x1297; void*x1298; void*x1299; void*x1300; void*x1301; in short x1302; int x1303; void*x1304; in void*x1305; double x1306; void*x1307; int x1308; in void*x1309; void*x1310; void*x1311; void*x1312; void*x1313; void*x1314; void*x1315; in short x1316; int x1317; void*x1318; in void*x1319; double x1320; void*x1321; int x1322; in void*x1323; void*x1324; void*x1325; void*x1326; void*x1327; void*x1328; short x1329; void*x1330; const void*x1331; BOOL x1332; void*x1333; void*x1334; struct  /* ? */  {} x1335; void*x1336; char *x1337; void*x1338; void*x1339; void*x1340; void*x1341; }* finalRenderTarget; /* unknown property attribute:  std::__1::allocator<ggl::FragmentBuffer *> >=^^{FragmentBuffer}}}^{FragmentBuffer}IIB} */
@property(readonly) float averageFPS;
@property float contentScale;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int hash;
@property(readonly) struct RenderTargetOperation { int (**x1)(); int x2; }* msaaBlitOperation;
@property struct CGSize { float x1; float x2; } size;
@property(readonly) struct CGSize { float x1; float x2; } sizeInPixels;
@property(readonly) Class superclass;
@property(readonly) BOOL useMultisampling;

- (struct RenderTargetOperation { int (**x1)(); int x2; }*)msaaBlitOperation;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; boolx10; }*)finalRenderTarget;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; boolx10; }*)msaaRenderTarget;
- (struct RenderTarget { int (**x1)(); struct ResourceManager {} *x2; struct RenderResource {} *x3; int (**x4)(); struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { unsigned int x_1_5_1; unsigned int x_1_5_2; char *x_1_5_3; } x_1_4_1; struct __short { union { unsigned char x_1_6_1; BOOL x_1_6_2; } x_2_5_1; BOOL x_2_5_2[11]; } x_1_4_2; struct __raw { unsigned long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_5_1_1; } x5; struct vector<ggl::FragmentBuffer *, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_6_1_1; struct FragmentBuffer {} **x_6_1_2; struct __compressed_pair<ggl::FragmentBuffer **, std::__1::allocator<ggl::FragmentBuffer *> > { struct FragmentBuffer {} **x_3_2_1; } x_6_1_3; } x6; struct FragmentBuffer {} *x7; unsigned int x8; unsigned int x9; boolx10; }*)renderTarget;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_createMSAARenderTarget;
- (void)_createRenderTarget;
- (void)_destroyMSAARenderTarget;
- (void)_destroyRenderTarget;
- (struct shared_ptr<ggl::BitmapDataBase> { struct BitmapDataBase {} *x1; struct __shared_weak_count {} *x2; })bitmapDataWithRenderer:(struct Renderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; boolx5; float x6; }*)arg1;
- (float)contentScale;
- (void)didDrawView;
- (id)initWithSize:(struct CGSize { float x1; float x2; })arg1 scale:(float)arg2 useMultisampling:(BOOL)arg3;
- (struct CGImage { }*)newImageWithRenderer:(struct Renderer { int (**x1)(); struct Device {} *x2; unsigned int x3; unsigned int x4; boolx5; float x6; }*)arg1;
- (void)setContentScale:(float)arg1;
- (void)setSize:(struct CGSize { float x1; float x2; })arg1;
- (struct CGSize { float x1; float x2; })size;
- (struct CGSize { float x1; float x2; })sizeInPixels;
- (BOOL)useMultisampling;
- (void)willDrawView;

@end
