/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@class FBApplicationDefaults, FBMutableApplicationDefaults, NSArray, NSDictionary, NSObject<OS_dispatch_queue>, NSSet, NSString, NSURL;

@interface FBApplicationInfo : FBBundleInfo {
    NSSet *_backgroundModes;
    BOOL _beta;
    NSURL *_bundleContainerURL;
    NSArray *_customMachServices;
    NSURL *_dataContainerURL;
    FBMutableApplicationDefaults *_defaults;
    NSArray *_deviceFamilies;
    BOOL _enabled;
    NSDictionary *_entitlements;
    NSDictionary *_environmentVariables;
    NSURL *_executableURL;
    BOOL _exitsOnSuspend;
    NSArray *_externalAccessoryProtocols;
    NSString *_fallbackFolderName;
    NSArray *_folderNames;
    BOOL _installing;
    double _lastModifiedDate;
    float _minimumBrightnessLevel;
    BOOL _newsstand;
    NSString *_preferenceDomain;
    BOOL _provisioningProfileValidated;
    int _ratingRank;
    NSArray *_requiredCapabilities;
    BOOL _requiresPersistentWiFi;
    BOOL _restricted;
    NSURL *_sandboxURL;
    NSString *_sdkVersion;
    NSString *_signerIdentity;
    NSSet *_supportedInterfaceOrientations;
    NSArray *_tags;
    unsigned int _type;
    BOOL _uninstalling;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(getter=isBeta,readonly) BOOL beta;
@property(retain,readonly) NSURL * bundleContainerURL;
@property(retain,readonly) NSArray * customMachServices;
@property(retain,readonly) NSURL * dataContainerURL;
@property(retain,readonly) FBApplicationDefaults * defaults;
@property(retain,readonly) NSArray * deviceFamilies;
@property(getter=isEnabled,readonly) BOOL enabled;
@property(retain,readonly) NSDictionary * entitlements;
@property(retain,readonly) NSDictionary * environmentVariables;
@property(retain,readonly) NSURL * executableURL;
@property(getter=isExitsOnSuspend,readonly) BOOL exitsOnSuspend;
@property(retain,readonly) NSArray * externalAccessoryProtocols;
@property(retain,readonly) NSString * fallbackFolderName;
@property(retain,readonly) NSArray * folderNames;
@property(getter=_isInstalling,setter=_setInstalling:) BOOL installing;
@property(readonly) double lastModifiedDate;
@property(readonly) float minimumBrightnessLevel;
@property(getter=isNewsstand,readonly) BOOL newsstand;
@property(copy,readonly) NSString * preferenceDomain;
@property(getter=isProvisioningProfileValidated,readonly) BOOL provisioningProfileValidated;
@property(readonly) int ratingRank;
@property(retain,readonly) NSArray * requiredCapabilities;
@property(readonly) BOOL requiresPersistentWiFi;
@property(getter=isRestricted,readonly) BOOL restricted;
@property(retain,readonly) NSURL * sandboxURL;
@property(copy,readonly) NSString * sdkVersion;
@property(readonly) int signatureState;
@property(copy,readonly) NSString * signerIdentity;
@property(retain,readonly) NSArray * tags;
@property(readonly) unsigned int type;
@property(getter=_isUninstalling,setter=_setUninstalling:) BOOL uninstalling;

- (void)_acceptApplicationSignatureIdentity;
- (unsigned int)_applicationType:(id)arg1;
- (void)_buildDefaultsFromInfoPlist:(id)arg1;
- (void)_cacheFolderNamesForSystemApp:(id)arg1;
- (int)_computeRatingRank;
- (id)_computeSupportedInterfaceOrientations:(id)arg1;
- (id)_configureEnvironment:(id)arg1;
- (id)_copyiTunesMetadata;
- (BOOL)_doesProfileMatchSignerIdentity:(struct _MISProfile { }*)arg1;
- (id)_expirationDateForProvisioningProfile;
- (BOOL)_isInstalling;
- (BOOL)_isUninstalling;
- (double)_lastModifiedDateForPath:(id)arg1;
- (id)_localizedGenreFromDictionary:(id)arg1;
- (id)_localizedGenreNameForID:(int)arg1;
- (id)_preferenceDomain;
- (void)_setInstalling:(BOOL)arg1;
- (void)_setUninstalling:(BOOL)arg1;
- (BOOL)_signatureNeedsExplicitUserTrust;
- (id)_uniqueDeviceIdentifier;
- (void)acceptApplicationSignatureIdentity;
- (BOOL)builtOnOrAfterSDKVersion:(id)arg1;
- (id)bundleContainerURL;
- (id)customMachServices;
- (id)dataContainerURL;
- (void)dealloc;
- (BOOL)defaultStatusBarHiddenForOrientation:(int)arg1;
- (id)defaults;
- (id)description;
- (id)deviceFamilies;
- (id)entitlements;
- (id)environmentVariables;
- (id)executableURL;
- (id)externalAccessoryProtocols;
- (id)fallbackFolderName;
- (id)folderNames;
- (id)initWithApplicationProxy:(id)arg1;
- (BOOL)isBeta;
- (BOOL)isEnabled;
- (BOOL)isExitsOnSuspend;
- (BOOL)isNewsstand;
- (BOOL)isProvisioningProfileValidated;
- (BOOL)isRestricted;
- (double)lastModifiedDate;
- (float)minimumBrightnessLevel;
- (id)preferenceDomain;
- (int)ratingRank;
- (id)requiredCapabilities;
- (BOOL)requiresPersistentWiFi;
- (id)sandboxURL;
- (id)sdkVersion;
- (int)signatureState;
- (id)signerIdentity;
- (BOOL)supportsBackgroundMode:(id)arg1;
- (BOOL)supportsCompactStatusBarHiding;
- (BOOL)supportsInterfaceOrientation:(int)arg1;
- (id)tags;
- (unsigned int)type;

@end
