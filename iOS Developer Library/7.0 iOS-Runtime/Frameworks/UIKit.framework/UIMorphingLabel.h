/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@class NSMutableArray, NSString, UIColor, UIFont, UIMorphingLabelGlyphSet, UIView, _UIViewAnimationAttributes;

@interface UIMorphingLabel : UIView {
    struct { 
        unsigned int len; 
        unsigned int dir; 
    struct { 
        struct _NSRange { 
            unsigned int location; 
            unsigned int length; 
        } src; 
        struct _NSRange { 
            unsigned int location; 
            unsigned int length; 
        } dst; 
        BOOL isEqual; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    float _alignmentDelays[100];
    unsigned int _alignmentSize;
    } _alignment[100];
    UIView *_colorView;
    UIMorphingLabelGlyphSet *_dstGlyphSet;
    UIFont *_font;
    NSMutableArray *_hiddenGlyphViews;
    BOOL _isDoingFastAnimation;
    float _lastUpdateTime;
    } _memo[51][51];
    float _rippleFactor;
    float _scaleFactor;
    float _slowdown;
    UIMorphingLabelGlyphSet *_srcGlyphSet;
    BOOL _suppressLayoutSubviews;
    NSString *_text;
    int _textAlignment;
    _UIViewAnimationAttributes *_textAnimationAttributes;
    UIColor *_textColor;
    _UIViewAnimationAttributes *_textColorAnimationAttributes;
    BOOL _textColorDidChange;
    BOOL _textDidChange;
    } _visibleRect;
}

@property(retain) UIFont * font;
@property BOOL suppressLayoutSubviews;
@property(copy) NSString * text;
@property int textAlignment;
@property(retain) UIColor * textColor;
@property struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; } visibleRect;

- (float)alphaForFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)animateAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateChangeInWidthOutsideAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateDeletionAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateGlyph:(id)arg1 toAlpha:(float)arg2 duration:(float)arg3 delay:(float)arg4;
- (void)animateGlyph:(id)arg1 toPosition:(struct CGPoint { float x1; float x2; })arg2 delay:(float)arg3;
- (void)animateGlyph:(id)arg1 toScale:(float)arg2 delay:(float)arg3;
- (void)animateGlyphs;
- (void)animateGlyphsInRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1 ofGlyphSet:(id)arg2 byOffset:(float)arg3 delay:(float)arg4;
- (void)animateHideGlyph:(id)arg1 alphaDuration:(float)arg2 delay:(float)arg3;
- (void)animateInsertionAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateMovementAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateShowGlyph:(id)arg1 alpha:(float)arg2 alphaDuration:(float)arg3 delay:(float)arg4;
- (void)animateShowGlyph:(id)arg1 alphaDuration:(float)arg2 delay:(float)arg3;
- (void)animateSubstitutionAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)animateTextColor;
- (id)attributedString;
- (id)attributedStringForText:(id)arg1;
- (void)baseInit;
- (void)calculateGlyphAlignment;
- (unsigned int)calculateHardAlignment:(struct { struct _NSRange { unsigned int x_1_1_1; unsigned int x_1_1_2; } x1; struct _NSRange { unsigned int x_2_1_1; unsigned int x_2_1_2; } x2; BOOL x3; }*)arg1 size:(unsigned int)arg2 fromGlyphs:(const unsigned short*)arg3 count:(unsigned int)arg4 toGlyphs:(const unsigned short*)arg5 count:(unsigned int)arg6;
- (BOOL)canFitText:(id)arg1;
- (float)changeInWidthDueToAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)copyStateFromGlyph:(id)arg1 toGlyph:(id)arg2;
- (float)currentMediaTime;
- (void)dealloc;
- (float)flushAmount;
- (id)font;
- (id)glyphViewWithImage:(id)arg1 isColorGlyph:(BOOL)arg2;
- (void)hideGlyph:(id)arg1;
- (void)initAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)initDeletionAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)initInsertionAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)initMovementAlignmentHunkAtIndex:(unsigned int)arg1;
- (void)initSubstitutionAlignmentHunkAtIndex:(unsigned int)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (void)layoutSubviews;
- (float)requiredWidthForText:(id)arg1;
- (void)setFont:(id)arg1;
- (void)setSuppressLayoutSubviews:(BOOL)arg1;
- (void)setText:(id)arg1;
- (void)setTextAlignment:(int)arg1;
- (void)setTextColor:(id)arg1;
- (void)setVisibleRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg1;
- (BOOL)suppressLayoutSubviews;
- (id)text;
- (int)textAlignment;
- (id)textColor;
- (float)totalLeftOffsetForAlignmentHunkAtIndex:(unsigned int)arg1;
- (float)totalRightOffsetForAlignmentHunkAtIndex:(unsigned int)arg1;
- (id)uniqueStringWithPrefix:(id)arg1;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })visibleRect;

@end
