/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/HomeKit.framework/HomeKit
 */

@class <HMAccessoryDelegate>, HMHome, HMMessageDispatcher, HMRoom, NSArray, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString, NSUUID;

@interface HMAccessory : NSObject <NSSecureCoding, HMMessageReceiver> {
    BOOL _blocked;
    BOOL _bridgedAccessory;
    <HMAccessoryDelegate> *_delegate;
    HMHome *_home;
    NSArray *_identifiersForBridgedAccessories;
    HMMessageDispatcher *_msgDispatcher;
    NSString *_name;
    BOOL _paired;
    NSMutableDictionary *_pendingRequests;
    BOOL _reachable;
    HMRoom *_room;
    NSArray *_services;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(getter=isBlocked) BOOL blocked;
@property(getter=isBridged,readonly) BOOL bridged;
@property BOOL bridgedAccessory;
@property(getter=isConfigured,readonly) BOOL configured;
@property(copy,readonly) NSString * debugDescription;
@property <HMAccessoryDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int hash;
@property HMHome * home;
@property(copy,readonly) NSUUID * identifier;
@property(copy) NSArray * identifiersForBridgedAccessories;
@property(readonly) NSObject<OS_dispatch_queue> * messageReceiveQueue;
@property(readonly) NSUUID * messageTargetUUID;
@property(retain) HMMessageDispatcher * msgDispatcher;
@property(copy) NSString * name;
@property BOOL paired;
@property(retain) NSMutableDictionary * pendingRequests;
@property(getter=isReachable) BOOL reachable;
@property HMRoom * room;
@property(copy) NSArray * services;
@property(readonly) Class superclass;
@property(copy) NSUUID * uuid;
@property(retain) NSObject<OS_dispatch_queue> * workQueue;

+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)_handleAccessoryNotificationsUpdated:(id)arg1;
- (void)_handleCharacteristicValueUpdated:(id)arg1;
- (void)_handleCharacteristicsUpdated:(id)arg1;
- (void)_handleConnectivityChanged:(id)arg1;
- (void)_handleRenamed:(id)arg1;
- (void)_handleServiceRenamed:(id)arg1;
- (void)_handleServiceTypeAssociated:(id)arg1;
- (void)_handleServicesUpdated:(id)arg1;
- (void)_handleUpdateRoom:(id)arg1;
- (void)_registerNotificationHandlers;
- (BOOL)bridgedAccessory;
- (void)configure:(id)arg1 messageDispatcher:(id)arg2;
- (void)configureMessageDispatcher:(id)arg1;
- (void)copyFrom:(id)arg1;
- (id)delegate;
- (id)description;
- (void)enableNotification:(BOOL)arg1 forCharacteristic:(id)arg2 completionHandler:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (id)findService:(id)arg1;
- (void)handleMultipleCharacteristicsUpdated:(id)arg1;
- (id)home;
- (id)identifier;
- (id)identifiersForBridgedAccessories;
- (void)identifyWithCompletionHandler:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (BOOL)isBlocked;
- (BOOL)isBridged;
- (BOOL)isConfigured;
- (BOOL)isReachable;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (void)migrateDelegateToAccessory:(id)arg1 withCompletion:(id)arg2;
- (id)msgDispatcher;
- (id)name;
- (BOOL)paired;
- (id)pendingRequests;
- (void)readValueForCharacteristic:(id)arg1 completionHandler:(id)arg2;
- (id)room;
- (id)services;
- (void)setBlocked:(BOOL)arg1;
- (void)setBridgedAccessory:(BOOL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setHome:(id)arg1;
- (void)setIdentifiersForBridgedAccessories:(id)arg1;
- (void)setMsgDispatcher:(id)arg1;
- (void)setName:(id)arg1;
- (void)setNotifyValue:(BOOL)arg1 forCharacteristic:(id)arg2;
- (void)setPaired:(BOOL)arg1;
- (void)setPendingRequests:(id)arg1;
- (void)setReachable:(BOOL)arg1;
- (void)setRoom:(id)arg1;
- (void)setServices:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)updateAssociatedServiceType:(id)arg1 forService:(id)arg2 completionHandler:(id)arg3;
- (void)updateAuthorizationData:(id)arg1 forService:(id)arg2 characteristic:(id)arg3 completionHandler:(id)arg4;
- (void)updateName:(id)arg1 completionHandler:(id)arg2;
- (void)updateName:(id)arg1 forService:(id)arg2 completionHandler:(id)arg3;
- (void)updateRoom:(id)arg1 completionHandler:(id)arg2;
- (id)uuid;
- (id)workQueue;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 completionHandler:(id)arg3;

@end
