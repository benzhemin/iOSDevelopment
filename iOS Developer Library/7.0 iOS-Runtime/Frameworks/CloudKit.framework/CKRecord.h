/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@class CKContainerID, CKRecordID, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString;

@interface CKRecord : NSObject <NSSecureCoding, NSCopying, PQLBindable> {
    NSMutableSet *_changedKeysSet;
    NSArray *_conflictLoserEtags;
    CKContainerID *_containerID;
    NSDate *_creationDate;
    CKRecordID *_creatorUserRecordID;
    NSString *_etag;
    BOOL _knownToServer;
    CKRecordID *_lastModifiedUserRecordID;
    NSDate *_modificationDate;
    NSString *_modifiedByDevice;
    NSMutableDictionary *_originalValues;
    NSDictionary *_pluginFields;
    NSString *_previousProtectionEtag;
    NSData *_protectionData;
    NSString *_protectionEtag;
    CKRecordID *_recordID;
    NSString *_recordType;
    BOOL _serializeProtectionData;
    BOOL _trackChanges;
    NSMutableDictionary *_values;
    BOOL _wasCached;
    NSString *_zoneProtectionEtag;
}

@property(readonly) NSData * brc_containerMetadataPropertiesData;
@property(retain) NSSet * changedKeysSet;
@property(retain) NSArray * conflictLoserEtags;
@property(copy) CKContainerID * containerID;
@property(readonly) BOOL containsAssetValues;
@property(copy) NSDate * creationDate;
@property(copy) CKRecordID * creatorUserRecordID;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(retain) NSString * etag;
@property(readonly) BOOL hasEncryptedData;
@property(readonly) BOOL hasModifiedEncryptedData;
@property(readonly) BOOL hasModifiedPropertiesRequiringEncryption;
@property(readonly) BOOL hasPropertiesRequiringEncryption;
@property(readonly) unsigned int hash;
@property(getter=isKnownToServer) BOOL knownToServer;
@property(copy) CKRecordID * lastModifiedUserRecordID;
@property(copy) NSDate * modificationDate;
@property(copy) NSString * modifiedByDevice;
@property(retain) NSDictionary * originalValues;
@property(copy) NSDictionary * pluginFields;
@property(retain) NSString * previousProtectionEtag;
@property(retain) NSData * protectionData;
@property(retain) NSString * protectionEtag;
@property(copy,readonly) NSString * recordChangeTag;
@property(copy) CKRecordID * recordID;
@property(copy) NSString * recordType;
@property BOOL serializeProtectionData;
@property(readonly) Class superclass;
@property BOOL trackChanges;
@property(retain) NSDictionary * values;
@property BOOL wasCached;
@property(retain) NSString * zoneProtectionEtag;

+ (BOOL)accessInstanceVariablesDirectly;
+ (id)aliasRecordForItemID:(id)arg1 zoneName:(id)arg2;
+ (id)aliasRecordForLocalItem:(id)arg1;
+ (id)assetsOnlyDocumentContentsRecordForLocalItem:(id)arg1 thumbnail1024Asset:(id)arg2 thumbnailMetadata:(id)arg3 packageManifest:(id*)arg4 error:(id*)arg5;
+ (id)brc_containerMetadataRecordWithContainer:(id)arg1;
+ (id)brc_containerMetadataZoneID;
+ (id)desiredKeysWithMask:(unsigned short)arg1;
+ (id)directoryRecordForItemID:(id)arg1 zoneName:(id)arg2;
+ (id)directoryRecordForLocalItem:(id)arg1 deadInServerTruth:(BOOL)arg2;
+ (id)documentContentsRecordForItemID:(id)arg1 zoneName:(id)arg2;
+ (id)documentStructureRecordForItemID:(id)arg1 zoneName:(id)arg2;
+ (id)documentStructureRecordForLocalItem:(id)arg1 deadInServerTruth:(BOOL)arg2;
+ (id)rootDirectoryRecordForZoneName:(id)arg1;
+ (BOOL)supportsSecureCoding;

- (void).cxx_destruct;
- (void)CKAssignToContainerWithID:(id)arg1;
- (id)CKPropertiesDescription;
- (id)_allStrings;
- (BOOL)_checkProperties:(BOOL)arg1 withValueCheckBlock:(id)arg2;
- (BOOL)_deserializeFilename:(id*)arg1 userInfo:(id)arg2 error:(id*)arg3;
- (BOOL)_deserializeValue:(id*)arg1 forKey:(id)arg2 expectClass:(Class)arg3 allowNil:(BOOL)arg4 errorDescription:(id*)arg5;
- (id)_initSkippingValidationWithRecordType:(id)arg1 recordID:(id)arg2;
- (void)_validateRecordKey:(id)arg1;
- (void)_validateRecordName:(id)arg1;
- (void)_validateRecordValue:(id)arg1;
- (id)allKeys;
- (id)allTokens;
- (id)brc_containerMetadataIconNames;
- (id)brc_containerMetadataIconPaths;
- (id)brc_containerMetadataPropertiesData;
- (BOOL)brc_isInterestingRecordForSyncDown;
- (id)brc_oplockMergeEtag;
- (id)brc_updateDroppedReason;
- (id)changedKeys;
- (id)changedKeysSet;
- (id)conflictLoserEtags;
- (id)containerID;
- (BOOL)containsAssetValues;
- (id)copyWithOriginalValues;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)creatorUserRecordID;
- (id)debugDescription;
- (id)description;
- (BOOL)deserializeAliasInfo:(id*)arg1 container:(id)arg2 error:(id*)arg3;
- (BOOL)deserializeStatInfo:(id*)arg1 itemID:(id)arg2 container:(id)arg3 error:(id*)arg4;
- (BOOL)deserializeVersion:(id*)arg1 container:(id)arg2 error:(id*)arg3;
- (void)encodeSystemFieldsWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)etag;
- (BOOL)hasEncryptedData;
- (BOOL)hasModifiedEncryptedData;
- (BOOL)hasModifiedPropertiesRequiringEncryption;
- (BOOL)hasPropertiesRequiringEncryption;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithRecordType:(id)arg1 recordID:(id)arg2;
- (id)initWithRecordType:(id)arg1 zoneID:(id)arg2;
- (id)initWithRecordType:(id)arg1;
- (BOOL)isKnownToServer;
- (id)lastModifiedUserRecordID;
- (id)modificationDate;
- (id)modifiedByDevice;
- (id)objectForKey:(id)arg1;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)originalValues;
- (id)pluginFields;
- (id)previousProtectionEtag;
- (id)protectionData;
- (id)protectionEtag;
- (id)recordChangeTag;
- (id)recordID;
- (id)recordType;
- (void)resetChangedKeys;
- (id)safari_arrayForKey:(id)arg1;
- (BOOL)safari_boolForKey:(id)arg1;
- (id)safari_dataForKey:(id)arg1;
- (id)safari_dateForKey:(id)arg1;
- (id)safari_encryptedDataForKey:(id)arg1;
- (id)safari_numberForKey:(id)arg1;
- (id)safari_stringForKey:(id)arg1;
- (BOOL)saveAliasRecordInContainer:(id)arg1;
- (BOOL)saveDirOrDocStructureRecordInContainer:(id)arg1;
- (BOOL)saveDocumentContentsRecordInContainer:(id)arg1;
- (BOOL)saveInContainer:(id)arg1 stateIsInconsistent:(BOOL)arg2;
- (BOOL)saveInconsistentRecordInContainer:(id)arg1;
- (BOOL)saveStructureRecordInContainer:(id)arg1;
- (void)serializeFilename:(id)arg1 forCreation:(BOOL)arg2;
- (BOOL)serializeProtectionData;
- (void)serializeStatInfo:(id)arg1 itemID:(id)arg2 container:(id)arg3 diffs:(unsigned long long)arg4 deadInServerTruth:(BOOL)arg5;
- (void)serializeStructuralPluginHints:(id)arg1;
- (void)serializeSystemFields:(id)arg1;
- (void)serializeVersion:(id)arg1 resolvedConflictEtag:(id)arg2 diffs:(unsigned long long)arg3 deadInServerTruth:(BOOL)arg4;
- (void)setChangedKeysSet:(id)arg1;
- (void)setConflictLoserEtags:(id)arg1;
- (void)setContainerID:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setCreatorUserRecordID:(id)arg1;
- (void)setEtag:(id)arg1;
- (void)setKnownToServer:(BOOL)arg1;
- (void)setLastModifiedUserRecordID:(id)arg1;
- (void)setModificationDate:(id)arg1;
- (void)setModifiedByDevice:(id)arg1;
- (void)setNilValueForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setOriginalValues:(id)arg1;
- (void)setPluginFields:(id)arg1;
- (void)setPreviousProtectionEtag:(id)arg1;
- (void)setProtectionData:(id)arg1;
- (void)setProtectionEtag:(id)arg1;
- (void)setRecordID:(id)arg1;
- (void)setRecordType:(id)arg1;
- (void)setSerializeProtectionData:(BOOL)arg1;
- (void)setTrackChanges:(BOOL)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setValues:(id)arg1;
- (void)setWasCached:(BOOL)arg1;
- (void)setZoneProtectionEtag:(id)arg1;
- (id)sharedItemID;
- (void)sqliteBind:(struct sqlite3_stmt { }*)arg1 index:(int)arg2;
- (BOOL)trackChanges;
- (id)valueForKey:(id)arg1;
- (id)values;
- (BOOL)wasCached;
- (id)zoneProtectionEtag;

@end
