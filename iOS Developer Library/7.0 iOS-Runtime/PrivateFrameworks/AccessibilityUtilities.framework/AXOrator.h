/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@class <AXOratorDelegate>, AVSpeechSynthesizer, AVSpeechUtterance, AXLanguageTag, AXLanguageTaggedContent, NSArray, NSMutableArray, NSString;

@interface AXOrator : NSObject <AVSpeechSynthesizerDelegate> {
    struct _NSRange { 
        unsigned int location; 
        unsigned int length; 
    struct _NSRange { 
        unsigned int location; 
        unsigned int length; 
    BOOL _contentIsSpeakable;
    <AXOratorDelegate> *_delegate;
    BOOL _didRequestPauseSpeakingDuringAudioInterruption;
    BOOL _didRequestResumeSpeakingDuringAudioInterruption;
    BOOL _didRequestStartSpeakingDuringAudioInterruption;
    BOOL _isAudioSessionActive;
    BOOL _isInAudioInterruption;
    } _lastSpokenSubstringRange;
    AVSpeechUtterance *_lastUtterance;
    NSString *_lastUtteranceLanguageCode;
    AXLanguageTag *_lastUtteranceLanguageTag;
    } _lastUtteranceSubstringRange;
    unsigned int _numberOfTokensToSkip;
    NSString *_requestedLanguageCodeDuringAudioInterruption;
    AXLanguageTaggedContent *_selectedContent;
    BOOL _shouldSpeakNextItemOnResume;
    AXLanguageTaggedContent *_speakingContent;
    NSArray *_speakingContentTokenRanges;
    NSMutableArray *_speechSequenceItems;
    AVSpeechSynthesizer *_speechSynthesizer;
    AVSpeechUtterance *_statusUtterance;
    NSString *_voiceIdentifier;
    BOOL _wasSpeakingBeforeAudioInterruption;
}

@property(copy) NSString * content;
@property(copy,readonly) NSString * debugDescription;
@property <AXOratorDelegate> * delegate;
@property(copy,readonly) NSString * description;
@property BOOL didRequestPauseSpeakingDuringAudioInterruption;
@property BOOL didRequestResumeSpeakingDuringAudioInterruption;
@property BOOL didRequestStartSpeakingDuringAudioInterruption;
@property(readonly) unsigned int hash;
@property BOOL isAudioSessionActive;
@property BOOL isInAudioInterruption;
@property struct _NSRange { unsigned int x1; unsigned int x2; } lastSpokenSubstringRange;
@property(retain) AVSpeechUtterance * lastUtterance;
@property(retain) NSString * lastUtteranceLanguageCode;
@property(retain) AXLanguageTag * lastUtteranceLanguageTag;
@property struct _NSRange { unsigned int x1; unsigned int x2; } lastUtteranceSubstringRange;
@property unsigned int numberOfTokensToSkip;
@property(copy) NSString * requestedLanguageCodeDuringAudioInterruption;
@property(retain) AXLanguageTaggedContent * selectedContent;
@property BOOL shouldSpeakNextItemOnResume;
@property(retain) AXLanguageTaggedContent * speakingContent;
@property(retain) NSArray * speakingContentTokenRanges;
@property(retain) NSMutableArray * speechSequenceItems;
@property(retain) AVSpeechSynthesizer * speechSynthesizer;
@property(readonly) Class superclass;
@property(retain) NSString * voiceIdentifier;
@property BOOL wasSpeakingBeforeAudioInterruption;

- (BOOL)_canSpeakTaggedContent:(id)arg1;
- (BOOL)_changeSpeakingSpeed:(BOOL)arg1;
- (void)_clearAllContentState;
- (int)_currentTokenIndex:(BOOL)arg1;
- (void)_didBeginInterruption;
- (void)_didEndInterruption;
- (void)_handleAudioInterruption:(id)arg1;
- (void)_handleMediaServicesWereLost:(id)arg1;
- (void)_handleMediaServicesWereReset:(id)arg1;
- (void)_respeakUtteranceIfNeeded;
- (void)_setAudioSessionActive:(BOOL)arg1;
- (BOOL)_skipByUnit:(BOOL)arg1 boundary:(unsigned int)arg2;
- (void)_speakNextItemInSequence;
- (void)_speakNextTokenFromCurrentTokenIndex:(int)arg1 forward:(BOOL)arg2 boundary:(unsigned int)arg3;
- (id)_speechSequenceItemsStartingAtContentLocation:(unsigned int)arg1;
- (void)_startSpeakingSequence;
- (BOOL)_successWithCode:(int)arg1 error:(id*)arg2;
- (void)_tokenizeContentIfNeeded;
- (BOOL)canResumeWithContent:(id)arg1;
- (void)clearSelectedContent;
- (id)content;
- (BOOL)contentIsSpeakable;
- (void)dealloc;
- (id)delegate;
- (BOOL)didRequestPauseSpeakingDuringAudioInterruption;
- (BOOL)didRequestResumeSpeakingDuringAudioInterruption;
- (BOOL)didRequestStartSpeakingDuringAudioInterruption;
- (BOOL)fastForwardWithBoundary:(unsigned int)arg1;
- (id)init;
- (BOOL)isAudioSessionActive;
- (BOOL)isInAudioInterruption;
- (BOOL)isPaused;
- (BOOL)isSpeaking;
- (struct _NSRange { unsigned int x1; unsigned int x2; })lastSpokenSubstringRange;
- (id)lastUtterance;
- (id)lastUtteranceLanguageCode;
- (id)lastUtteranceLanguageTag;
- (struct _NSRange { unsigned int x1; unsigned int x2; })lastUtteranceSubstringRange;
- (unsigned int)numberOfTokensToSkip;
- (BOOL)pauseSpeaking:(id*)arg1;
- (id)requestedLanguageCodeDuringAudioInterruption;
- (BOOL)resumeSpeaking:(id*)arg1;
- (BOOL)rewindWithBoundary:(unsigned int)arg1;
- (id)selectedContent;
- (void)setContent:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDidRequestPauseSpeakingDuringAudioInterruption:(BOOL)arg1;
- (void)setDidRequestResumeSpeakingDuringAudioInterruption:(BOOL)arg1;
- (void)setDidRequestStartSpeakingDuringAudioInterruption:(BOOL)arg1;
- (void)setIsAudioSessionActive:(BOOL)arg1;
- (void)setIsInAudioInterruption:(BOOL)arg1;
- (void)setLastSpokenSubstringRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)setLastUtterance:(id)arg1;
- (void)setLastUtteranceLanguageCode:(id)arg1;
- (void)setLastUtteranceLanguageTag:(id)arg1;
- (void)setLastUtteranceSubstringRange:(struct _NSRange { unsigned int x1; unsigned int x2; })arg1;
- (void)setNumberOfTokensToSkip:(unsigned int)arg1;
- (void)setRequestedLanguageCodeDuringAudioInterruption:(id)arg1;
- (void)setSelectedContent:(id)arg1;
- (void)setShouldSpeakNextItemOnResume:(BOOL)arg1;
- (void)setSpeakingContent:(id)arg1;
- (void)setSpeakingContentTokenRanges:(id)arg1;
- (void)setSpeechSequenceItems:(id)arg1;
- (void)setSpeechSynthesizer:(id)arg1;
- (void)setVoiceIdentifier:(id)arg1;
- (void)setWasSpeakingBeforeAudioInterruption:(BOOL)arg1;
- (BOOL)shouldSpeakNextItemOnResume;
- (BOOL)speakFaster;
- (BOOL)speakSlower;
- (void)speakStatusWithLanguage:(id)arg1 rate:(id)arg2 useCompactVoice:(BOOL)arg3 alternateIdentifier:(id)arg4;
- (id)speakingContent;
- (id)speakingContentTokenRanges;
- (float)speechRate;
- (id)speechSequenceItems;
- (void)speechSynthesizer:(id)arg1 didCancelSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didContinueSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didFinishSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didPauseSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 didStartSpeechUtterance:(id)arg2;
- (void)speechSynthesizer:(id)arg1 willSpeakRangeOfSpeechString:(struct _NSRange { unsigned int x1; unsigned int x2; })arg2 utterance:(id)arg3;
- (id)speechSynthesizer;
- (BOOL)startSpeakingWithPreferredLanguage:(id)arg1 alternativeVoiceId:(id)arg2 error:(id*)arg3;
- (BOOL)stopSpeaking:(id*)arg1;
- (id)voiceIdentifier;
- (BOOL)wasSpeakingBeforeAudioInterruption;

@end
