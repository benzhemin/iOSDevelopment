/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@class NSLock, NSString, PFUbiquityGlobalObjectIDCache, PFUbiquityKnowledgeVector, PFUbiquityLocation, PFUbiquityPeerRangeCache, PFUbiquityPeerReceipt, PFUbiquityTransactionHistoryCache, PFUbiquityTransactionLogCache;

@interface PFUbiquitySwitchboardCacheWrapper : NSObject {
    BOOL _allowSchedulingOfReceiptFileWrites;
    PFUbiquityKnowledgeVector *_baselineKV;
    PFUbiquityGlobalObjectIDCache *_globalIDCache;
    PFUbiquityKnowledgeVector *_kv;
    NSString *_localPeerID;
    PFUbiquityPeerRangeCache *_peerRangeCache;
    PFUbiquityPeerReceipt *_peerReceipt;
    BOOL _pendingReceiptWrite;
    NSLock *_receiptFileLock;
    NSString *_storeName;
    PFUbiquityTransactionHistoryCache *_transactionHistoryCache;
    PFUbiquityTransactionLogCache *_transactionLogCache;
    PFUbiquityLocation *_ubiquityRootLocation;
}

@property(retain) PFUbiquityKnowledgeVector * baselineKV;
@property(readonly) PFUbiquityGlobalObjectIDCache * globalIDCache;
@property(retain) PFUbiquityKnowledgeVector * kv;
@property(readonly) NSString * localPeerID;
@property(readonly) PFUbiquityPeerRangeCache * peerRangeCache;
@property(readonly) PFUbiquityPeerReceipt * peerReceipt;
@property(readonly) NSString * storeName;
@property(readonly) PFUbiquityTransactionHistoryCache * transactionHistoryCache;
@property(readonly) PFUbiquityTransactionLogCache * transactionLogCache;
@property(retain) PFUbiquityLocation * ubiquityRootLocation;

- (void)_appWillResignActive:(id)arg1;
- (id)baselineKV;
- (void)cacheWrapperWillBeRemovedFromEntry;
- (void)dealloc;
- (id)globalIDCache;
- (id)init;
- (id)initWithStoreName:(id)arg1 privateStore:(id)arg2 forLocalPeerID:(id)arg3 andUbiquityRootLocation:(id)arg4;
- (id)kv;
- (id)localPeerID;
- (id)peerRangeCache;
- (id)peerReceipt;
- (void)scheduleReceiptFileWrite:(id)arg1;
- (void)setBaselineKV:(id)arg1;
- (void)setKv:(id)arg1;
- (void)setUbiquityRootLocation:(id)arg1;
- (id)storeName;
- (id)transactionHistoryCache;
- (id)transactionLogCache;
- (id)ubiquityRootLocation;
- (BOOL)writeReceiptFile:(BOOL)arg1 error:(id*)arg2;

@end
