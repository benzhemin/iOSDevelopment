/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@class GEOAddress, GEOFeatureStyleAttributes, GEOLocation, GEOMapItemClientAttributes, GEOMapItemPhotosAttribution, GEOMapItemPlaceAttribution, GEOMapItemReviewsAttribution, GEOMapRegion, GEOPDFlyover, GEOPDPlace, GEOPlace, NSArray, NSData, NSDate, NSDictionary, NSString, NSURL;

@interface GEOMapItemAssistant : NSObject <GEOMapItemPrivate> {
    struct { 
        unsigned long long _high; 
        unsigned long long _low; 
    NSDictionary *_addressDictionary;
    NSString *_attributionID;
    NSURL *_businessURL;
    GEOLocation *_location;
    unsigned long long _muid;
    NSString *_name;
    float _normalizedUserRatingScore;
    NSString *_phoneNumber;
    GEOPlace *_place;
    unsigned int _sampleSizeForUserRatingScore;
    } _sessionID;
}

@property(getter=_additionalPlaceInfos,readonly) NSArray * additionalPlaceInfos;
@property(readonly) NSDictionary * addressDictionary;
@property(getter=_areaInMeters,readonly) double areaInMeters;
@property(readonly) NSArray * areasOfInterest;
@property(getter=_attribution,readonly) GEOMapItemPlaceAttribution * attribution;
@property(getter=_businessURL,readonly) NSString * businessURL;
@property(readonly) struct { double x1; double x2; } centerCoordinate;
@property(getter=_clientAttributes,readonly) GEOMapItemClientAttributes * clientAttributes;
@property(readonly) int contactAddressType;
@property(readonly) BOOL contactIsMe;
@property(readonly) NSString * contactName;
@property(readonly) NSString * contactSpokenName;
@property(readonly) struct { double x1; double x2; } coordinate;
@property(getter=_customIconID,readonly) unsigned long long customIconID;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(getter=_disambiguationName,readonly) NSString * disambiguationName;
@property(readonly) GEOMapRegion * displayMapRegion;
@property(getter=isDisputed,readonly) BOOL disputed;
@property(readonly) NSData * encodedData;
@property(readonly) NSDate * eventDate;
@property(readonly) NSString * eventName;
@property(getter=_flyover,readonly) GEOPDFlyover * flyover;
@property(getter=_flyoverAnnouncementMessage,readonly) NSString * flyoverAnnouncement;
@property(readonly) GEOAddress * geoAddress;
@property(readonly) GEOMapRegion * geoFenceMapRegion;
@property(getter=_goodForKids,readonly) BOOL goodForKids;
@property(getter=_hasAnyAmenities,readonly) BOOL hasAnyAmenities;
@property(getter=_hasAreaInMeters,readonly) BOOL hasAreaInMeters;
@property(getter=_hasCurrentOperatingHours,readonly) BOOL hasCurrentOperatingHours;
@property(getter=_hasDelivery,readonly) BOOL hasDelivery;
@property(getter=_hasDeliveryAmenity,readonly) BOOL hasDeliveryAmenity;
@property(getter=_hasFlyover,readonly) BOOL hasFlyover;
@property(getter=_hasFlyoverAnnouncementMessage,readonly) BOOL hasFlyoverAnnouncement;
@property(getter=_hasGoodForKidsAmenity,readonly) BOOL hasGoodForKidsAmenity;
@property(getter=_hasMUID,readonly) BOOL hasMUID;
@property(getter=_hasOperatingHours,readonly) BOOL hasOperatingHours;
@property(getter=_hasPriceRange,readonly) BOOL hasPriceRange;
@property(getter=_hasResolvablePartialInformation,readonly) BOOL hasResolvablePartialInformation;
@property(getter=_hasResultProviderID,readonly) BOOL hasResultProviderID;
@property(getter=_hasSessionGUID,readonly) BOOL hasSessionGUID;
@property(getter=_hasTakesReservationsAmenity,readonly) BOOL hasTakesReservationsAmenity;
@property(getter=_hasTelephone,readonly) BOOL hasTelephone;
@property(getter=_hasUserRatingScore,readonly) BOOL hasUserRatingScore;
@property(readonly) unsigned int hash;
@property(readonly) BOOL isEventAllDay;
@property(getter=_muid,readonly) unsigned long long muid;
@property(readonly) NSString * name;
@property(getter=_needsAttribution,readonly) BOOL needsAttribution;
@property(getter=_normalizedUserRatingScore,readonly) float normalizedUserRatingScore;
@property(getter=_openState,readonly) unsigned int openState;
@property(getter=_operatingHours,readonly) NSArray * operatingHours;
@property(getter=_photosAttribution,readonly) GEOMapItemPhotosAttribution * photosAttribution;
@property(getter=_place,readonly) GEOPlace * place;
@property(getter=_placeAsData,readonly) NSData * placeAsData;
@property(getter=_placeData,readonly) GEOPDPlace * placeData;
@property(getter=_placeDataAsData,readonly) NSData * placeDataAsData;
@property(getter=_placeType,readonly) int placeType;
@property(getter=_poiSurveyURLString,readonly) NSString * poiSurveyURLString;
@property(getter=_priceRange,readonly) unsigned int priceRange;
@property(getter=_providerURL,copy,readonly) NSURL * providerURL;
@property(getter=_resultProviderID,readonly) int resultProviderID;
@property(getter=_reviewsAttribution,readonly) GEOMapItemReviewsAttribution * reviewsAttribution;
@property(getter=_roadAccessPoints,readonly) NSArray * roadAccessPoints;
@property(getter=_sampleSizeForUserRatingScore,readonly) unsigned int sampleSizeForUserRatingScore;
@property(getter=_sequenceNumber,readonly) unsigned int sequenceNumber;
@property(getter=_sessionGUID,readonly) struct { unsigned long long x1; unsigned long long x2; } sessionGUID;
@property(getter=_styleAttributes,readonly) GEOFeatureStyleAttributes * styleAttributes;
@property(readonly) Class superclass;
@property(getter=_takesReservations,readonly) BOOL takesReservations;
@property(getter=_telephone,readonly) NSString * telephone;
@property(readonly) NSString * timezone;
@property(getter=isValid,readonly) BOOL valid;
@property(getter=_vendorID,copy,readonly) NSString * vendorID;
@property(getter=_webURL,copy,readonly) NSURL * webURL;

- (id)_additionalPlaceInfos;
- (double)_areaInMeters;
- (id)_arrivalMapRegionForTransportType:(int)arg1;
- (id)_attribution;
- (id)_businessURL;
- (id)_clientAttributes;
- (unsigned long long)_customIconID;
- (id)_disambiguationName;
- (id)_flyover;
- (id)_flyoverAnnouncementMessage;
- (BOOL)_goodForKids;
- (BOOL)_hasAnyAmenities;
- (BOOL)_hasAreaInMeters;
- (BOOL)_hasCurrentOperatingHours;
- (BOOL)_hasDelivery;
- (BOOL)_hasDeliveryAmenity;
- (BOOL)_hasFlyover;
- (BOOL)_hasFlyoverAnnouncementMessage;
- (BOOL)_hasGoodForKidsAmenity;
- (BOOL)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (BOOL)_hasMUID;
- (BOOL)_hasOperatingHours;
- (BOOL)_hasPriceRange;
- (BOOL)_hasResolvablePartialInformation;
- (BOOL)_hasResultProviderID;
- (BOOL)_hasSessionGUID;
- (BOOL)_hasTakesReservationsAmenity;
- (BOOL)_hasTelephone;
- (BOOL)_hasUserRatingScore;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
- (id)_mapItemByStrippingOptionalData;
- (unsigned long long)_muid;
- (BOOL)_needsAttribution;
- (float)_normalizedUserRatingScore;
- (unsigned int)_openState;
- (id)_operatingHours;
- (id)_photosAttribution;
- (id)_place;
- (id)_placeAsData;
- (id)_placeData;
- (id)_placeDataAsData;
- (int)_placeType;
- (id)_poiSurveyURLString;
- (unsigned int)_priceRange;
- (id)_providerURL;
- (int)_recommendedTransportType;
- (int)_resultProviderID;
- (id)_reviewsAttribution;
- (id)_roadAccessPoints;
- (unsigned int)_sampleSizeForUserRatingScore;
- (unsigned int)_sequenceNumber;
- (struct { unsigned long long x1; unsigned long long x2; })_sessionGUID;
- (id)_spokenAddressForLocale:(id)arg1;
- (id)_styleAttributes;
- (BOOL)_takesReservations;
- (id)_telephone;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForWritingAReview;
- (id)_vendorID;
- (id)_webURL;
- (id)addressDictionary;
- (id)areasOfInterest;
- (struct { double x1; double x2; })centerCoordinate;
- (int)contactAddressType;
- (BOOL)contactIsMe;
- (id)contactName;
- (id)contactSpokenName;
- (struct { double x1; double x2; })coordinate;
- (void)dealloc;
- (id)description;
- (id)displayMapRegion;
- (id)encodedData;
- (id)eventDate;
- (id)eventName;
- (id)geoAddress;
- (id)geoFenceMapRegion;
- (id)initWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;
- (BOOL)isDisputed;
- (BOOL)isEventAllDay;
- (BOOL)isValid;
- (id)name;
- (id)spokenNameForLocale:(id)arg1;
- (id)timezone;

@end
