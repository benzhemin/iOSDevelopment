/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PhotoEditSupport.framework/PhotoEditSupport
 */

@class BLPixelImageBuffer, CIFilter, CIImage, CIVector, NSData, NSNumber;

@interface BLBlackAndWhiteFilter : CIFilter {
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    CIFilter *_colorCubeFilterBW;
    CIFilter *_colorCubeFilterGrain;
    BLPixelImageBuffer *_grainImage;
    NSNumber *_inputAmount;
    NSNumber *_inputApplyGrain;
    NSNumber *_inputApplySepia;
    CIVector *_inputDestinationRect;
    CIVector *_inputHueStrengthArray;
    CIImage *_inputImage;
    NSNumber *_inputNeutralGamma;
    NSNumber *_inputPadding;
    NSNumber *_inputPhototone;
    NSNumber *_inputPreset;
    NSNumber *_inputVersion;
    float _lastAmount;
    BOOL _lastApplyGrain;
    BOOL _lastAppySepia;
    } _lastDestinationRect;
    CIVector *_lastHueStrengthArray;
    float _lastNeutralGamma;
    float _lastPhototone;
    int _lastPreset;
    int _lastVersion;
    BOOL _needsReprocess;
    NSData *_precomputedCube;
}

@property(retain) CIFilter * colorCubeFilterBW;
@property(retain) CIFilter * colorCubeFilterGrain;
@property(retain) BLPixelImageBuffer * grainImage;
@property(copy) NSNumber * inputAmount;
@property(copy) NSNumber * inputApplyGrain;
@property(copy) NSNumber * inputApplySepia;
@property(copy) CIVector * inputDestinationRect;
@property(copy) CIVector * inputHueStrengthArray;
@property(retain) CIImage * inputImage;
@property(copy) NSNumber * inputNeutralGamma;
@property(copy) NSNumber * inputPadding;
@property(copy) NSNumber * inputPhototone;
@property(copy) NSNumber * inputPreset;
@property(copy) NSNumber * inputVersion;
@property(retain) CIVector * lastHueStrengthArray;
@property(retain) NSData * precomputedCube;

- (void).cxx_destruct;
- (id)applyGrain:(id)arg1 cube:(id)arg2 destRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg3 padding:(float)arg4;
- (id)colorCubeFilterBW;
- (id)colorCubeFilterGrain;
- (id)generateGrain:(id)arg1 destRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2;
- (id)grainImage;
- (id)init;
- (id)inputAmount;
- (id)inputApplyGrain;
- (id)inputApplySepia;
- (id)inputDestinationRect;
- (id)inputHueStrengthArray;
- (id)inputImage;
- (id)inputNeutralGamma;
- (id)inputPadding;
- (id)inputPhototone;
- (id)inputPreset;
- (id)inputVersion;
- (id)lastHueStrengthArray;
- (id)loadGrain:(id)arg1 destRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 padding:(float)arg3;
- (id)outputImage;
- (id)precomputedCube;
- (void)setColorCubeFilterBW:(id)arg1;
- (void)setColorCubeFilterGrain:(id)arg1;
- (void)setDefaults;
- (void)setGrainImage:(id)arg1;
- (void)setInputAmount:(id)arg1;
- (void)setInputApplyGrain:(id)arg1;
- (void)setInputApplySepia:(id)arg1;
- (void)setInputDestinationRect:(id)arg1;
- (void)setInputHueStrengthArray:(id)arg1;
- (void)setInputImage:(id)arg1;
- (void)setInputNeutralGamma:(id)arg1;
- (void)setInputPadding:(id)arg1;
- (void)setInputPhototone:(id)arg1;
- (void)setInputPreset:(id)arg1;
- (void)setInputVersion:(id)arg1;
- (void)setLastHueStrengthArray:(id)arg1;
- (void)setPrecomputedCube:(id)arg1;

@end
