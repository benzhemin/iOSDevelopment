/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class KNBodyPlaceholderInfo, KNObjectPlaceholderInfo, KNSlideBackgroundInfo, KNSlideNode, KNSlideNumberPlaceholderInfo, KNSlideStyle, KNTitlePlaceholderInfo, KNTransition, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSObject<TSDContainerInfo>, NSString, TSDFill, TSDGuideStorage, TSDInfoGeometry, TSPObject<TSDOwningAttachment>, TSUMutablePointerSet, TSUPointerKeyDictionary;

@interface KNAbstractSlide : TSPObject <TSSPropertySource, TSSStyleClient, TSKDocumentObject, TSDDrawableContainerInfo, TSKTransformableObject> {
    KNSlideBackgroundInfo *mBackground;
    KNBodyPlaceholderInfo *mBodyPlaceholder;
    NSArray *mBuildChunks;
    NSArray *mBuilds;
    NSArray *mChildInfos;
    TSUPointerKeyDictionary *mDrawableToGhostInfosMap;
    TSUMutablePointerSet *mDrawablesWithInvalidGhosts;
    BOOL mInDocument;
    BOOL mNeedsSlideNodeEventCountUpdate;
    KNObjectPlaceholderInfo *mObjectPlaceholder;
    NSMutableDictionary *mPlaceholdersForTags;
    BOOL mShouldConsiderAllChunksActive;
    KNSlideNode *mSlideNode;
    KNSlideNumberPlaceholderInfo *mSlideNumberPlaceholder;
    NSMutableArray *mStaticGuides;
    KNSlideStyle *mStyle;
    KNTitlePlaceholderInfo *mTitlePlaceholder;
    KNTransition *mTransition;
    TSDGuideStorage *mUserDefinedGuideStorage;
}

@property(readonly) NSArray * activeBuildChunks;
@property(readonly) NSArray * alignmentGuides;
@property(readonly) NSArray * alignmentGuidesForEditing;
@property(getter=isAnchoredToText,readonly) BOOL anchoredToText;
@property(getter=isAttachedToBodyText,readonly) BOOL attachedToBodyText;
@property(retain) KNSlideBackgroundInfo * background;
@property(readonly) TSDFill * backgroundFill;
@property(retain) KNBodyPlaceholderInfo * bodyPlaceholder;
@property(getter=isBodyVisible,readonly) BOOL bodyVisible;
@property(copy) NSArray * buildChunks;
@property(copy) NSArray * builds;
@property(readonly) NSArray * buildsGroupedByDeliveryGroup;
@property(readonly) NSArray * buildsOrderedByFirstChunk;
@property(copy,readonly) NSString * debugDescription;
@property(readonly) unsigned int deliveryGroupCount;
@property(copy,readonly) NSString * description;
@property(getter=isFloatingAboveText,readonly) BOOL floatingAboveText;
@property(copy) TSDInfoGeometry * geometry;
@property(readonly) unsigned int hash;
@property(readonly) BOOL inDocument;
@property(readonly) NSArray * infosToDisplay;
@property(getter=isInlineWithText,readonly) BOOL inlineWithText;
@property BOOL matchesObjectPlaceholderGeometry;
@property(retain) KNObjectPlaceholderInfo * objectPlaceholder;
@property(getter=isObjectVisible,readonly) BOOL objectVisible;
@property(readonly) NSArray * ownedChildInfos;
@property TSPObject<TSDOwningAttachment> * owningAttachment;
@property(readonly) TSPObject<TSDOwningAttachment> * owningAttachmentNoRecurse;
@property NSObject<TSDContainerInfo> * parentInfo;
@property(copy) NSDictionary * placeholdersForTags;
@property KNSlideNode * slideNode;
@property(readonly) KNSlideNode * slideNode;
@property(retain) KNSlideNumberPlaceholderInfo * slideNumberPlaceholder;
@property(getter=isSlideNumberVisible,readonly) BOOL slideNumberVisible;
@property(readonly) NSArray * staticGuides;
@property(retain) KNSlideStyle * style;
@property(readonly) Class superclass;
@property(retain) KNTitlePlaceholderInfo * titlePlaceholder;
@property(getter=isTitleVisible,readonly) BOOL titleVisible;
@property(retain) KNTransition * transition;
@property(retain) TSDGuideStorage * userDefinedGuideStorage;

+ (id)buildChunksInDeliveryGroupAtIndex:(unsigned int)arg1 inBuildChunks:(id)arg2;
+ (BOOL)chunk:(id)arg1 isFirstInDeliveryGroupForChunks:(id)arg2;
+ (unsigned int)deliveryGroupCountForBuildChunks:(id)arg1;
+ (unsigned int)deliveryGroupIndexForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
+ (BOOL)needsObjectUUID;
+ (id)newObjectForUnarchiver:(id)arg1;
+ (id)p_firstActiveChunkInChunks:(id)arg1;
+ (id)parentSlideForInfo:(id)arg1;

- (float)CGFloatValueForProperty:(int)arg1;
- (id)activeBuildChunks;
- (id)activeChunksForDrawable:(id)arg1 animationType:(int)arg2;
- (id)activeChunksForDrawable:(id)arg1;
- (void)addChildInfo:(id)arg1;
- (void)addDrawable:(id)arg1 dolcContext:(id)arg2;
- (void)addStaticGuide:(id)arg1;
- (void)adoptStylesheet:(id)arg1 withMapper:(id)arg2;
- (id)alignmentGuides;
- (id)alignmentGuidesForEditing;
- (id)background;
- (id)backgroundFill;
- (id)bodyPlaceholder;
- (id)boxedObjectForProperty:(int)arg1;
- (id)buildChunks;
- (id)buildChunksInDeliveryGroupAtIndex:(unsigned int)arg1;
- (id)builds;
- (id)buildsForDrawable:(id)arg1 orderedByFirstChunk:(BOOL)arg2;
- (id)buildsForDrawable:(id)arg1 type:(int)arg2 orderedByFirstChunk:(BOOL)arg3;
- (id)buildsGroupedByDeliveryGroup;
- (id)buildsOrderedByFirstChunk;
- (int)canMoveBuildChunk:(id)arg1 toIndex:(unsigned int)arg2;
- (BOOL)canMoveDeliveryGroupFromIndex:(unsigned int)arg1 toIndex:(unsigned int)arg2;
- (BOOL)canMoveDrawables:(id)arg1 toIndexes:(id)arg2;
- (id)childEnumerator;
- (id)childInfos;
- (void)clearBackPointerToParentInfoIfNeeded:(id)arg1;
- (id)commandForTransformingByTransform:(struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })arg1 context:(id)arg2 transformedObjects:(id)arg3 inBounds:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg4;
- (BOOL)containsProperty:(int)arg1;
- (id)copyWithContext:(id)arg1;
- (void)dealloc;
- (id)defaultBodyPlaceholder;
- (id)defaultBodyPlaceholderWithContext:(id)arg1;
- (id)defaultSlideNumberPlaceholder;
- (id)defaultSlideNumberPlaceholderWithContext:(id)arg1;
- (id)defaultTitlePlaceholder;
- (id)defaultTitlePlaceholderWithContext:(id)arg1;
- (unsigned int)deliveryGroupCount;
- (unsigned int)deliveryGroupIndexForBuildChunk:(id)arg1;
- (id)deliveryGroupIndexesForBuilds:(id)arg1;
- (double)doubleValueForProperty:(int)arg1;
- (float)floatValueForProperty:(int)arg1;
- (id)geometry;
- (BOOL)hasComplementForBuildChunk:(id)arg1 inBuildChunks:(id)arg2;
- (BOOL)hasComplementForBuildChunk:(id)arg1;
- (void)i_invalidateActiveChunkCache;
- (id)inBuildForDrawable:(id)arg1;
- (BOOL)inDocument;
- (id)infoCorrespondingToInfo:(id)arg1;
- (BOOL)infoExistsForTag:(id)arg1;
- (id)infoForTag:(id)arg1;
- (BOOL)infoIsPlaceholder:(id)arg1;
- (id)infosToDisplay;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithSlideNode:(id)arg1 context:(id)arg2;
- (void)insertBuild:(id)arg1 atIndex:(unsigned int)arg2;
- (void)insertBuildChunk:(id)arg1 atIndex:(unsigned int)arg2;
- (void)insertChildInfo:(id)arg1 above:(id)arg2;
- (void)insertChildInfo:(id)arg1 atIndex:(unsigned int)arg2;
- (void)insertChildInfo:(id)arg1 below:(id)arg2;
- (void)insertDrawable:(id)arg1 atIndex:(unsigned int)arg2 dolcContext:(id)arg3;
- (void)insertDrawables:(id)arg1 atIndex:(unsigned int)arg2 dolcContext:(id)arg3;
- (int)intValueForProperty:(int)arg1;
- (BOOL)isAnchoredToText;
- (BOOL)isAttachedToBodyText;
- (BOOL)isBodyVisible;
- (BOOL)isFloatingAboveText;
- (BOOL)isInlineWithText;
- (BOOL)isObjectVisible;
- (BOOL)isSlideNumberVisible;
- (BOOL)isThemeContent;
- (BOOL)isTitleVisible;
- (Class)layoutClass;
- (void)loadFromArchive:(const struct SlideArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct Reference {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct RepeatedPtrField<KN::BuildChunkArchive> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct TransitionArchive {} *x6; struct Reference {} *x7; struct Reference {} *x8; struct Reference {} *x9; struct Reference {} *x10; struct RepeatedPtrField<TSP::Reference> { void **x_11_1_1; int x_11_1_2; int x_11_1_3; int x_11_1_4; } x11; struct RepeatedPtrField<TSP::Reference> { void **x_12_1_1; int x_12_1_2; int x_12_1_3; int x_12_1_4; } x12; struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> { void **x_13_1_1; int x_13_1_2; int x_13_1_3; int x_13_1_4; } x13; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x14; struct GeometryArchive {} *x15; unsigned int x16; unsigned int x17; struct ShapeStylePropertiesArchive {} *x18; struct GeometryArchive {} *x19; unsigned int x20; unsigned int x21; struct ShapeStylePropertiesArchive {} *x22; struct GeometryArchive {} *x23; unsigned int x24; unsigned int x25; struct ShapeStylePropertiesArchive {} *x26; struct Reference {} *x27; struct RepeatedPtrField<TSP::Reference> { void **x_28_1_1; int x_28_1_2; int x_28_1_3; int x_28_1_4; } x28; struct RepeatedPtrField<TSP::Reference> { void **x_29_1_1; int x_29_1_2; int x_29_1_3; int x_29_1_4; } x29; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x30; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x31; struct Reference {} *x32; struct RepeatedPtrField<TSD::GuideArchive> { void **x_33_1_1; int x_33_1_2; int x_33_1_3; int x_33_1_4; } x33; struct Reference {} *x34; struct Reference {} *x35; struct Reference {} *x36; boolx37; boolx38; boolx39; boolx40; int x41; unsigned int x42[2]; }*)arg1 unarchiver:(id)arg2;
- (void)moveChildren:(id)arg1 toIndexes:(id)arg2;
- (id)objectForProperty:(int)arg1;
- (id)objectPlaceholder;
- (id)outBuildForDrawable:(id)arg1;
- (id)ownedChildInfos;
- (id)owningAttachment;
- (id)owningAttachmentNoRecurse;
- (BOOL)p_areBuildChunksInValidOrder:(id)arg1;
- (void)p_assertChunksInSequenceForBuild:(id)arg1;
- (void)p_buildChunkOrderingDidChangeWithChunk:(id)arg1;
- (void)p_buildOrderingDidChangeWithBuild:(id)arg1;
- (id)p_calculateActiveBuildChunks;
- (BOOL)p_canMoveDeliveryGroupBuildChunks:(id)arg1 toIndex:(unsigned int)arg2;
- (BOOL)p_canMoveDeliveryGroupBuildChunksFromIndex:(unsigned int)arg1 toIndex:(unsigned int)arg2;
- (id)p_complementForBuild:(id)arg1;
- (id)p_invalidBuildsOnDrawable:(id)arg1;
- (BOOL)p_isValidToMoveChunk:(id)arg1 toIndex:(unsigned int)arg2;
- (struct _NSRange { unsigned int x1; unsigned int x2; })p_rangeForChunksInBuild:(id)arg1;
- (void)p_updateBuildsReplacingPlaceholder:(id)arg1 withPlaceholder:(id)arg2;
- (void)p_updateNumberOfBuildChunksImmediatelyWithoutUndoHistory;
- (void)p_updateOverlappingBuildEventTriggers;
- (void)p_updatePreUFFBuildEffects;
- (id)parentInfo;
- (void)performBlockOnInfos:(id)arg1;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetIndex:(int)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetStyle:(id)arg5 layoutPropertyMap:(id)arg6 paragraphPropertyMap:(id)arg7 listPropertyMap:(id)arg8 context:(id)arg9;
- (id)placeholderOfClass:(Class)arg1 withGeometry:(id)arg2 stylesheet:(id)arg3 shapePresetIndex:(int)arg4 textPresetStyle:(id)arg5 listStyle:(id)arg6 layoutPropertyMap:(id)arg7 paragraphPropertyMap:(id)arg8 listPropertyMap:(id)arg9 context:(id)arg10;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2 placeholderClass:(Class)arg3;
- (id)placeholderWithPlaceholder:(id)arg1 context:(id)arg2;
- (id)placeholdersForTags;
- (id)referencedStyles;
- (void)removeBuild:(id)arg1;
- (void)removeBuildChunk:(id)arg1;
- (void)removeChildInfo:(id)arg1;
- (void)removeDrawable:(id)arg1;
- (void)removeInvalidBuildsOnDrawable:(id)arg1 usingParentCommand:(id)arg2;
- (void)removeTagForDrawable:(id)arg1;
- (Class)repClass;
- (void)replaceChildInfo:(id)arg1 with:(id)arg2;
- (void)replaceReferencedStylesUsingBlock:(id)arg1;
- (void)saveToArchive:(struct SlideArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct Reference {} *x3; struct RepeatedPtrField<TSP::Reference> { void **x_4_1_1; int x_4_1_2; int x_4_1_3; int x_4_1_4; } x4; struct RepeatedPtrField<KN::BuildChunkArchive> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct TransitionArchive {} *x6; struct Reference {} *x7; struct Reference {} *x8; struct Reference {} *x9; struct Reference {} *x10; struct RepeatedPtrField<TSP::Reference> { void **x_11_1_1; int x_11_1_2; int x_11_1_3; int x_11_1_4; } x11; struct RepeatedPtrField<TSP::Reference> { void **x_12_1_1; int x_12_1_2; int x_12_1_3; int x_12_1_4; } x12; struct RepeatedPtrField<KN::SlideArchive_SageTagMapEntry> { void **x_13_1_1; int x_13_1_2; int x_13_1_3; int x_13_1_4; } x13; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x14; struct GeometryArchive {} *x15; unsigned int x16; unsigned int x17; struct ShapeStylePropertiesArchive {} *x18; struct GeometryArchive {} *x19; unsigned int x20; unsigned int x21; struct ShapeStylePropertiesArchive {} *x22; struct GeometryArchive {} *x23; unsigned int x24; unsigned int x25; struct ShapeStylePropertiesArchive {} *x26; struct Reference {} *x27; struct RepeatedPtrField<TSP::Reference> { void **x_28_1_1; int x_28_1_2; int x_28_1_3; int x_28_1_4; } x28; struct RepeatedPtrField<TSP::Reference> { void **x_29_1_1; int x_29_1_2; int x_29_1_3; int x_29_1_4; } x29; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x30; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x31; struct Reference {} *x32; struct RepeatedPtrField<TSD::GuideArchive> { void **x_33_1_1; int x_33_1_2; int x_33_1_3; int x_33_1_4; } x33; struct Reference {} *x34; struct Reference {} *x35; struct Reference {} *x36; boolx37; boolx38; boolx39; boolx40; int x41; unsigned int x42[2]; }*)arg1 archiver:(id)arg2;
- (void)setBackground:(id)arg1;
- (void)setBodyPlaceholder:(id)arg1;
- (void)setBuildChunks:(id)arg1;
- (void)setBuilds:(id)arg1;
- (void)setChildInfos:(id)arg1;
- (void)setGeometry:(id)arg1;
- (void)setInfo:(id)arg1 forSageTag:(id)arg2;
- (void)setObjectPlaceholder:(id)arg1;
- (void)setOwningAttachment:(id)arg1;
- (void)setParentInfo:(id)arg1;
- (void)setPlaceholdersForTags:(id)arg1;
- (void)setSlideNode:(id)arg1;
- (void)setSlideNumberPlaceholder:(id)arg1;
- (void)setStyle:(id)arg1;
- (void)setTitlePlaceholder:(id)arg1;
- (void)setTransition:(id)arg1;
- (void)setUserDefinedGuideStorage:(id)arg1;
- (id)slideNode;
- (id)slideNumberPlaceholder;
- (id)staticGuides;
- (id)style;
- (id)tagForInfo:(id)arg1;
- (id)titlePlaceholder;
- (id)transition;
- (id)userDefinedGuideStorage;
- (int)validateMoveBuildChunks:(id)arg1 toIndex:(unsigned int)arg2;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end
