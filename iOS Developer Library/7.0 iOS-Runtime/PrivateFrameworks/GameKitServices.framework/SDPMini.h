/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
 */

@class NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString, VCImageAttributeRules;

@interface SDPMini : NSObject {
    NSMutableDictionary *_audioParameters;
    NSString *_sdpUsername;
    NSMutableArray *_videoAttributes;
    NSNumber *aacBlockSize;
    BOOL allowAudioRecording;
    BOOL allowRTCPFB;
    BOOL allowsContentsChangeWithAspectPreservation;
    BOOL allowsDynamicMaxBitrate;
    NSNumber *answerBandwidth;
    NSMutableArray *audioPayloads;
    NSNumber *audioRTCPPort;
    NSNumber *audioRTPID;
    NSNumber *audioRTPPort;
    NSNumber *audioUnitModel;
    NSNumber *basebandCodecSampleRate;
    NSString *basebandCodecType;
    NSDictionary *featuresListDict;
    VCImageAttributeRules *imageAttributeRules;
    NSNumber *maxBandwidth;
    NSString *origin;
    NSMutableArray *secondaryAudioPayloads;
    NSString *sessionIP;
    NSMutableArray *videoPayloads;
    NSNumber *videoRTCPPort;
    NSNumber *videoRTPID;
    NSNumber *videoRTPPort;
}

@property(retain) NSNumber * aacBlockSize;
@property BOOL allowAudioRecording;
@property BOOL allowRTCPFB;
@property BOOL allowsContentsChangeWithAspectPreservation;
@property BOOL allowsDynamicMaxBitrate;
@property(retain) NSNumber * answerBandwidth;
@property(readonly) NSMutableArray * audioPayloads;
@property(retain) NSNumber * audioRTCPPort;
@property(retain) NSNumber * audioRTPID;
@property(retain) NSNumber * audioRTPPort;
@property(retain) NSNumber * audioUnitModel;
@property(retain) NSDictionary * featuresListDict;
@property(retain) VCImageAttributeRules * imageAttributeRules;
@property(retain) NSNumber * maxBandwidth;
@property(retain) NSString * origin;
@property(readonly) NSMutableArray * secondaryAudioPayloads;
@property(retain) NSString * sessionIP;
@property(readonly) NSMutableArray * videoPayloads;
@property(retain) NSNumber * videoRTCPPort;
@property(retain) NSNumber * videoRTPID;
@property(retain) NSNumber * videoRTPPort;

- (id)SDPUsername;
- (id)aacBlockSize;
- (void)addVideoImageAttr:(id)arg1 ForPayload:(int)arg2;
- (BOOL)allowAudioRecording;
- (BOOL)allowRTCPFB;
- (BOOL)allowsContentsChangeWithAspectPreservation;
- (BOOL)allowsDynamicMaxBitrate;
- (id)answerBandwidth;
- (id)audioPayloads;
- (id)audioRTCPPort;
- (id)audioRTPID;
- (id)audioRTPPort;
- (id)audioUnitModel;
- (id)composeAudioFMTPForPayload:(id)arg1;
- (id)composeAudioString;
- (id)composeBandwidthString;
- (id)composeFLSString;
- (id)composeSessionString;
- (id)composeVideoString;
- (void)createVideoImageAttr:(int)arg1 direction:(int)arg2 dimensions:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; float x8; int x9; }*)arg3 count:(int)arg4;
- (void)dealloc;
- (id)featuresListDict;
- (void)fillImageArray:(id)arg1 imageArray:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; float x8; int x9; }*)arg2;
- (void)fillImageStruct:(id)arg1 imageStruct:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; float x8; int x9; }*)arg2;
- (void)fillImageStructWithDictionary:(id)arg1 forInterface:(int)arg2 imageStruct:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; float x8; int x9; }*)arg3;
- (BOOL)getBasebandCodecType:(id*)arg1 sampleRate:(id*)arg2;
- (void)getNegotiatedResolutionForPayload:(int)arg1 forInterface:(int)arg2 withRule:(id)arg3 direction:(int)arg4 result:(struct imageTag { int x1; int x2; int x3; int x4; int x5; int x6; int x7; float x8; int x9; }*)arg5 remoteSupportsHD:(BOOL)arg6;
- (BOOL)getUseSbr:(BOOL*)arg1 blockSize:(int*)arg2 forAACFormat:(int)arg3;
- (id)getVideoRecvImages:(id)arg1;
- (id)getVideoSendImages:(id)arg1;
- (id)imageAttributeRules;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)maxBandwidth;
- (id)origin;
- (void)parseAudioFormatAttribute:(id)arg1;
- (void)parseAudioMediaAttributes:(id)arg1;
- (void)parseBandwidth:(id)arg1;
- (id)parseIP:(id)arg1;
- (void)parseImageAttributeRules:(id)arg1;
- (void)parseMedia:(id)arg1;
- (id)parseRTCPPort:(id)arg1;
- (id)parseRTPID:(id)arg1;
- (void)parseSDPFromString:(id)arg1;
- (void)parseSessionAttributes:(id)arg1;
- (void)parseVideoMediaAttributes:(id)arg1;
- (int)rulesFramerate:(int)arg1;
- (void)rulesImageSize:(int)arg1 pWidth:(int*)arg2 pHeight:(int*)arg3;
- (id)secondaryAudioPayloads;
- (id)sessionIP;
- (void)setAacBlockSize:(id)arg1;
- (void)setAllowAudioRecording:(BOOL)arg1;
- (void)setAllowRTCPFB:(BOOL)arg1;
- (void)setAllowsContentsChangeWithAspectPreservation:(BOOL)arg1;
- (void)setAllowsDynamicMaxBitrate:(BOOL)arg1;
- (void)setAnswerBandwidth:(id)arg1;
- (void)setAudioRTCPPort:(id)arg1;
- (void)setAudioRTPID:(id)arg1;
- (void)setAudioRTPPort:(id)arg1;
- (void)setAudioUnitModel:(id)arg1;
- (void)setBasebandCodecType:(id)arg1 sampleRate:(id)arg2;
- (void)setFeaturesListDict:(id)arg1;
- (void)setImageAttributeRules:(id)arg1;
- (void)setMaxBandwidth:(id)arg1;
- (void)setOrigin:(id)arg1;
- (void)setSessionIP:(id)arg1;
- (void)setUseSbr:(BOOL)arg1 blockSize:(int)arg2 forAACFormat:(int)arg3;
- (BOOL)setVideoPayloads:(int*)arg1 count:(int)arg2;
- (void)setVideoRTCPFB:(BOOL)arg1 useNACK:(BOOL)arg2;
- (void)setVideoRTCPPort:(id)arg1;
- (void)setVideoRTPID:(id)arg1;
- (void)setVideoRTPPort:(id)arg1;
- (BOOL)supportImage:(id)arg1 width:(int)arg2 height:(int)arg3 rate:(int)arg4;
- (id)toStringWithVideoEnabled:(BOOL)arg1;
- (BOOL)videoDisplayAttribute:(int*)arg1 withHeight:(int*)arg2;
- (id)videoImageAttributes:(int)arg1;
- (id)videoPayloads;
- (id)videoRTCPPort;
- (id)videoRTPID;
- (id)videoRTPPort;

@end
