/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCH2DSageGeometryHelper : TSCHSageGeometryHelper {
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGRect { 
        struct CGPoint { 
            float x; 
            float y; 
        } origin; 
        struct CGSize { 
            float width; 
            float height; 
        } size; 
    struct CGPoint { 
        float x; 
        float y; 
    struct CGPoint { 
        float x; 
        float y; 
    } mBottomAxisBounds;
    float mBottomAxisHeightChange;
    } mBottomAxisLabelsBounds;
    } mBottomLeftCategoryAxisTitleOverhang;
    } mBottomLeftChartTitleOverhang;
    } mBottomLeftValueAxisTitleOverhang;
    } mBottomLeftValueAxisY2TitleOverhang;
    } mBottomLegendBounds;
    } mCategoryAxisTitleBounds;
    BOOL mCategoryAxisTitleSizeValid;
    BOOL mChartAxisLabelsSizeValid;
    BOOL mChartAxisSizeValid;
    } mChartBodyBounds;
    BOOL mChartExplodedSizeValid;
    BOOL mChartLayoutValid;
    BOOL mChartLegendSizeValid;
    } mChartTitleBounds;
    BOOL mChartTitleSizeValid;
    BOOL mChartValueElementsGeometryValid;
    } mExplodedBodyShift;
    } mExplodedBounds;
    float mHorizontalAxisOverhang;
    } mLeftAxisBounds;
    } mLeftAxisLabelsBounds;
    } mLeftLegendBounds;
    } mOutsideLabelsChartTitleShift;
    } mRightAxisBounds;
    } mRightAxisLabelsBounds;
    float mRightAxisWidthChange;
    } mRightLegendBounds;
    } mTopAxisBounds;
    float mTopAxisHeightChange;
    } mTopAxisLabelsBounds;
    } mTopLegendBounds;
    } mTopRightCategoryAxisTitleOverhang;
    } mTopRightChartTitleOverhang;
    } mTopRightValueAxisTitleOverhang;
    } mTopRightValueAxisY2TitleOverhang;
    } mValueAxisTitleBounds;
    BOOL mValueAxisTitleSizeValid;
    } mValueAxisY2TitleBounds;
    BOOL mValueAxisY2TitleSizeValid;
    float mVerticalAxisOverhang;
}

+ (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })computeSageChartAreaBoundsForChartInfo:(id)arg1 geometryRect:(struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })arg2 returningContainingViewportSize:(id*)arg3;

- (float)_bottomAxisOuterWidth;
- (float)_horizontalAxisLabelsHeight;
- (float)_leftAxisOuterWidth;
- (float)_rightAxisOuterWidth;
- (float)_seriesSymbolWidth;
- (float)_topAxisOuterWidth;
- (float)_verticalAxisLabelsWidth:(bool)arg1;
- (BOOL)aspectRatioLocked;
- (BOOL)bottomAxisLabelsVisible;
- (void)calculateCategoryAxisTitleSize;
- (void)calculateChartAxisLabelsSize;
- (void)calculateChartAxisSize;
- (void)calculateChartBodySize;
- (BOOL)calculateChartExplodedSize;
- (void)calculateChartTitleSize;
- (void)calculateValueAxisTitleSize;
- (void)calculateValueAxisY2TitleSize;
- (float)chartTitlePadding;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })computeSageLayoutCBB;
- (float)distanceFromXAxisUsingParagraphStyle:(id)arg1;
- (float)distanceFromYAxisUsingParagraphStyle:(id)arg1;
- (float)fontHeight:(id)arg1;
- (BOOL)isArea;
- (BOOL)isLine;
- (BOOL)isPie;
- (BOOL)isScatter;
- (BOOL)isVertical;
- (BOOL)leftAxisLabelsVisible;
- (struct CGSize { float x1; float x2; })measureText:(id)arg1 withParagraphStyle:(id)arg2;
- (BOOL)p_labelsVisible:(id)arg1;
- (id)p_model;
- (float)p_widthFromTicksAndStrokeForAxis:(id)arg1;
- (BOOL)rightAxisLabelsVisible;
- (float)seriesCategoryLabelsHorizontalGutter;
- (float)seriesCategoryLabelsVerticalGutter;
- (BOOL)topAxisLabelsVisible;
- (float)xAxisLabelHeight;
- (float)xAxisTitlePadding;
- (float)yAxisLabelHeight:(BOOL)arg1;
- (float)yAxisTitlePadding:(BOOL)arg1;

@end
