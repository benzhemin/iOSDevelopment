/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@interface TSCEReferenceEnumerator : NSObject {
    struct TSCEASTNodeArray { char *x1; unsigned int x2; unsigned int x3; id x4; } *mAST;
    struct TSCEASTNodeArrayReferenceIteratorState { struct TSCEASTNodeReferenceExtractionFunction { int (**x_1_1_1)(); struct stack<std::__1::pair<TSCECReference, bool>, std::__1::vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool> > > > { struct vector<std::__1::pair<TSCECReference, bool>, std::__1::allocator<std::__1::pair<TSCECReference, bool> > > { struct pair<TSCECReference, bool> {} *x_1_3_1; struct pair<TSCECReference, bool> {} *x_1_3_2; struct __compressed_pair<std::__1::pair<TSCECReference, bool> *, std::__1::allocator<std::__1::pair<TSCECReference, bool> > > { struct pair<TSCECReference, bool> {} *x_3_4_1; } x_1_3_3; } x_2_2_1; } x_1_1_2; struct vector<TSCECReference, std::__1::allocator<TSCECReference> > { struct { /* ? */ } *x_3_2_1; struct { /* ? */ } *x_3_2_2; struct __compressed_pair<TSCECReference *, std::__1::allocator<TSCECReference> > { struct { /* ? */ } *x_3_3_1; } x_3_2_3; } x_1_1_3; boolx_1_1_4; struct __CFUUID {} *x_1_1_5; id x_1_1_6; struct { unsigned short x_7_2_1; unsigned char x_7_2_2; unsigned char x_7_2_3; } x_1_1_7; } x1; struct TSCEASTNodeArrayIterator { struct TSCEASTNodeArray {} *x_2_1_1; struct TSCEASTNodeFunction {} *x_2_1_2; unsigned int x_2_1_3; } x2; struct { int x_3_1_1; union { struct { struct { unsigned short x_1_4_1; unsigned char x_1_4_2; unsigned char x_1_4_3; } x_1_3_1; struct __CFUUID {} *x_1_3_2; } x_2_2_1; struct { struct { struct { unsigned short x_1_5_1; unsigned char x_1_5_2; unsigned char x_1_5_3; } x_1_4_1; struct { unsigned short x_2_5_1; unsigned char x_2_5_2; unsigned char x_2_5_3; } x_1_4_2; } x_2_3_1; struct __CFUUID {} *x_2_3_2; } x_2_2_2; struct { struct { struct { struct { unsigned short x_1_6_1; unsigned char x_1_6_2; unsigned char x_1_6_3; } x_1_5_1; struct { unsigned short x_2_6_1; unsigned char x_2_6_2; unsigned char x_2_6_3; } x_1_5_2; } x_1_4_1; struct __CFUUID {} *x_1_4_2; } x_3_3_1; int x_3_3_2; } x_2_2_3; struct __CFUUID {} *x_2_2_4; } x_3_1_2; } x3; } *mReferenceIteratorState;
}

- (void)dealloc;
- (id)initWithCalculationEngine:(id)arg1 defaultFormulaOwnerID:(struct __CFUUID { }*)arg2 nodeArray:(const struct TSCEASTNodeArray { char *x1; unsigned int x2; unsigned int x3; id x4; }*)arg3 myHostCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg4 doImplicitIntersection:(BOOL)arg5;
- (const struct { int x1; union { struct { struct { unsigned short x_1_3_1; unsigned char x_1_3_2; unsigned char x_1_3_3; } x_1_2_1; struct __CFUUID {} *x_1_2_2; } x_2_1_1; struct { struct { struct { unsigned short x_1_4_1; unsigned char x_1_4_2; unsigned char x_1_4_3; } x_1_3_1; struct { unsigned short x_2_4_1; unsigned char x_2_4_2; unsigned char x_2_4_3; } x_1_3_2; } x_2_2_1; struct __CFUUID {} *x_2_2_2; } x_2_1_2; struct { struct { struct { struct { unsigned short x_1_5_1; unsigned char x_1_5_2; unsigned char x_1_5_3; } x_1_4_1; struct { unsigned short x_2_5_1; unsigned char x_2_5_2; unsigned char x_2_5_3; } x_1_4_2; } x_1_3_1; struct __CFUUID {} *x_1_3_2; } x_3_2_1; int x_3_2_2; } x_2_1_3; struct __CFUUID {} *x_2_1_4; } x2; }*)nextReference;

@end
