/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@class NSString;

@interface TSCH3DChartAnimationClip : NSObject {
    NSString *mTimerName;
}

@property(readonly) NSString * timerName;

+ (id)clip;
+ (id)clipWithTimerName:(id)arg1;

- (void)dealloc;
- (void)didAddToAnimationClipsWithScene:(id)arg1 animation:(id)arg2;
- (void)didAddToAnimationClipsWithSceneObject:(id)arg1 scene:(id)arg2 animation:(id)arg3;
- (void)didGenerateShaderEffects:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)didGenerateShaderEffectsForSeriesAtIndex:(const struct tvec2<int> { union { int x_1_1_1; int x_1_1_2; int x_1_1_3; } x1; union { int x_2_1_1; int x_2_1_2; int x_2_1_3; } x2; }*)arg1 effects:(id)arg2 sceneObject:(id)arg3 pipeline:(id)arg4 context:(id)arg5;
- (void)didProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (void)didTransformElement:(const struct RenderElementInfo { }*)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (void)didUpdateAnimationTimeForContext:(id)arg1 layers:(id)arg2;
- (id)init;
- (id)initWithTimerName:(id)arg1;
- (void)labelsResourcesSessionWillBeginForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (void)labelsResourcesSessionWillEndForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (BOOL)renderPassDelayDisallowedForSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass { int x1; })renderPassForElement:(const struct RenderElementInfo { }*)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (struct ElementRenderPass { int x1; })renderPassForSceneObject:(id)arg1;
- (BOOL)shouldUpdateSeriesElementTimingWithAnyElement;
- (float)timeFromContext:(id)arg1;
- (id)timerName;
- (void)updateExternalLabelAttribute:(struct ExternalLabelAttribute { }*)arg1 sceneObject:(id)arg2 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo { }*)arg3 timeSlice:(id)arg4 context:(id)arg5;
- (BOOL)willProcessElements:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (BOOL)willProcessSeries:(id)arg1 sceneObject:(id)arg2 pipeline:(id)arg3 context:(id)arg4;
- (BOOL)willRenderElement:(const struct RenderElementInfo { }*)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (void)willRunWithScene:(id)arg1 context:(id)arg2 layers:(id)arg3;
- (BOOL)willSubmitElement:(const struct RenderElementInfo { }*)arg1 sceneObject:(id)arg2 context:(id)arg3;
- (BOOL)willSubmitLabelForSceneObject:(id)arg1 labelRenderInfo:(const struct ChartLabelsContainingLabelRenderInfo { }*)arg2 context:(id)arg3;
- (BOOL)willSubmitSceneObject:(id)arg1 pipeline:(id)arg2 context:(id)arg3;
- (BOOL)willUpdateElementEffectsStatesForElement:(const struct RenderElementInfo { }*)arg1 sceneObject:(id)arg2 context:(id)arg3;

@end
