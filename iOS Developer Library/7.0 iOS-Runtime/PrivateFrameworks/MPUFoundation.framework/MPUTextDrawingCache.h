/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MPUFoundation.framework/MPUFoundation
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSCache, NSDictionary, NSHashTable, NSMutableDictionary, NSOperationQueue, NSStringDrawingContext;

@interface MPUTextDrawingCache : NSObject {
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    } _allowedSize;
    unsigned int _cacheCostScale;
    unsigned int _cacheSize;
    NSMutableDictionary *_cachesForOtherAllowedSizes;
    float _displayScale;
    NSCache *_drawingsForCurrentAllowedSize;
    NSDictionary *_emphasizedTextAttributes;
    unsigned int _invalidationNotificationCoalescingRequestsCount;
    NSHashTable *_invalidationObservers;
    unsigned int _maximumNumberOfLines;
    BOOL _opaque;
    NSOperationQueue *_preHeatingOperationQueue;
    } _referenceSizeForCostComputation;
    NSDictionary *_regularTextAttributes;
    NSStringDrawingContext *_stringDrawingContext;
    NSDictionary *_textAttributes;
    id _textEmphasizer;
    BOOL _wasInvalidatedWithoutNotifyingObservers;
}

@property struct CGSize { float x1; float x2; } allowedSize;
@property float displayScale;
@property(copy) NSDictionary * emphasizedTextAttributes;
@property unsigned int maximumNumberOfLines;
@property(getter=isOpaque) BOOL opaque;
@property(copy) NSDictionary * regularTextAttributes;
@property(copy) NSDictionary * textAttributes;
@property(copy) id textEmphasizer;

+ (id)_drawingForText:(id)arg1 fromCache:(id)arg2 usingStringDrawingContext:(id)arg3 allowedSize:(struct CGSize { float x1; float x2; })arg4 textAttributes:(id)arg5 opaque:(BOOL)arg6 displayScale:(float)arg7 textEmphasizer:(id)arg8 regularTextAttributes:(id)arg9 emphasizedTextAttributes:(id)arg10 cacheSize:(unsigned int)arg11 cacheCostScale:(unsigned int)arg12 referenceSizeForCostComputation:(struct CGSize { float x1; float x2; })arg13;

- (void).cxx_destruct;
- (void)_applicationDidReceiveMemoryWarning:(id)arg1;
- (void)_drawingsForCurrentAllowedSizeWereInvalidated;
- (void)_ensureDrawingsForCurrentAllowedSizeCacheIsReady;
- (void)_invalidate;
- (id)_keyForAllowedSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_notifyInvalidationObservers;
- (void)_updateMaximumNumberOfLines;
- (void)_updateReferenceSizeForCostComputation;
- (struct CGSize { float x1; float x2; })_validateAllowedSize:(struct CGSize { float x1; float x2; })arg1;
- (void)addInvalidationObserver:(id)arg1;
- (struct CGSize { float x1; float x2; })allowedSize;
- (void)beginCoalescingInvalidationNotifications;
- (void)dealloc;
- (float)displayScale;
- (id)drawingForText:(id)arg1;
- (id)emphasizedTextAttributes;
- (void)endCoalescingInvalidationNotifications;
- (id)init;
- (BOOL)isOpaque;
- (unsigned int)maximumNumberOfLines;
- (void)preHeatForStrings:(id)arg1;
- (id)regularTextAttributes;
- (void)removeInvalidationObserver:(id)arg1;
- (void)setAllowedSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setDisplayScale:(float)arg1;
- (void)setEmphasizedTextAttributes:(id)arg1;
- (void)setMaximumNumberOfLines:(unsigned int)arg1;
- (void)setOpaque:(BOOL)arg1;
- (void)setRegularTextAttributes:(id)arg1;
- (void)setTextAttributes:(id)arg1;
- (void)setTextEmphasizer:(id)arg1;
- (id)textAttributes;
- (id)textEmphasizer;

@end
