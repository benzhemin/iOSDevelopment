/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@class NSString, SKUIEmbeddedMediaView, SKUILockupMetadataView, UIImage, UILabel;

@interface SKUILockupItemCellLayout : SKUIItemCellLayout {
    struct UIEdgeInsets { 
        float top; 
        float left; 
        float bottom; 
        float right; 
    struct CGSize { 
        float width; 
        float height; 
    struct CGSize { 
        float width; 
        float height; 
    } _contentInsets;
    } _imageBoundingSize;
    int _itemOfferStyle;
    UILabel *_itemOfferTextLabel;
    int _layoutStyle;
    int _lockupSize;
    SKUILockupMetadataView *_metadataView;
    BOOL _playsInlineVideo;
    int _verticalAlignment;
    } _videoThumbnailSize;
    SKUIEmbeddedMediaView *_videoThumbnailView;
}

@property(copy) NSString * artistName;
@property(copy) NSString * categoryString;
@property struct UIEdgeInsets { float x1; float x2; float x3; float x4; } contentInsets;
@property(copy) NSString * editorialBadgeString;
@property struct CGSize { float x1; float x2; } imageBoundingSize;
@property(copy) NSString * itemCountString;
@property int itemOfferStyle;
@property int layoutStyle;
@property int lockupSize;
@property int numberOfUserRatings;
@property BOOL playsInlineVideo;
@property(copy) NSString * releaseDateString;
@property(copy) NSString * title;
@property float userRating;
@property int verticalAlignment;
@property(retain) UIImage * videoThumbnailImage;
@property struct CGSize { float x1; float x2; } videoThumbnailSize;
@property unsigned int visibleFields;

+ (float)heightForLockupComponent:(id)arg1 clientContext:(id)arg2;
+ (float)heightForLockupStyle:(struct SKUILockupStyle { int x1; int x2; unsigned int x3; })arg1 item:(id)arg2 editorial:(id)arg3 clientContext:(id)arg4;
+ (struct CGSize { float x1; float x2; })videoThumbnailSizeForVideo:(id)arg1 clientContext:(id)arg2;

- (void).cxx_destruct;
- (void)_beginVideoPlaybackAction:(id)arg1;
- (void)_initSKUILockupItemCellLayout;
- (BOOL)_isItemOfferHidden;
- (id)_itemOfferTextLabel;
- (void)_layoutHorizontal;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })_layoutIconImageView;
- (void)_layoutVertical;
- (id)artistName;
- (id)categoryString;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })contentInsets;
- (void)dealloc;
- (id)editorialBadgeString;
- (void)endVideoPlaybackAnimated:(BOOL)arg1;
- (struct CGSize { float x1; float x2; })imageBoundingSize;
- (id)initWithCollectionViewCell:(id)arg1;
- (id)initWithParentView:(id)arg1;
- (id)initWithTableViewCell:(id)arg1;
- (id)itemCountString;
- (int)itemOfferStyle;
- (void)layoutForItemOfferChange;
- (int)layoutStyle;
- (void)layoutSubviews;
- (int)lockupSize;
- (int)numberOfUserRatings;
- (void)playInlineVideoWithURL:(id)arg1;
- (BOOL)playsInlineVideo;
- (void)prepareForReuse;
- (id)releaseDateString;
- (void)setArtistName:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setCategoryString:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)setContentInsets:(struct UIEdgeInsets { float x1; float x2; float x3; float x4; })arg1;
- (void)setEditorialBadgeString:(id)arg1;
- (void)setIconImage:(id)arg1;
- (void)setImageBoundingSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setItemCountString:(id)arg1;
- (void)setItemOfferStyle:(int)arg1;
- (void)setLayoutStyle:(int)arg1;
- (void)setLockupSize:(int)arg1;
- (void)setNumberOfUserRatings:(int)arg1;
- (void)setPlaysInlineVideo:(BOOL)arg1;
- (void)setReleaseDateString:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setUserRating:(float)arg1;
- (void)setVerticalAlignment:(int)arg1;
- (void)setVideoThumbnailImage:(id)arg1;
- (void)setVideoThumbnailSize:(struct CGSize { float x1; float x2; })arg1;
- (void)setVisibleFields:(unsigned int)arg1;
- (id)title;
- (float)userRating;
- (int)verticalAlignment;
- (id)videoThumbnailImage;
- (struct CGSize { float x1; float x2; })videoThumbnailSize;
- (unsigned int)visibleFields;

@end
