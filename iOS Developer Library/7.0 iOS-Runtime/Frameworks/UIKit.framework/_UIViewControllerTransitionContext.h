/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <UIViewControllerAnimatedTransitioning>, <UIViewControllerInteractiveTransitioning>, NSArray, NSString, UIView, _UIViewControllerTransitionCoordinator;

@interface _UIViewControllerTransitionContext : NSObject <UIViewControllerContextTransitioningEx> {
    struct { 
        unsigned int interactorImplementsCompletionSpeed : 1; 
        unsigned int interactorImplementsCompletionCurve : 1; 
        unsigned int transitionWasCancelled : 1; 
        unsigned int transitionIsCompleting : 1; 
    BOOL __allowUserInteraction;
    <UIViewControllerAnimatedTransitioning> *__animator;
    _UIViewControllerTransitionCoordinator *__auxContext;
    int __completionCurve;
    id __completionHandler;
    float __completionVelocity;
    NSArray *__containerViews;
    id __didCompleteHandler;
    double __duration;
    id __interactiveUpdateHandler;
    <UIViewControllerInteractiveTransitioning> *__interactor;
    BOOL __isPresentation;
    float __percentOffset;
    id __postInteractiveCompletionHandler;
    int __state;
    id __willCompleteHandler;
    UIView *_containerView;
    NSArray *_disabledViews;
    BOOL _initiallyInteractive;
    BOOL _isAnimated;
    BOOL _isCurrentlyInteractive;
    int _presentationStyle;
    float _previousPercentComplete;
    BOOL _rotating;
    } _transitionContextFlags;
}

@property(getter=_allowUserInteraction,setter=_setAllowUserInteraction:) BOOL _allowUserInteraction;
@property(setter=_setAnimator:) <UIViewControllerAnimatedTransitioning> * _animator;
@property(setter=_setAuxContext:,retain) _UIViewControllerTransitionCoordinator * _auxContext;
@property(setter=_setCompletionCurve:) int _completionCurve;
@property(setter=_setCompletionHandler:,copy) id _completionHandler;
@property(setter=_setCompletionVelocity:) float _completionVelocity;
@property(setter=_setContainerViews:,retain) NSArray * _containerViews;
@property(setter=_setDidCompleteHandler:,copy) id _didCompleteHandler;
@property(setter=_setDuration:) double _duration;
@property(setter=_setInteractiveUpdateHandler:,copy) id _interactiveUpdateHandler;
@property(setter=_setInteractor:) <UIViewControllerInteractiveTransitioning> * _interactor;
@property(setter=_setIsPresentation:) BOOL _isPresentation;
@property(setter=_setPercentOffset:) float _percentOffset;
@property(setter=_setPostInteractiveCompletionHandler:,copy) id _postInteractiveCompletionHandler;
@property(setter=_setState:) int _state;
@property(setter=_setTransitionIsCompleting:) BOOL _transitionIsCompleting;
@property(setter=_setWillCompleteHandler:,copy) id _willCompleteHandler;
@property(getter=_affineTransform,readonly) struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; } affineTransform;
@property(setter=_setContainerView:) UIView * containerView;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int hash;
@property(setter=_setInitiallyInteractive:) BOOL initiallyInteractive;
@property(setter=_setIsAnimated:) BOOL isAnimated;
@property(setter=_setIsCurrentlyInteractive:) BOOL isCurrentlyInteractive;
@property(setter=_setPresentationStyle:) int presentationStyle;
@property(getter=_isRotating,setter=_setRotating:) BOOL rotating;
@property(readonly) Class superclass;

+ (id)_associatedTransitionContextForObject:(id)arg1;

- (void)__runAlongsideAnimations;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })_affineTransform;
- (BOOL)_allowUserInteraction;
- (id)_animator;
- (id)_auxContext;
- (int)_completionCurve;
- (id)_completionHandler;
- (float)_completionVelocity;
- (id)_containerViews;
- (id)_didCompleteHandler;
- (void)_disableInteractionForViews:(id)arg1;
- (double)_duration;
- (void)_enableInteractionForDisabledViews;
- (id)_interactiveUpdateHandler;
- (void)_interactivityDidChange:(BOOL)arg1;
- (id)_interactor;
- (BOOL)_isPresentation;
- (BOOL)_isRotating;
- (float)_percentOffset;
- (id)_postInteractiveCompletionHandler;
- (float)_previousPercentComplete;
- (void)_runAlongsideCompletions;
- (void)_setAllowUserInteraction:(BOOL)arg1;
- (void)_setAnimator:(id)arg1;
- (void)_setAuxContext:(id)arg1;
- (void)_setCompletionCurve:(int)arg1;
- (void)_setCompletionHandler:(id)arg1;
- (void)_setCompletionVelocity:(float)arg1;
- (void)_setContainerView:(id)arg1;
- (void)_setContainerViews:(id)arg1;
- (void)_setDidCompleteHandler:(id)arg1;
- (void)_setDuration:(double)arg1;
- (void)_setInitiallyInteractive:(BOOL)arg1;
- (void)_setInteractiveUpdateHandler:(id)arg1;
- (void)_setInteractor:(id)arg1;
- (void)_setIsAnimated:(BOOL)arg1;
- (void)_setIsCurrentlyInteractive:(BOOL)arg1;
- (void)_setIsPresentation:(BOOL)arg1;
- (void)_setPercentOffset:(float)arg1;
- (void)_setPostInteractiveCompletionHandler:(id)arg1;
- (void)_setPresentationStyle:(int)arg1;
- (void)_setPreviousPercentComplete:(float)arg1;
- (void)_setRotating:(BOOL)arg1;
- (void)_setState:(int)arg1;
- (void)_setTransitionIsCompleting:(BOOL)arg1;
- (void)_setTransitionIsInFlight:(BOOL)arg1;
- (void)_setWillCompleteHandler:(id)arg1;
- (int)_state;
- (id)_transitionCoordinator;
- (BOOL)_transitionIsCompleting;
- (BOOL)_transitionIsInFlight;
- (void)_updateInteractiveTransitionWithoutTrackingPercentComplete:(float)arg1;
- (id)_willCompleteHandler;
- (void)cancelInteractiveTransition;
- (void)completeTransition:(BOOL)arg1;
- (id)containerView;
- (void)dealloc;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })finalFrameForViewController:(id)arg1;
- (void)finishInteractiveTransition;
- (id)init;
- (struct CGRect { struct CGPoint { float x_1_1_1; float x_1_1_2; } x1; struct CGSize { float x_2_1_1; float x_2_1_2; } x2; })initialFrameForViewController:(id)arg1;
- (BOOL)initiallyInteractive;
- (BOOL)isAnimated;
- (BOOL)isCurrentlyInteractive;
- (BOOL)isInteractive;
- (int)presentationStyle;
- (struct CGAffineTransform { float x1; float x2; float x3; float x4; float x5; float x6; })targetTransform;
- (BOOL)transitionWasCancelled;
- (void)updateInteractiveTransition:(float)arg1;
- (id)viewControllerForKey:(id)arg1;
- (id)viewForKey:(id)arg1;

@end
