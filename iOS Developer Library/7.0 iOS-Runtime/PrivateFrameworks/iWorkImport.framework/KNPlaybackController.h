/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class <KNPlaybackControllerDelegate>, <TSDCanvasDelegate>, CALayer, KNAnimatedSlideView, KNMovieRenderer, KNPlaybackAudioController, KNPlaybackSession, KNShow, KNSlideNode, NSArray, NSIndexSet, NSObject<KNPlaybackConcealer>, NSSet;

@interface KNPlaybackController : NSObject {
    BOOL mAllowsShowToEndInternally;
    KNAnimatedSlideView *mAnimator;
    BOOL mAutomaticallyPlaysMovies;
    BOOL mAutomaticallyPlaysSoundtrack;
    CALayer *mBaseLayer;
    <TSDCanvasDelegate> *mCanvasDelegate;
    <KNPlaybackControllerDelegate> *mDelegate;
    id mEndShowHandler;
    BOOL mIsCurrentEventNonAutomatic;
    BOOL mIsHyperlinkInProgress;
    BOOL mIsPaused;
    BOOL mIsUsingDiscreteGPU;
    KNMovieRenderer *mMovieRendererWithVisibleHUD;
    BOOL mNeedsRenderAfterResumingRendering;
    int mPlayMode;
    struct CGColorSpace { } *mPlaybackColorSpace;
    NSObject<KNPlaybackConcealer> *mPlaybackConcealer;
    int mPlaybackState;
    BOOL mPlaysAutomaticEvents;
    BOOL mRenderingSuspended;
    KNPlaybackSession *mSession;
    KNShow *mShow;
    KNPlaybackAudioController *mSoundtrackController;
}

@property BOOL allowsShowToEndInternally;
@property(getter=isAnimating,readonly) BOOL animating;
@property(getter=isAtBeginning,readonly) BOOL atBeginning;
@property BOOL automaticallyPlaysMovies;
@property BOOL automaticallyPlaysSoundtrack;
@property(readonly) CALayer * baseLayer;
@property(copy) NSIndexSet * buildEventIndexesToAnimate;
@property(readonly) double buildsToAnimateDuration;
@property(readonly) <TSDCanvasDelegate> * canvasDelegate;
@property unsigned int currentEventIndex;
@property(readonly) KNSlideNode * currentSlideNode;
@property(retain,readonly) NSArray * currentlyVisibleInfos;
@property <KNPlaybackControllerDelegate> * delegate;
@property(copy) id endShowHandler;
@property(readonly) unsigned int eventCount;
@property(readonly) KNSlideNode * firstSlideNode;
@property BOOL isHyperlinkInProgress;
@property(readonly) KNSlideNode * lastSlideNode;
@property KNMovieRenderer * movieRendererWithVisibleHUD;
@property(readonly) NSSet * movieRenderers;
@property(readonly) unsigned int nextEventIndex;
@property(readonly) KNSlideNode * nextSlideNode;
@property(getter=isNonMovieAnimationActive,readonly) BOOL nonMovieAnimationActive;
@property(getter=isNonMovieAnimationAnimating,readonly) BOOL nonMovieAnimationAnimating;
@property(getter=isPaused,readonly) BOOL paused;
@property(readonly) int pausedConcealingStyle;
@property int playMode;
@property struct CGColorSpace { }* playbackColorSpace;
@property(retain) NSObject<KNPlaybackConcealer> * playbackConcealer;
@property(readonly) int playbackState;
@property BOOL playsAutomaticEvents;
@property BOOL shouldAnimateNullTransitions;
@property BOOL shouldAnimateTransitionOnLastSlide;
@property(readonly) KNShow * show;
@property(readonly) unsigned int visibleEventIndex;

+ (id)keyPathsForValuesAffectingMovieRenderers;
+ (id)keyPathsForValuesAffectingPausedConcealingStyle;

- (BOOL)allowsShowToEndInternally;
- (void)applyMovieControl:(int)arg1;
- (BOOL)automaticallyPlaysMovies;
- (BOOL)automaticallyPlaysSoundtrack;
- (id)baseLayer;
- (id)breadCrumbTrail;
- (id)buildEventIndexesToAnimate;
- (double)buildsToAnimateDuration;
- (id)canvasDelegate;
- (unsigned int)currentEventIndex;
- (id)currentSlideNode;
- (id)currentlyVisibleInfos;
- (void)dealloc;
- (id)delegate;
- (void)endShow;
- (id)endShowHandler;
- (unsigned int)eventCount;
- (id)firstSlideNode;
- (void)gotoFirstEvent;
- (BOOL)gotoFirstSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoLastSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoLastVisitedSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (void)gotoNextEvent;
- (void)gotoNextEventIgnoringDelay:(BOOL)arg1;
- (void)gotoNextEventWithoutAnimation;
- (BOOL)gotoNextSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (void)gotoPreviousEvent;
- (BOOL)gotoPreviousSlideWithAnimation:(BOOL)arg1 ignoreDelays:(BOOL)arg2;
- (BOOL)gotoSlideNode:(id)arg1 toEventIndex:(unsigned int)arg2 shouldAnimate:(BOOL)arg3 ignoreDelays:(BOOL)arg4;
- (id)init;
- (id)initWithShow:(id)arg1 canvasDelegate:(id)arg2;
- (BOOL)isAnimating;
- (BOOL)isAtBeginning;
- (BOOL)isHyperlinkAtPoint:(struct CGPoint { float x1; float x2; })arg1 hitObject:(id*)arg2 hitRep:(id*)arg3 hitInfo:(id*)arg4;
- (BOOL)isHyperlinkAtUnscaledPoint:(struct CGPoint { float x1; float x2; })arg1 hitObject:(id*)arg2 hitRep:(id*)arg3 hitInfo:(id*)arg4;
- (BOOL)isHyperlinkInProgress;
- (BOOL)isNonMovieAnimationActive;
- (BOOL)isNonMovieAnimationAnimating;
- (BOOL)isPaused;
- (id)lastSlideNode;
- (id)movieRendererAtPoint:(struct CGPoint { float x1; float x2; })arg1;
- (id)movieRendererWithVisibleHUD;
- (id)movieRenderers;
- (unsigned int)nextEventIndex;
- (id)nextSlideNode;
- (id)nextSlideNodeAfterSlideNode:(id)arg1;
- (id)p_animator;
- (id)p_currentBuildChunks;
- (float)p_defaultViewScaleForBaseLayer:(id)arg1;
- (void)p_endShowFromAnimator;
- (void)p_eventAnimationBecameActive:(id)arg1;
- (void)p_eventEnded:(id)arg1;
- (void)p_eventImmediatelyEnded:(id)arg1;
- (void)p_eventStarted:(id)arg1;
- (void)p_gotoPreviousAndJumpToFirstEvent:(BOOL)arg1;
- (id)p_hyperlinkURLForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (void)p_movieEnded:(id)arg1;
- (void)p_movieStarted:(id)arg1;
- (BOOL)p_processHyperlinkURL:(id)arg1;
- (void)p_releaseDiscreteGPUIfRetained;
- (void)p_resetAnimatorAndSetGoToFirstEvent:(BOOL)arg1;
- (void)p_resetAnimatorAtEventIndex:(unsigned int)arg1;
- (void)p_retainDiscreteGPUIfNeeded;
- (void)p_setAnimator:(id)arg1;
- (id)p_topLevelRepsForHitTesting;
- (void)pauseAnimations;
- (void)pauseAnimationsWithConcealingStyle:(int)arg1;
- (void)pauseSoundtrack;
- (int)pausedConcealingStyle;
- (void)playAutomaticEvents;
- (int)playMode;
- (void)playPreparedShow;
- (struct CGColorSpace { }*)playbackColorSpace;
- (id)playbackConcealer;
- (int)playbackState;
- (BOOL)playsAutomaticEvents;
- (void)prepareOnLayer:(id)arg1 atSlideNode:(id)arg2 isBaseLayerVisible:(BOOL)arg3;
- (void)prepareOnLayer:(id)arg1 viewScale:(float)arg2 atSlideNode:(id)arg3 isBaseLayerVisible:(BOOL)arg4;
- (BOOL)processHyperlinkForTarget:(id)arg1 rep:(id)arg2 info:(id)arg3;
- (void)renderCurrentEvent;
- (void)resizeShowToFitBaseLayer;
- (void)restartPlaybackIfNeeded;
- (void)restartShow;
- (void)resumeAnimationsIfPaused;
- (void)resumeRendering;
- (void)resumeSoundtrack;
- (void)setAllowsShowToEndInternally:(BOOL)arg1;
- (void)setAutomaticallyPlaysMovies:(BOOL)arg1;
- (void)setAutomaticallyPlaysSoundtrack:(BOOL)arg1;
- (void)setBreadCrumbTrail:(id)arg1;
- (void)setBuildEventIndexesToAnimate:(id)arg1;
- (void)setCurrentEventIndex:(unsigned int)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEndShowHandler:(id)arg1;
- (void)setIsHyperlinkInProgress:(BOOL)arg1;
- (void)setMovieRendererWithVisibleHUD:(id)arg1;
- (void)setPlayMode:(int)arg1;
- (void)setPlaybackColorSpace:(struct CGColorSpace { }*)arg1;
- (void)setPlaybackConcealer:(id)arg1;
- (void)setPlaysAutomaticEvents:(BOOL)arg1;
- (void)setShouldAnimateNullTransitions:(BOOL)arg1;
- (void)setShouldAnimateTransitionOnLastSlide:(BOOL)arg1;
- (BOOL)shouldAnimateNullTransitions;
- (BOOL)shouldAnimateTransitionOnLastSlide;
- (id)show;
- (void)startSoundtrackAtMediaIndex:(unsigned int)arg1 time:(double)arg2;
- (void)stopAnimations;
- (void)stopAnimationsAndGotoCompletionOfEvent;
- (void)stopSoundtrack;
- (void)suspendRendering;
- (void)tearDownShow;
- (unsigned int)visibleEventIndex;

@end
