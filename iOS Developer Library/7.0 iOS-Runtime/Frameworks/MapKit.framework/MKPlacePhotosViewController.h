/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@class <MKPlaceCardPhotosControllerDelegate>, MKMapItem, NSString, _MKPlacePhotosCollectionView;

@interface MKPlacePhotosViewController : UITableViewController <UICollectionViewDataSource, UICollectionViewDelegate, MKStackingViewControllerPreferredSizeUse, MKPlaceAttributionCellProvider> {
    BOOL _hasAttribution;
    MKMapItem *_mapItem;
    _MKPlacePhotosCollectionView *_photoGrid;
    float _photoWidth;
    <MKPlaceCardPhotosControllerDelegate> *_photosControllerDelegate;
    unsigned int _photosCount;
    BOOL _showAddPhotoButton;
    BOOL _showAttribution;
    BOOL _showMorePhotosButton;
}

@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property BOOL hasAttribution;
@property(readonly) unsigned int hash;
@property(retain) MKMapItem * mapItem;
@property(retain) _MKPlacePhotosCollectionView * photoGrid;
@property float photoWidth;
@property <MKPlaceCardPhotosControllerDelegate> * photosControllerDelegate;
@property unsigned int photosCount;
@property(readonly) BOOL requiresPreferredContentSizeInStackingView;
@property BOOL showAddPhotoButton;
@property BOOL showAttribution;
@property(readonly) BOOL showAttributionButtons;
@property BOOL showMorePhotosButton;
@property(readonly) Class superclass;

- (void).cxx_destruct;
- (void)_addPhoto;
- (void)_calculatePhotoSizeForSize:(struct CGSize { float x1; float x2; })arg1;
- (void)_morePhotos;
- (float)_photoCellHeight;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets { float x1; float x2; float x3; float x4; })collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(int)arg3;
- (float)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(int)arg3;
- (float)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(int)arg3;
- (struct CGSize { float x1; float x2; })collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (int)collectionView:(id)arg1 numberOfItemsInSection:(int)arg2;
- (BOOL)hasAttribution;
- (id)init;
- (id)mapItem;
- (int)numberOfSectionsInCollectionView:(id)arg1;
- (int)numberOfSectionsInTableView:(id)arg1;
- (id)photoGrid;
- (float)photoWidth;
- (id)photos;
- (id)photosControllerDelegate;
- (unsigned int)photosCount;
- (BOOL)requiresPreferredContentSizeInStackingView;
- (void)setHasAttribution:(BOOL)arg1;
- (void)setMapItem:(id)arg1;
- (void)setPhotoGrid:(id)arg1;
- (void)setPhotoWidth:(float)arg1;
- (void)setPhotosControllerDelegate:(id)arg1;
- (void)setPhotosCount:(unsigned int)arg1;
- (void)setShowAddPhotoButton:(BOOL)arg1;
- (void)setShowAttribution:(BOOL)arg1;
- (void)setShowMorePhotosButton:(BOOL)arg1;
- (BOOL)showAddPhotoButton;
- (BOOL)showAttribution;
- (BOOL)showAttributionButtons;
- (BOOL)showMorePhotosButton;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (float)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (int)tableView:(id)arg1 numberOfRowsInSection:(int)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)viewDidAppear:(BOOL)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillTransitionToSize:(struct CGSize { float x1; float x2; })arg1 withTransitionCoordinator:(id)arg2;

@end
