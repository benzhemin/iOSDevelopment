/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class NSArray, NSString, TSCEFunctionArgumentSpec, TSDMultiPaneController, TSTWPTokenAttachment;

@interface TSTExpressionNode : TSPObject <TSTFormulaToken> {
    TSCEFunctionArgumentSpec *mArgumentSpec;
    NSArray *mChildren;
    unsigned int mFirstIndex;
    unsigned int mLastIndex;
    TSTWPTokenAttachment *mTokenAttachment;
    NSString *mWhitespaceAfter;
    NSString *mWhitespaceBefore;
}

@property(retain) TSCEFunctionArgumentSpec * argumentSpec;
@property(retain) NSArray * children;
@property unsigned int firstIndex;
@property unsigned int lastIndex;
@property(retain,readonly) TSDMultiPaneController * popover;
@property(readonly) NSString * string;
@property TSTWPTokenAttachment * tokenAttachment;
@property(readonly) int tokenType;
@property(retain) NSString * whitespaceAfter;
@property(retain) NSString * whitespaceBefore;

- (void)addTSTCanvasReferencesToSet:(id)arg1 inRangeContext:(int)arg2 withColorHelper:(id)arg3 preferringNodesFromStorage:(id)arg4 allVisitedNodes:(id)arg5;
- (id)argumentSpec;
- (void)buildASTNodeArray:(struct TSCEASTNodeArray { char *x1; unsigned int x2; unsigned int x3; id x4; }*)arg1 hostCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (id)children;
- (int)compareFirstLastIndices:(id)arg1;
- (id)copyByResolvingIdentifiers:(id)arg1 hostTable:(id)arg2 forceReferenceInterpretation:(BOOL)arg3;
- (id)copyIntoContext:(id)arg1 bakeModes:(BOOL)arg2 children:(id)arg3;
- (void)dealloc;
- (id)deepCopyIntoContext:(id)arg1 bakeModes:(BOOL)arg2 withTokenDict:(id)arg3;
- (id)description;
- (id)detokenizedText;
- (void)enumerateExpressionNodesUsingBlock:(id)arg1;
- (id)exportString;
- (unsigned int)firstIndex;
- (BOOL)forceReferenceInterpretationOfChildren;
- (id)formulaPlainText;
- (BOOL)hasMenu;
- (id)initAsCopyOf:(id)arg1 intoContext:(id)arg2 children:(id)arg3;
- (id)initFromArchive:(const struct ExpressionNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct RepeatedPtrField<TSP::Reference> { void **x_3_1_1; int x_3_1_2; int x_3_1_3; int x_3_1_4; } x3; unsigned long long x4; unsigned long long x5; int x6; unsigned int x7[1]; }*)arg1 unarchiver:(id)arg2;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1 children:(id)arg2 firstIndex:(unsigned int)arg3 lastIndex:(unsigned int)arg4;
- (id)initWithContext:(id)arg1 firstIndex:(unsigned int)arg2 lastIndex:(unsigned int)arg3;
- (id)initWithContext:(id)arg1;
- (void)insertFormulaText:(id)arg1 includeWhitespace:(BOOL)arg2;
- (unsigned int)lastIndex;
- (id)popover;
- (void)saveToArchive:(struct ExpressionNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct RepeatedPtrField<TSP::Reference> { void **x_3_1_1; int x_3_1_2; int x_3_1_3; int x_3_1_4; } x3; unsigned long long x4; unsigned long long x5; int x6; unsigned int x7[1]; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setArgumentSpec:(id)arg1;
- (void)setChildren:(id)arg1;
- (void)setFirstIndex:(unsigned int)arg1;
- (void)setLastIndex:(unsigned int)arg1;
- (void)setTokenAttachment:(id)arg1;
- (void)setWhitespaceAfter:(id)arg1;
- (void)setWhitespaceBefore:(id)arg1;
- (id)tokenAttachment;
- (id)whitespaceAfter;
- (id)whitespaceBefore;

@end
