/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

/* RuntimeBrowser encountered one or more ivar type encodings for a function pointer. 
   The runtime does not encode function signature information.  We use a signature of: 
           "int (*funcName)()",  where funcName might be null. 
 */

@class KNAbstractSlide, KNSlideNode, NSArray, NSDictionary, NSMutableDictionary, NSString, TSPLazyReference;

@interface KNSlideNode : TSPObject <TSKDocumentObject, TSKModel, TSKSearchTarget, TSCEResolverContainer> {
    NSArray *mChildren;
    NSString *mClassicUniqueID;
    NSString *mCopiedFromSlideIdentifier;
    unsigned int mEventCount;
    BOOL mHasBodyInOutlineView;
    BOOL mHasExplicitBuilds;
    BOOL mHasNote;
    BOOL mHasTransition;
    BOOL mIsCollapsed;
    BOOL mIsCollapsedInOutlineView;
    BOOL mIsHidden;
    KNSlideNode *mParent;
    BOOL mSlideNumberVisible;
    TSPLazyReference *mSlideReference;
    unsigned int mSlideSpecificHyperlinksCount;
    unsigned int mTableNameCounter;
    NSMutableDictionary *mThumbnails;
    BOOL mThumbnailsAreDirty;
    NSString *mUniqueIdentifier;
}

@property(retain) NSArray * children;
@property NSString * classicUniqueID;
@property(getter=isCollapsed) BOOL collapsed;
@property(getter=isCollapsedInOutlineView) BOOL collapsedInOutlineView;
@property(retain) NSString * copiedFromSlideIdentifier;
@property(copy,readonly) NSString * debugDescription;
@property(copy,readonly) NSString * description;
@property(readonly) unsigned int eventCount;
@property BOOL hasBodyInOutlineView;
@property(readonly) BOOL hasBuildEvents;
@property(readonly) BOOL hasChildren;
@property(readonly) BOOL hasExplicitBuilds;
@property BOOL hasNote;
@property BOOL hasTransition;
@property(readonly) unsigned int hash;
@property(getter=isHidden) BOOL hidden;
@property BOOL isSlideNumberVisible;
@property(readonly) KNSlideNode * next;
@property(readonly) KNSlideNode * nextSkippingCollapsed;
@property(readonly) KNSlideNode * nextSkippingHidden;
@property KNSlideNode * parent;
@property(readonly) KNSlideNode * previous;
@property(readonly) KNSlideNode * previousSkippingCollapsed;
@property(readonly) KNSlideNode * previousSkippingHidden;
@property(retain) KNAbstractSlide * slide;
@property(readonly) KNAbstractSlide * slideIfLoaded;
@property unsigned int slideSpecificHyperlinksCount;
@property(readonly) Class superclass;
@property(readonly) NSDictionary * thumbnails;
@property BOOL thumbnailsAreDirty;
@property(readonly) NSString * uniqueIdentifier;

+ (id)lastSlideUnderSlideNode:(id)arg1;
+ (BOOL)needsObjectUUID;
+ (id)nodesAndDescendantsForNodes:(id)arg1 includeSkippedSlideNodes:(BOOL)arg2 includingCollapsedSlideNodes:(BOOL)arg3;
+ (id)nodesAndDescendantsForNodes:(id)arg1;
+ (id)p_nextAfterSlideNode:(id)arg1;
+ (id)p_previousToSlideNode:(id)arg1;
+ (id)parentSlideNodeForInfo:(id)arg1;
+ (id)slideNodeForSelectionModel:(id)arg1 withSelection:(id)arg2;

- (void)addThumbnail:(id)arg1 atSize:(struct CGSize { float x1; float x2; })arg2;
- (id)childEnumerator;
- (id)childSearchTargets;
- (id)children;
- (id)classicUniqueID;
- (id)copiedFromSlideIdentifier;
- (id)copyForPasteboard:(id)arg1;
- (void)dealloc;
- (unsigned int)depth;
- (id)descendants;
- (id)descendantsIncludingSkippedSlideNodes:(BOOL)arg1 includingCollapsedSlideNodes:(BOOL)arg2;
- (void)didLoadSlide:(id)arg1;
- (unsigned int)eventCount;
- (void)generateNewUniqueIdentifier;
- (BOOL)hasBodyInOutlineView;
- (BOOL)hasBuildEvents;
- (BOOL)hasChildren;
- (BOOL)hasExplicitBuilds;
- (BOOL)hasNote;
- (BOOL)hasTransition;
- (id)initFromUnarchiver:(id)arg1;
- (id)initWithContext:(id)arg1;
- (BOOL)isCollapsed;
- (BOOL)isCollapsedInOutlineView;
- (BOOL)isHidden;
- (BOOL)isSlideNumberVisible;
- (void)loadFromArchive:(const struct SlideNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct RepeatedPtrField<TSP::Reference> { void **x_3_1_1; int x_3_1_2; int x_3_1_3; int x_3_1_4; } x3; struct Reference {} *x4; struct RepeatedPtrField<TSP::DataReference> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct RepeatedPtrField<TSP::Size> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x15; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x16; boolx17; boolx18; unsigned int x19; struct Reference {} *x20; struct RepeatedPtrField<TSP::Reference> { void **x_21_1_1; int x_21_1_2; int x_21_1_3; int x_21_1_4; } x21; unsigned int x22; int x23; unsigned int x24[1]; }*)arg1 unarchiver:(id)arg2;
- (id)next;
- (id)nextSkippingCollapsed;
- (id)nextSkippingHidden;
- (unsigned int)nextUntitledResolverIndex;
- (void)p_addDescendantsToArray:(id)arg1 includeSkippedSlideNodes:(BOOL)arg2 includeCollapsedSlideNodes:(BOOL)arg3;
- (void)p_commonInit;
- (id)parent;
- (id)previous;
- (id)previousSkippingCollapsed;
- (id)previousSkippingHidden;
- (void)removeAllThumbnails;
- (void)removeThumbnailAtSize:(struct CGSize { float x1; float x2; })arg1;
- (id)resolverMatchingName:(id)arg1;
- (BOOL)resolverNameIsUsed:(id)arg1;
- (id)resolversMatchingPrefix:(id)arg1;
- (void)revert;
- (void)saveToArchive:(struct SlideNodeArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; struct RepeatedPtrField<TSP::Reference> { void **x_3_1_1; int x_3_1_2; int x_3_1_3; int x_3_1_4; } x3; struct Reference {} *x4; struct RepeatedPtrField<TSP::DataReference> { void **x_5_1_1; int x_5_1_2; int x_5_1_3; int x_5_1_4; } x5; struct RepeatedPtrField<TSP::Size> { void **x_6_1_1; int x_6_1_2; int x_6_1_3; int x_6_1_4; } x6; boolx7; boolx8; boolx9; boolx10; boolx11; boolx12; boolx13; boolx14; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x15; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x16; boolx17; boolx18; unsigned int x19; struct Reference {} *x20; struct RepeatedPtrField<TSP::Reference> { void **x_21_1_1; int x_21_1_2; int x_21_1_3; int x_21_1_4; } x21; unsigned int x22; int x23; unsigned int x24[1]; }*)arg1 archiver:(id)arg2;
- (void)saveToArchiver:(id)arg1;
- (void)setChildren:(id)arg1;
- (void)setClassicUniqueID:(id)arg1;
- (void)setCollapsed:(BOOL)arg1;
- (void)setCollapsedInOutlineView:(BOOL)arg1;
- (void)setCopiedFromSlideIdentifier:(id)arg1;
- (void)setHasBodyInOutlineView:(BOOL)arg1;
- (void)setHasNote:(BOOL)arg1;
- (void)setHasTransition:(BOOL)arg1;
- (void)setHidden:(BOOL)arg1;
- (void)setIsSlideNumberVisible:(BOOL)arg1;
- (void)setParent:(id)arg1;
- (void)setSlide:(id)arg1;
- (void)setSlideSpecificHyperlinksCount:(unsigned int)arg1;
- (void)setThumbnailsAreDirty:(BOOL)arg1;
- (id)slide;
- (id)slideIfLoaded;
- (unsigned int)slideSpecificHyperlinksCount;
- (id)thumbnails;
- (BOOL)thumbnailsAreDirty;
- (id)uniqueIdentifier;
- (void)uniquifyTableNamesForUpgradeOrImport;
- (void)updateEventCount;
- (void)wasAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)wasRemovedFromDocumentRoot:(id)arg1;
- (void)willBeAddedToDocumentRoot:(id)arg1 context:(id)arg2;
- (void)willBeRemovedFromDocumentRoot:(id)arg1;

@end
