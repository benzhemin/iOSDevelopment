/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@class CKDPRecord, CKDPRecordSaveRequestConflictLoserUpdate, NSMutableArray, NSString;

@interface CKDPRecordSaveRequest : PBRequest <NSCopying> {
    struct { 
        unsigned int saveSemantics : 1; 
        unsigned int merge : 1; 
    CKDPRecordSaveRequestConflictLoserUpdate *_conflictLoserUpdate;
    NSMutableArray *_conflictLosersToResolves;
    NSString *_etag;
    NSMutableArray *_fieldsToDeleteIfExistOnMerges;
    } _has;
    BOOL _merge;
    CKDPRecord *_record;
    NSString *_recordProtectionInfoTag;
    int _saveSemantics;
    NSString *_zoneProtectionInfoTag;
}

@property(retain) CKDPRecordSaveRequestConflictLoserUpdate * conflictLoserUpdate;
@property(retain) NSMutableArray * conflictLosersToResolves;
@property(retain) NSString * etag;
@property(retain) NSMutableArray * fieldsToDeleteIfExistOnMerges;
@property(readonly) BOOL hasConflictLoserUpdate;
@property(readonly) BOOL hasEtag;
@property BOOL hasMerge;
@property(readonly) BOOL hasRecord;
@property(readonly) BOOL hasRecordProtectionInfoTag;
@property BOOL hasSaveSemantics;
@property(readonly) BOOL hasZoneProtectionInfoTag;
@property BOOL merge;
@property(retain) CKDPRecord * record;
@property(retain) NSString * recordProtectionInfoTag;
@property int saveSemantics;
@property(retain) NSString * zoneProtectionInfoTag;

+ (id)options;

- (void).cxx_destruct;
- (void)addConflictLosersToResolve:(id)arg1;
- (void)addFieldsToDeleteIfExistOnMerge:(id)arg1;
- (void)clearConflictLosersToResolves;
- (void)clearFieldsToDeleteIfExistOnMerges;
- (id)conflictLoserUpdate;
- (id)conflictLosersToResolveAtIndex:(unsigned int)arg1;
- (id)conflictLosersToResolves;
- (unsigned int)conflictLosersToResolvesCount;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (id)etag;
- (id)fieldsToDeleteIfExistOnMergeAtIndex:(unsigned int)arg1;
- (id)fieldsToDeleteIfExistOnMerges;
- (unsigned int)fieldsToDeleteIfExistOnMergesCount;
- (BOOL)hasConflictLoserUpdate;
- (BOOL)hasEtag;
- (BOOL)hasMerge;
- (BOOL)hasRecord;
- (BOOL)hasRecordProtectionInfoTag;
- (BOOL)hasSaveSemantics;
- (BOOL)hasZoneProtectionInfoTag;
- (unsigned int)hash;
- (BOOL)isEqual:(id)arg1;
- (BOOL)merge;
- (void)mergeFrom:(id)arg1;
- (BOOL)readFrom:(id)arg1;
- (id)record;
- (id)recordProtectionInfoTag;
- (unsigned int)requestTypeCode;
- (Class)responseClass;
- (int)saveSemantics;
- (void)setConflictLoserUpdate:(id)arg1;
- (void)setConflictLosersToResolves:(id)arg1;
- (void)setEtag:(id)arg1;
- (void)setFieldsToDeleteIfExistOnMerges:(id)arg1;
- (void)setHasMerge:(BOOL)arg1;
- (void)setHasSaveSemantics:(BOOL)arg1;
- (void)setMerge:(BOOL)arg1;
- (void)setRecord:(id)arg1;
- (void)setRecordProtectionInfoTag:(id)arg1;
- (void)setSaveSemantics:(int)arg1;
- (void)setZoneProtectionInfoTag:(id)arg1;
- (void)writeTo:(id)arg1;
- (id)zoneProtectionInfoTag;

@end
