/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

/* RuntimeBrowser encountered an ivar type encoding it does not handle. 
   See Warning(s) below.
 */

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface SKShader : NSObject <NSCopying, NSCoding> {
    double _prevUniformUpdateTime;
    NSString *_source;
    NSMutableDictionary *_uniformData;
    NSMutableArray *_uniforms;
    struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; } *_xglProgram;
    bool_builtInUniformsDirty;
    bool_programIsDirty;
}

@property struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; /* Warning: unhandled struct encoding: '{map<std::__1::basic_string<char>' */ struct x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; unsigned long long x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; inout void*x61; void*x62; void*x63; void*x64; union x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; union x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; bycopy unsigned char x98; out void*x99; void*x100; long x101; void*x102; void*x103; int x104; out in void*x105; void*x106; void*x107; bycopy void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; oneway void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; id x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; const void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; in void*x215; out void*x216; double x217; void*x218; void*x219; void*x220; void*x221; void*x222; short x223; void*x224; void*x225; void*x226; double x227; void*x228; SEL x229; void*x230; SEL x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; SEL x239; void*x240; SEL x241; void*x242; void*x243; void*x244; void*x245; void*x246; void x247; void*x248; void*x249; void*x250; long x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; void*x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; void*x267; void*x268; short x269; void*x270; void*x271; void*x272; double x273; void*x274; SEL x275; void*x276; SEL x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; void*x284; SEL x285; void*x286; SEL x287; void*x288; unsigned int x289/* : ? */; void*x290; void*x291; void*x292; short x293; void*x294; int x295; void*x296; BOOL x297; void*x298; void*x299; void*x300; short x301; void*x302; void*x303; void*x304; const void*x305; int x306; void*x307; in void*x308; void*x309; void*x310; void*x311; void*x312; BOOL x313; void*x314; void*x315; void*x316; void*x317; void*x318; const void*x319; void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; in void*x328; short x329; void*x330; int x331; void*x332; void*x333; void*x334; in void*x335; void*x336; void*x337; double x338; void*x339; void*x340; void*x341; int x342; void*x343; in void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void x353; void*x354; out void*x355; int x356; void*x357; double x358; void*x359; void*x360; void*x361; char *x362; void*x363; void*x364; void*x365; void*x366; void*x367; struct x368; void*x369; }* _xglProgram; /* unknown property attribute:  true> >=L}}}} */
@property(readonly) NSArray * _textureUniforms;
@property(copy) NSString * source;
@property(copy) NSArray * uniforms;

+ (id)shader;
+ (id)shaderWithFileNamed:(id)arg1;
+ (id)shaderWithSource:(id)arg1 uniforms:(id)arg2;
+ (id)shaderWithSource:(id)arg1;

- (void).cxx_destruct;
- (void)_createProgram;
- (id)_getShaderCompilationLog;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_syncUniformsForTime:(double)arg1;
- (id)_textureUniforms;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_updateUniforms;
- (struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)_xglProgram;
- (void)addUniform:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithSource:(id)arg1 uniforms:(id)arg2;
- (id)initWithSource:(id)arg1;
- (BOOL)isValid;
- (void)removeUniformNamed:(id)arg1;
- (void)setSource:(id)arg1;
- (void)setUniforms:(id)arg1;
- (void)set_xglProgram:(struct xglProgram { boolx1; unsigned int x2; unsigned int x3; unsigned int x4; struct shared_ptr<char> { char *x_5_1_1; struct __shared_weak_count {} *x_5_1_2; } x5; struct shared_ptr<char> { char *x_6_1_1; struct __shared_weak_count {} *x_6_1_2; } x6; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_7_1_1; } x7; struct map<std::__1::basic_string<char>, unsigned int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned int> > > { struct __tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned int> > > { struct __tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> {} *x_1_2_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_4_1; } x_2_3_1; } x_1_2_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned int>, std::__1::less<std::__1::basic_string<char> >, true> > { unsigned long x_3_3_1; } x_1_2_3; } x_8_1_1; } x8; }*)arg1;
- (id)source;
- (id)uniformNamed:(id)arg1;
- (id)uniforms;

@end
